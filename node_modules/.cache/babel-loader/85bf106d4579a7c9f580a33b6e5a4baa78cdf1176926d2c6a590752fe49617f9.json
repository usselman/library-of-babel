{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OGCards=function OGCards(_ref){var ordinal=_ref.ordinal,address=_ref.address,transferOrdinal=_ref.transferOrdinal;var _useState=useState('Pending'),_useState2=_slicedToArray(_useState,2),verificationStatus=_useState2[0],setVerificationStatus=_useState2[1];var isDigit=function isDigit(item){var _item$data,_item$data$insc,_item$data2,_item$data2$insc;var selectedIndex=((_item$data=item.data)===null||_item$data===void 0?void 0:(_item$data$insc=_item$data.insc)===null||_item$data$insc===void 0?void 0:_item$data$insc.words[0])==='og'?1:0;var parsed=parseInt((_item$data2=item.data)===null||_item$data2===void 0?void 0:(_item$data2$insc=_item$data2.insc)===null||_item$data2$insc===void 0?void 0:_item$data2$insc.words[selectedIndex],10);return!isNaN(parsed);};var checkOnOrdinalsGorillaPool=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(txid){var ordinalsResponse,ordinalsData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://ordinals.gorillapool.io/api/locks/txid/\".concat(txid));case 3:ordinalsResponse=_context.sent;_context.next=6;return ordinalsResponse.json();case 6:ordinalsData=_context.sent;if(ordinalsData.length>0&&ordinalsData[0].satoshis>=1000000&&ordinalsData[0].data&&ordinalsData[0].data.lock&&ordinalsData[0].data.lock.until===1050000){setVerificationStatus(\"Verified (✓)\");}else{setVerificationStatus(\"Not Verified (✗)\");}_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error('Error checking on Ordinals GorillaPool:',_context.t0);setVerificationStatus(\"Verification Error\");case 14:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function checkOnOrdinalsGorillaPool(_x){return _ref2.apply(this,arguments);};}();var verifyRecord=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var searchResponse,searchData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!isDigit(ordinal)){_context2.next=17;break;}_context2.prev=1;_context2.next=4;return fetch('https://ordinals.gorillapool.io/api/inscriptions/search?sort=ASC&limit=1&offset=0',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({insc:{file:{hash:ordinal.data.insc.file.hash}}})});case 4:searchResponse=_context2.sent;_context2.next=7;return searchResponse.json();case 7:searchData=_context2.sent;if(searchData[0]&&searchData[0].txid===ordinal.txid){checkOnOrdinalsGorillaPool(ordinal.txid);}else{setVerificationStatus(\"Not the first inscription (✗)\");}_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);console.error('Error verifying record:',_context2.t0);setVerificationStatus(\"Verification Error\");case 15:_context2.next=18;break;case 17:setVerificationStatus(\"Not A Number (✗)\");case 18:case\"end\":return _context2.stop();}},_callee2,null,[[1,11]]);}));return function verifyRecord(){return _ref3.apply(this,arguments);};}();useEffect(function(){verifyRecord();},[]);var handleTransfer=function handleTransfer(){// Prompt for the receiver's address\nvar receiverAddress=prompt(\"Enter the receiver's address:\");if(!receiverAddress)return;// Extract origin and outpoint from the ordinal\nvar origin=ordinal.origin,outpoint=ordinal.outpoint;// Call transferOrdinal function passed as a prop\ntransferOrdinal(receiverAddress,origin,outpoint);};return/*#__PURE__*/_jsx(\"div\",{className:\"rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold text-lg mb-2\",children:ordinal.data.insc.text}),/*#__PURE__*/_jsx(\"div\",{className:\"m-4\",style:{color:verificationStatus.includes(\"✓\")?'green':'red'},children:verificationStatus}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleTransfer,className:\"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\",children:\"Transfer\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-0 border-black text-md rounded-xl p-4 bg-white mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://whatsonchain.com/tx/\".concat(ordinal.txid),children:\"tx\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://whatsonchain.com/block-height/\".concat(ordinal.height),children:[\"blk: \",ordinal.height]})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://1satordinals.com/inscription/\".concat(ordinal.origin.num),children:[\"#\",ordinal.origin.num]})})]})]})});};export default OGCards;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","OGCards","_ref","ordinal","address","transferOrdinal","_useState","_useState2","_slicedToArray","verificationStatus","setVerificationStatus","isDigit","item","_item$data","_item$data$insc","_item$data2","_item$data2$insc","selectedIndex","data","insc","words","parsed","parseInt","isNaN","checkOnOrdinalsGorillaPool","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","txid","ordinalsResponse","ordinalsData","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","length","satoshis","lock","until","t0","console","error","stop","_x","apply","arguments","verifyRecord","_ref3","_callee2","searchResponse","searchData","_callee2$","_context2","method","headers","body","JSON","stringify","file","hash","handleTransfer","receiverAddress","prompt","origin","outpoint","className","children","text","style","color","includes","onClick","href","height","num"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst OGCards = ({ ordinal, address, transferOrdinal }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n\n    const isDigit = (item) => {\n        const selectedIndex = item.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    const checkOnOrdinalsGorillaPool = async (txid) => {\n        try {\n            const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n            const ordinalsData = await ordinalsResponse.json();\n            if (ordinalsData.length > 0 && ordinalsData[0].satoshis >= 1000000 && ordinalsData[0].data && ordinalsData[0].data.lock && ordinalsData[0].data.lock.until === 1050000) {\n                setVerificationStatus(\"Verified (✓)\");\n            } else {\n                setVerificationStatus(\"Not Verified (✗)\");\n            }\n        } catch (error) {\n            console.error('Error checking on Ordinals GorillaPool:', error);\n            setVerificationStatus(\"Verification Error\");\n        }\n    };\n\n    const verifyRecord = async () => {\n        if (isDigit(ordinal)) {\n            try {\n                const searchResponse = await fetch('https://ordinals.gorillapool.io/api/inscriptions/search?sort=ASC&limit=1&offset=0', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ insc: { file: { hash: ordinal.data.insc.file.hash } } })\n                });\n                const searchData = await searchResponse.json();\n\n                if (searchData[0] && searchData[0].txid === ordinal.txid) {\n                    checkOnOrdinalsGorillaPool(ordinal.txid);\n                } else {\n                    setVerificationStatus(\"Not the first inscription (✗)\");\n                }\n            } catch (error) {\n                console.error('Error verifying record:', error);\n                setVerificationStatus(\"Verification Error\");\n            }\n        } else {\n            setVerificationStatus(\"Not A Number (✗)\");\n        }\n    };\n\n    useEffect(() => {\n        verifyRecord();\n    }, []);\n\n    const handleTransfer = () => {\n        // Prompt for the receiver's address\n        const receiverAddress = prompt(\"Enter the receiver's address:\");\n        if (!receiverAddress) return;\n\n        // Extract origin and outpoint from the ordinal\n        const { origin, outpoint } = ordinal;\n\n        // Call transferOrdinal function passed as a prop\n        transferOrdinal(receiverAddress, origin, outpoint);\n    };\n\n    return (\n        <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl`}>\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-lg mb-2\">{ordinal.data.insc.text}</div>\n                {/* <button onClick={verifyRecord} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                    Verify\n                </button> */}\n                <div\n                    className=\"m-4\"\n                    style={{ color: verificationStatus.includes(\"✓\") ? 'green' : 'red' }}>\n                    {verificationStatus}\n                </div>\n                <div className=\"text-center mt-4\">\n                    <button\n                        onClick={handleTransfer}\n                        className=\"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\">\n                        Transfer\n                    </button>\n                </div>\n                <div className=\"border-0 border-black text-md rounded-xl p-4 bg-white mt-4\">\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>tx</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default OGCards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}