{"ast":null,"code":"/*! For license information please see bsv.module.js.LICENSE.txt */\n(() => {\n  var t = {\n      671: (t, e, r) => {\n        \"use strict\";\n\n        r.r(e), r.d(e, {\n          Ach: () => mt,\n          Address: () => z,\n          Aes: () => lt,\n          Aescbc: () => bt,\n          Base58: () => _,\n          Base58Check: () => k,\n          Bip32: () => G,\n          Bip39: () => Y,\n          Block: () => at,\n          BlockHeader: () => $,\n          Bn: () => p,\n          Br: () => g,\n          Bsm: () => Z,\n          Bw: () => y,\n          Cbc: () => pt,\n          Constants: () => x,\n          Ecdsa: () => X,\n          Ecies: () => gt,\n          Hash: () => P,\n          Interp: () => ot,\n          KeyPair: () => Q,\n          OpCode: () => T,\n          Point: () => L,\n          PrivKey: () => V,\n          PubKey: () => K,\n          Random: () => D,\n          Script: () => q,\n          Sig: () => j,\n          SigOperations: () => ht,\n          Struct: () => S,\n          Tx: () => nt,\n          TxBuilder: () => ut,\n          TxIn: () => it,\n          TxOut: () => st,\n          TxOutMap: () => ft,\n          TxVerifier: () => dt,\n          VarInt: () => rt,\n          Workers: () => E,\n          WorkersResult: () => I,\n          cmp: () => B,\n          deps: () => yt,\n          en: () => J,\n          getConstants: () => R,\n          jp: () => W,\n          version: () => wt\n        });\n        var i = r(297),\n          s = r.n(i),\n          n = r(550),\n          a = r.n(n),\n          o = r(191),\n          h = r.n(o),\n          f = r(666),\n          c = r.n(f),\n          u = r(715),\n          d = r.n(u),\n          l = r(601);\n        function p(t, e, ...r) {\n          if (!(this instanceof p)) return new p(t, e, ...r);\n          a().call(this, t, e, ...r);\n        }\n        function b(t) {\n          const e = Buffer.alloc(t.length);\n          for (let r = 0; r < t.length; r++) e[r] = t[t.length - 1 - r];\n          return e;\n        }\n        function m(t) {\n          p.prototype[\"_\" + t] = p.prototype[t], p.prototype[t] = function (e) {\n            return \"string\" == typeof e ? e = new p(e) : \"number\" == typeof e && (e = new p(e.toString())), this[\"_\" + t](e);\n          };\n        }\n        Object.keys(a()).forEach(function (t) {\n          p[t] = a()[t];\n        }), p.prototype = Object.create(a().prototype), p.prototype.constructor = p, p.prototype.fromHex = function (t, e) {\n          return this.fromBuffer(Buffer.from(t, \"hex\"), e);\n        }, p.prototype.toHex = function (t) {\n          return this.toBuffer(t).toString(\"hex\");\n        }, p.prototype.toJSON = function () {\n          return this.toString();\n        }, p.prototype.fromJSON = function (t) {\n          return p(t).copy(this), this;\n        }, p.prototype.fromNumber = function (t) {\n          return p(t).copy(this), this;\n        }, p.prototype.toNumber = function () {\n          return parseInt(this.toString(10), 10);\n        }, p.prototype.fromString = function (t, e) {\n          return p(t, e).copy(this), this;\n        }, p.fromBuffer = function (t, e = {\n          endian: \"big\"\n        }) {\n          return \"little\" === e.endian && (t = b(t)), new p(t.toString(\"hex\"), 16);\n        }, p.prototype.fromBuffer = function (t, e) {\n          return p.fromBuffer(t, e).copy(this), this;\n        }, p.prototype.toBuffer = function (t = {\n          size: void 0,\n          endian: \"big\"\n        }) {\n          let e;\n          if (t.size) {\n            const r = this.toString(16, 2),\n              i = r.length / 2;\n            if (e = Buffer.from(r, \"hex\"), i === t.size) ;else if (i > t.size) e = e.slice(i - e.length, e.length);else if (i < t.size) {\n              const r = Buffer.alloc(t.size);\n              for (let t = 0; t < e.length; t++) r[r.length - 1 - t] = e[e.length - 1 - t];\n              for (let e = 0; e < t.size - i; e++) r[e] = 0;\n              e = r;\n            }\n          } else {\n            const t = this.toString(16, 2);\n            e = Buffer.from(t, \"hex\");\n          }\n          \"little\" === t.endian && (e = b(e));\n          const r = Buffer.from([0]);\n          return 0 === Buffer.compare(e, r) ? Buffer.from([]) : e;\n        }, p.prototype.toFastBuffer = p.prototype.toBuffer, p.fromFastBuffer = p.fromBuffer, p.prototype.fromFastBuffer = p.prototype.fromBuffer, p.prototype.fromSm = function (t, e = {\n          endian: \"big\"\n        }) {\n          return 0 === t.length && this.fromBuffer(Buffer.from([0])), \"little\" === e.endian && (t = b(t)), 128 & t[0] ? (t[0] = 127 & t[0], this.fromBuffer(t), this.neg().copy(this)) : this.fromBuffer(t), this;\n        }, p.prototype.toSm = function (t = {\n          endian: \"big\"\n        }) {\n          const e = t.endian;\n          let r;\n          return -1 === this.cmp(0) ? (r = this.neg().toBuffer(), 128 & r[0] ? r = Buffer.concat([Buffer.from([128]), r]) : r[0] = 128 | r[0]) : (r = this.toBuffer(), 128 & r[0] && (r = Buffer.concat([Buffer.from([0]), r]))), 1 === r.length & 0 === r[0] && (r = Buffer.from([])), \"little\" === e && (r = b(r)), r;\n        }, p.prototype.fromBits = function (t, e = {\n          strict: !1\n        }) {\n          let r = Buffer.alloc(4);\n          if (r.writeUInt32BE(t, 0), t = r.readInt32BE(0), e.strict && 8388608 & t) throw new Error(\"negative bit set\");\n          const i = t >> 24,\n            s = 8388607 & t;\n          if (r = Buffer.alloc(4), r.writeInt32BE(s), i <= 3) r = r.slice(1, i + 1);else {\n            const t = Buffer.alloc(i - 3);\n            t.fill(0), r = Buffer.concat([r, t]);\n          }\n          return this.fromBuffer(r), 8388608 & t && p(0).sub(this).copy(this), this;\n        }, p.prototype.toBits = function () {\n          let t;\n          t = this.lt(0) ? this.neg().toBuffer() : this.toBuffer();\n          let e,\n            r = t.length;\n          if (r > 3) e = Buffer.concat([Buffer.from([0]), t.slice(0, 3)]).readUInt32BE(0);else if (r <= 3) {\n            const i = Buffer.alloc(3 - r + 1);\n            i.fill(0), e = Buffer.concat([i, t.slice(0, r)]).readUInt32BE(0);\n          }\n          8388608 & e && (e >>= 8, r++), this.lt(0) && (e |= 8388608);\n          const i = r << 24 | e;\n          return t = Buffer.alloc(4), t.writeInt32BE(i, 0), t.readUInt32BE(0);\n        }, p.prototype.fromScriptNumBuffer = function (t, e, r) {\n          if (void 0 === r && (r = 4), t.length > r) throw new Error(\"script number overflow\");\n          if (e && t.length > 0 && 0 == (127 & t[t.length - 1]) && (t.length <= 1 || 0 == (128 & t[t.length - 2]))) throw new Error(\"non-minimally encoded script number\");\n          return this.fromSm(t, {\n            endian: \"little\"\n          });\n        }, p.prototype.toScriptNumBuffer = function (t) {\n          return this.toSm({\n            endian: \"little\"\n          });\n        }, p.prototype.neg = function () {\n          const t = a().prototype.neg.call(this),\n            e = Object.create(p.prototype);\n          return t.copy(e), e;\n        }, p.prototype.add = function (t) {\n          const e = a().prototype.add.call(this, t);\n          return t = Object.create(p.prototype), e.copy(t), t;\n        }, p.prototype.sub = function (t) {\n          const e = a().prototype.sub.call(this, t);\n          return t = Object.create(p.prototype), e.copy(t), t;\n        }, p.prototype.mul = function (t) {\n          const e = a().prototype.mul.call(this, t);\n          return t = Object.create(p.prototype), e.copy(t), t;\n        }, p.prototype.mod = function (t) {\n          const e = a().prototype.mod.call(this, t);\n          return t = Object.create(p.prototype), e.copy(t), t;\n        }, p.prototype.umod = function (t) {\n          const e = a().prototype.umod.call(this, t);\n          return t = Object.create(p.prototype), e.copy(t), t;\n        }, p.prototype.invm = function (t) {\n          const e = a().prototype.invm.call(this, t);\n          return t = Object.create(p.prototype), e.copy(t), t;\n        }, p.prototype.div = function (t) {\n          const e = a().prototype.div.call(this, t);\n          return t = Object.create(p.prototype), e.copy(t), t;\n        }, p.prototype.ushln = function (t) {\n          const e = a().prototype.ushln.call(this, t),\n            r = Object.create(p.prototype);\n          return e.copy(r), r;\n        }, p.prototype.ushrn = function (t) {\n          const e = a().prototype.ushrn.call(this, t),\n            r = Object.create(p.prototype);\n          return e.copy(r), r;\n        }, p.prototype.cmp = function (t) {\n          return a().prototype.cmp.call(this, t);\n        }, p.prototype.eq = function (t) {\n          return 0 === this.cmp(t);\n        }, p.prototype.neq = function (t) {\n          return 0 !== this.cmp(t);\n        }, p.prototype.gt = function (t) {\n          return this.cmp(t) > 0;\n        }, p.prototype.geq = function (t) {\n          return this.cmp(t) >= 0;\n        }, p.prototype.lt = function (t) {\n          return this.cmp(t) < 0;\n        }, p.prototype.leq = function (t) {\n          return this.cmp(t) <= 0;\n        }, m(\"add\"), m(\"sub\"), m(\"mul\"), m(\"mod\"), m(\"invm\"), m(\"div\"), m(\"cmp\"), m(\"gt\"), m(\"geq\"), m(\"lt\"), m(\"leq\");\n        class g {\n          constructor(t) {\n            this.fromObject({\n              buf: t\n            });\n          }\n          fromObject(t) {\n            return this.buf = t.buf || this.buf || void 0, this.pos = t.pos || this.pos || 0, this;\n          }\n          eof() {\n            return this.pos >= this.buf.length;\n          }\n          read(t = this.buf.length) {\n            const e = this.buf.slice(this.pos, this.pos + t);\n            return this.pos = this.pos + t, e;\n          }\n          readReverse(t = this.buf.length) {\n            const e = this.buf.slice(this.pos, this.pos + t);\n            this.pos = this.pos + t;\n            const r = Buffer.alloc(e.length);\n            for (let t = 0; t < r.length; t++) r[t] = e[e.length - 1 - t];\n            return r;\n          }\n          readUInt8() {\n            const t = this.buf.readUInt8(this.pos);\n            return this.pos = this.pos + 1, t;\n          }\n          readInt8() {\n            const t = this.buf.readInt8(this.pos);\n            return this.pos = this.pos + 1, t;\n          }\n          readUInt16BE() {\n            const t = this.buf.readUInt16BE(this.pos);\n            return this.pos = this.pos + 2, t;\n          }\n          readInt16BE() {\n            const t = this.buf.readInt16BE(this.pos);\n            return this.pos = this.pos + 2, t;\n          }\n          readUInt16LE() {\n            const t = this.buf.readUInt16LE(this.pos);\n            return this.pos = this.pos + 2, t;\n          }\n          readInt16LE() {\n            const t = this.buf.readInt16LE(this.pos);\n            return this.pos = this.pos + 2, t;\n          }\n          readUInt32BE() {\n            const t = this.buf.readUInt32BE(this.pos);\n            return this.pos = this.pos + 4, t;\n          }\n          readInt32BE() {\n            const t = this.buf.readInt32BE(this.pos);\n            return this.pos = this.pos + 4, t;\n          }\n          readUInt32LE() {\n            const t = this.buf.readUInt32LE(this.pos);\n            return this.pos = this.pos + 4, t;\n          }\n          readInt32LE() {\n            const t = this.buf.readInt32LE(this.pos);\n            return this.pos = this.pos + 4, t;\n          }\n          readUInt64BEBn() {\n            const t = this.buf.slice(this.pos, this.pos + 8),\n              e = new p().fromBuffer(t);\n            return this.pos = this.pos + 8, e;\n          }\n          readUInt64LEBn() {\n            const t = this.readReverse(8);\n            return new p().fromBuffer(t);\n          }\n          readVarIntNum() {\n            const t = this.readUInt8();\n            let e, r;\n            switch (t) {\n              case 253:\n                return this.readUInt16LE();\n              case 254:\n                return this.readUInt32LE();\n              case 255:\n                if (e = this.readUInt64LEBn(), r = e.toNumber(), r <= Math.pow(2, 53)) return r;\n                throw new Error(\"number too large to retain precision - use readVarIntBn\");\n              default:\n                return t;\n            }\n          }\n          readVarIntBuf() {\n            switch (this.buf.readUInt8(this.pos)) {\n              case 253:\n                return this.read(3);\n              case 254:\n                return this.read(5);\n              case 255:\n                return this.read(9);\n              default:\n                return this.read(1);\n            }\n          }\n          readVarIntBn() {\n            const t = this.readUInt8();\n            switch (t) {\n              case 253:\n                return new p(this.readUInt16LE());\n              case 254:\n                return new p(this.readUInt32LE());\n              case 255:\n                return this.readUInt64LEBn();\n              default:\n                return new p(t);\n            }\n          }\n        }\n        class y {\n          constructor(t) {\n            this.fromObject({\n              bufs: t\n            });\n          }\n          fromObject(t) {\n            return this.bufs = t.bufs || this.bufs || [], this;\n          }\n          getLength() {\n            let t = 0;\n            for (const e in this.bufs) t += this.bufs[e].length;\n            return t;\n          }\n          toBuffer() {\n            return Buffer.concat(this.bufs);\n          }\n          write(t) {\n            return this.bufs.push(t), this;\n          }\n          writeReverse(t) {\n            const e = Buffer.alloc(t.length);\n            for (let r = 0; r < e.length; r++) e[r] = t[t.length - 1 - r];\n            return this.bufs.push(e), this;\n          }\n          writeUInt8(t) {\n            const e = Buffer.alloc(1);\n            return e.writeUInt8(t, 0), this.write(e), this;\n          }\n          writeInt8(t) {\n            const e = Buffer.alloc(1);\n            return e.writeInt8(t, 0), this.write(e), this;\n          }\n          writeUInt16BE(t) {\n            const e = Buffer.alloc(2);\n            return e.writeUInt16BE(t, 0), this.write(e), this;\n          }\n          writeInt16BE(t) {\n            const e = Buffer.alloc(2);\n            return e.writeInt16BE(t, 0), this.write(e), this;\n          }\n          writeUInt16LE(t) {\n            const e = Buffer.alloc(2);\n            return e.writeUInt16LE(t, 0), this.write(e), this;\n          }\n          writeInt16LE(t) {\n            const e = Buffer.alloc(2);\n            return e.writeInt16LE(t, 0), this.write(e), this;\n          }\n          writeUInt32BE(t) {\n            const e = Buffer.alloc(4);\n            return e.writeUInt32BE(t, 0), this.write(e), this;\n          }\n          writeInt32BE(t) {\n            const e = Buffer.alloc(4);\n            return e.writeInt32BE(t, 0), this.write(e), this;\n          }\n          writeUInt32LE(t) {\n            const e = Buffer.alloc(4);\n            return e.writeUInt32LE(t, 0), this.write(e), this;\n          }\n          writeInt32LE(t) {\n            const e = Buffer.alloc(4);\n            return e.writeInt32LE(t, 0), this.write(e), this;\n          }\n          writeUInt64BEBn(t) {\n            const e = t.toBuffer({\n              size: 8\n            });\n            return this.write(e), this;\n          }\n          writeUInt64LEBn(t) {\n            const e = t.toBuffer({\n              size: 8\n            });\n            return this.writeReverse(e), this;\n          }\n          writeVarIntNum(t) {\n            const e = y.varIntBufNum(t);\n            return this.write(e), this;\n          }\n          writeVarIntBn(t) {\n            const e = y.varIntBufBn(t);\n            return this.write(e), this;\n          }\n          static varIntBufNum(t) {\n            let e;\n            return t < 253 ? (e = Buffer.alloc(1), e.writeUInt8(t, 0)) : t < 65536 ? (e = Buffer.alloc(3), e.writeUInt8(253, 0), e.writeUInt16LE(t, 1)) : t < 4294967296 ? (e = Buffer.alloc(5), e.writeUInt8(254, 0), e.writeUInt32LE(t, 1)) : (e = Buffer.alloc(9), e.writeUInt8(255, 0), e.writeInt32LE(-1 & t, 1), e.writeUInt32LE(Math.floor(t / 4294967296), 5)), e;\n          }\n          static varIntBufBn(t) {\n            let e;\n            const r = t.toNumber();\n            if (r < 253) e = Buffer.alloc(1), e.writeUInt8(r, 0);else if (r < 65536) e = Buffer.alloc(3), e.writeUInt8(253, 0), e.writeUInt16LE(r, 1);else if (r < 4294967296) e = Buffer.alloc(5), e.writeUInt8(254, 0), e.writeUInt32LE(r, 1);else {\n              const r = new y();\n              r.writeUInt8(255), r.writeUInt64LEBn(t), e = r.toBuffer();\n            }\n            return e;\n          }\n        }\n        var w = r(484),\n          v = r.n(w);\n        class S {\n          constructor(t) {\n            this.fromObject(t);\n          }\n          fromObject(t) {\n            if (!t) return this;\n            for (const e of Object.keys(t)) void 0 !== t[e] && (this[e] = t[e]);\n            return this;\n          }\n          static fromObject(t) {\n            return new this().fromObject(t);\n          }\n          fromBr(t) {\n            if (!(t instanceof g)) throw new Error(\"br must be a buffer reader\");\n            throw new Error(\"not implemented\");\n          }\n          static fromBr(t) {\n            return new this().fromBr(t);\n          }\n          asyncFromBr(t) {\n            if (!(t instanceof g)) throw new Error(\"br must be a buffer reader\");\n            throw new Error(\"not implemented\");\n          }\n          static asyncFromBr(t) {\n            return new this().asyncFromBr(t);\n          }\n          toBw(t) {\n            throw new Error(\"not implemented\");\n          }\n          asyncToBw(t) {\n            throw new Error(\"not implemented\");\n          }\n          *genFromBuffers() {\n            throw new Error(\"not implemented\");\n          }\n          *expect(t, e) {\n            let r = e;\n            const i = new y();\n            let s = 0;\n            for (e && (i.write(e), s += e.length); s < t;) {\n              const e = t - s;\n              r = yield e, r && (i.write(r), s += r.length);\n            }\n            r = i.toBuffer();\n            const n = s - t,\n              a = r.slice(r.length - n, r.length);\n            return r = r.slice(0, r.length - n), {\n              buf: r,\n              remainderbuf: a\n            };\n          }\n          fromBuffer(t, ...e) {\n            if (!Buffer.isBuffer(t)) throw new Error(\"buf must be a buffer\");\n            const r = new g(t);\n            return this.fromBr(r, ...e);\n          }\n          static fromBuffer(...t) {\n            return new this().fromBuffer(...t);\n          }\n          asyncFromBuffer(t, ...e) {\n            if (!Buffer.isBuffer(t)) throw new Error(\"buf must be a buffer\");\n            const r = new g(t);\n            return this.asyncFromBr(r, ...e);\n          }\n          static asyncFromBuffer(t, ...e) {\n            return new this().asyncFromBuffer(t, ...e);\n          }\n          fromFastBuffer(t, ...e) {\n            return 0 === t.length ? this : this.fromBuffer(t, ...e);\n          }\n          static fromFastBuffer(...t) {\n            return new this().fromFastBuffer(...t);\n          }\n          toBuffer(...t) {\n            return this.toBw(...t).toBuffer();\n          }\n          asyncToBuffer(...t) {\n            return this.asyncToBw(...t).then(t => t.toBuffer());\n          }\n          toFastBuffer(...t) {\n            return 0 === Object.keys(this).length ? Buffer.alloc(0) : this.toBuffer(...t);\n          }\n          fromHex(t, ...e) {\n            if (!v()(t)) throw new Error(\"invalid hex string\");\n            const r = Buffer.from(t, \"hex\");\n            return this.fromBuffer(r, ...e);\n          }\n          static fromHex(t, ...e) {\n            return new this().fromHex(t, ...e);\n          }\n          asyncFromHex(t, ...e) {\n            if (!v()(t)) throw new Error(\"invalid hex string\");\n            const r = Buffer.from(t, \"hex\");\n            return this.asyncFromBuffer(r, ...e);\n          }\n          static asyncFromHex(t, ...e) {\n            return new this().asyncFromHex(t, ...e);\n          }\n          fromFastHex(t, ...e) {\n            if (!v()(t)) throw new Error(\"invalid hex string\");\n            const r = Buffer.from(t, \"hex\");\n            return this.fromFastBuffer(r, ...e);\n          }\n          static fromFastHex(t, ...e) {\n            return new this().fromFastHex(t, ...e);\n          }\n          toHex(...t) {\n            return this.toBuffer(...t).toString(\"hex\");\n          }\n          asyncToHex(...t) {\n            return this.asyncToBuffer(...t).then(t => t.toString(\"hex\"));\n          }\n          toFastHex(...t) {\n            return this.toFastBuffer(...t).toString(\"hex\");\n          }\n          fromString(t, ...e) {\n            if (\"string\" != typeof t) throw new Error(\"str must be a string\");\n            return this.fromHex(t, ...e);\n          }\n          static fromString(t, ...e) {\n            return new this().fromString(t, ...e);\n          }\n          asyncFromString(t, ...e) {\n            if (\"string\" != typeof t) throw new Error(\"str must be a string\");\n            return this.asyncFromHex(t, ...e);\n          }\n          static asyncFromString(t, ...e) {\n            return new this().asyncFromString(t, ...e);\n          }\n          toString(...t) {\n            return this.toHex(...t);\n          }\n          asyncToString(...t) {\n            return this.asyncToHex(...t);\n          }\n          fromJSON(t) {\n            throw new Error(\"not implemented\");\n          }\n          static fromJSON(t, ...e) {\n            return new this().fromJSON(t, ...e);\n          }\n          asyncFromJSON(t, ...e) {\n            throw new Error(\"not implemented\");\n          }\n          static asyncFromJSON(t, ...e) {\n            return new this().asyncFromJSON(t, ...e);\n          }\n          toJSON() {\n            var t = {};\n            for (var e in this) if (Array.isArray(this[e])) {\n              const i = [];\n              for (var r in this[e]) \"function\" == typeof this[e][r].toJSON ? i.push(this[e][r].toJSON()) : i.push(JSON.stringify(this[e][r]));\n              t[e] = i;\n            } else if (null === this[e]) t[e] = this[e];else if (\"object\" == typeof this[e] && \"function\" == typeof this[e].toJSON) t[e] = this[e].toJSON();else if (\"boolean\" == typeof this[e] || \"number\" == typeof this[e] || \"string\" == typeof this[e]) t[e] = this[e];else if (Buffer.isBuffer(this[e])) t[e] = this[e].toString(\"hex\");else if (this[e] instanceof Map) t[e] = JSON.stringify(this[e]);else if (\"object\" == typeof this[e]) throw new Error(\"not implemented\");\n            return t;\n          }\n          asyncToJSON() {\n            throw new Error(\"not implemented\");\n          }\n          clone() {\n            return this.cloneByJSON();\n          }\n          cloneByBuffer() {\n            return new this.constructor().fromBuffer(this.toBuffer());\n          }\n          cloneByFastBuffer() {\n            return new this.constructor().fromFastBuffer(this.toFastBuffer());\n          }\n          cloneByHex() {\n            return new this.constructor().fromHex(this.toHex());\n          }\n          cloneByString() {\n            return new this.constructor().fromString(this.toString());\n          }\n          cloneByJSON() {\n            return new this.constructor().fromJSON(this.toJSON());\n          }\n        }\n        class _ extends S {\n          constructor(t) {\n            super({\n              buf: t\n            });\n          }\n          fromHex(t) {\n            return this.fromBuffer(Buffer.from(t, \"hex\"));\n          }\n          toHex() {\n            return this.toBuffer().toString(\"hex\");\n          }\n          static encode(t) {\n            if (!Buffer.isBuffer(t)) throw new Error(\"Input should be a buffer\");\n            return h().encode(t);\n          }\n          static decode(t) {\n            if (\"string\" != typeof t) throw new Error(\"Input should be a string\");\n            return Buffer.from(h().decode(t));\n          }\n          fromBuffer(t) {\n            return this.buf = t, this;\n          }\n          fromString(t) {\n            const e = _.decode(t);\n            return this.buf = e, this;\n          }\n          toBuffer() {\n            return this.buf;\n          }\n          toString() {\n            return _.encode(this.buf);\n          }\n        }\n        const B = (t, e) => {\n          if (!Buffer.isBuffer(t) || !Buffer.isBuffer(e)) throw new Error(\"buf1 and buf2 must be buffers\");\n          if (t.length !== e.length) return !1;\n          let r = 0;\n          for (let i = 0; i < t.length; i++) r |= t[i] ^ e[i];\n          return 0 === r;\n        };\n        class I extends S {\n          constructor(t, e, r) {\n            super({\n              resbuf: t,\n              isError: e,\n              id: r\n            });\n          }\n          fromResult(t, e) {\n            return t.toFastBuffer ? this.resbuf = t.toFastBuffer() : Buffer.isBuffer(t) ? this.resbuf = t : this.resbuf = Buffer.from(JSON.stringify(t)), this.isError = !1, this.id = e, this;\n          }\n          static fromResult(t, e) {\n            return new this().fromResult(t, e);\n          }\n          fromError(t, e) {\n            return this.resbuf = Buffer.from(JSON.stringify(t.message)), this.isError = !0, this.id = e, this;\n          }\n          toBw(t) {\n            return t || (t = new y()), t.writeVarIntNum(this.resbuf.length), t.write(this.resbuf), t.writeUInt8(Number(this.isError)), t.writeVarIntNum(this.id), t;\n          }\n          fromBr(t) {\n            const e = t.readVarIntNum();\n            return this.resbuf = t.read(e), this.isError = Boolean(t.readUInt8()), this.id = t.readVarIntNum(), this;\n          }\n        }\n        let O;\n        class E {\n          constructor(t = [], e = 0, r = [], i = new Map()) {\n            this.nativeWorkers = t, this.lastid = e, this.incompconsteRes = r, this.promisemap = i;\n          }\n          asyncObjectMethod(t, e, r, i = this.lastid + 1) {\n            if (!r) throw new Error(\"must specify args\");\n            const s = t[e](...r);\n            return new I().fromResult(s, i);\n          }\n          static asyncObjectMethod(t, e, r, i) {\n            return O || (O = new E()), O.asyncObjectMethod(t, e, r, i);\n          }\n          asyncClassMethod(t, e, r, i = this.lastid + 1) {\n            if (!r) throw new Error(\"must specify args\");\n            const s = t[e](...r);\n            return new I().fromResult(s, i);\n          }\n          static asyncClassMethod(t, e, r, i) {\n            return O || (O = new E()), O.asyncClassMethod(t, e, r, i);\n          }\n          static endGlobalWorkers() {\n            O && !process.browser && (O = void 0);\n          }\n        }\n        class P {}\n        P.sha1 = function (t) {\n          if (!Buffer.isBuffer(t)) throw new Error(\"sha1 hash must be of a buffer\");\n          const e = new (0, d().sha1)().update(t).digest();\n          return Buffer.from(e);\n        }, P.sha1.blockSize = 512, P.asyncSha1 = async function (t) {\n          const e = [t];\n          return (await E.asyncClassMethod(P, \"sha1\", e)).resbuf;\n        }, P.sha256 = function (t) {\n          if (!Buffer.isBuffer(t)) throw new Error(\"sha256 hash must be of a buffer\");\n          const e = new (0, d().sha256)().update(t).digest();\n          return Buffer.from(e);\n        }, P.sha256.blockSize = 512, P.asyncSha256 = async function (t) {\n          const e = [t];\n          return (await E.asyncClassMethod(P, \"sha256\", e)).resbuf;\n        }, P.sha256Sha256 = function (t) {\n          try {\n            return P.sha256(P.sha256(t));\n          } catch (t) {\n            throw new Error(\"sha256Sha256 hash must be of a buffer: \" + t);\n          }\n        }, P.asyncSha256Sha256 = async function (t) {\n          const e = [t];\n          return (await E.asyncClassMethod(P, \"sha256Sha256\", e)).resbuf;\n        }, P.ripemd160 = function (t) {\n          if (!Buffer.isBuffer(t)) throw new Error(\"ripemd160 hash must be of a buffer\");\n          const e = new (0, d().ripemd160)().update(t).digest();\n          return Buffer.from(e);\n        }, P.asyncRipemd160 = async function (t) {\n          const e = [t];\n          return (await E.asyncClassMethod(P, \"ripemd160\", e)).resbuf;\n        }, P.sha256Ripemd160 = function (t) {\n          try {\n            return P.ripemd160(P.sha256(t));\n          } catch (t) {\n            throw new Error(\"sha256Ripemd160 hash must be of a buffer: \" + t);\n          }\n        }, P.asyncSha256Ripemd160 = async function (t) {\n          const e = [t];\n          return (await E.asyncClassMethod(P, \"sha256Ripemd160\", e)).resbuf;\n        }, P.sha512 = function (t) {\n          if (!Buffer.isBuffer(t)) throw new Error(\"sha512 hash must be of a buffer\");\n          const e = new (0, d().sha512)().update(t).digest();\n          return Buffer.from(e);\n        }, P.asyncSha512 = async function (t) {\n          const e = [t];\n          return (await E.asyncClassMethod(P, \"sha512\", e)).resbuf;\n        }, P.sha512.blockSize = 1024, P.hmac = function (t, e, r) {\n          if (\"sha1\" !== t && \"sha256\" !== t && \"sha512\" !== t) throw new Error(\"invalid choice of hash function\");\n          const i = P[t];\n          if (!Buffer.isBuffer(e) || !Buffer.isBuffer(r)) throw new Error(\"data and key must be buffers\");\n          const s = i.blockSize / 8;\n          if (r.length > s && (r = i(r)), r.length < s) {\n            const t = Buffer.alloc(s);\n            t.fill(0, r.length), r.copy(t), r = t;\n          }\n          const n = Buffer.alloc(s),\n            a = Buffer.alloc(s);\n          for (let t = 0; t < s; t++) n[t] = 92 ^ r[t], a[t] = 54 ^ r[t];\n          return i(Buffer.concat([n, i(Buffer.concat([a, e]))]));\n        }, P.sha1Hmac = function (t, e) {\n          return P.hmac(\"sha1\", t, e);\n        }, P.asyncSha1Hmac = async function (t, e) {\n          const r = [t, e];\n          return (await E.asyncClassMethod(P, \"sha1Hmac\", r)).resbuf;\n        }, P.sha1Hmac.bitsize = 160, P.sha256Hmac = function (t, e) {\n          return P.hmac(\"sha256\", t, e);\n        }, P.asyncSha256Hmac = async function (t, e) {\n          const r = [t, e];\n          return (await E.asyncClassMethod(P, \"sha256Hmac\", r)).resbuf;\n        }, P.sha256Hmac.bitsize = 256, P.sha512Hmac = function (t, e) {\n          return P.hmac(\"sha512\", t, e);\n        }, P.asyncSha512Hmac = async function (t, e) {\n          const r = [t, e];\n          return (await E.asyncClassMethod(P, \"sha512Hmac\", r)).resbuf;\n        }, P.sha512Hmac.bitsize = 512;\n        class k extends S {\n          constructor(t) {\n            super({\n              buf: t\n            });\n          }\n          fromHex(t) {\n            return this.fromBuffer(Buffer.from(t, \"hex\"));\n          }\n          toHex() {\n            return this.toBuffer().toString(\"hex\");\n          }\n          static decode(t) {\n            if (\"string\" != typeof t) throw new Error(\"Input must be a string\");\n            const e = _.decode(t);\n            if (e.length < 4) throw new Error(\"Input string too short\");\n            const r = e.slice(0, -4),\n              i = e.slice(-4),\n              s = P.sha256Sha256(r).slice(0, 4);\n            if (!B(i, s)) throw new Error(\"Checksum mismatch\");\n            return r;\n          }\n          static encode(t) {\n            if (!Buffer.isBuffer(t)) throw new Error(\"Input must be a buffer\");\n            const e = Buffer.alloc(t.length + 4),\n              r = P.sha256Sha256(t);\n            return t.copy(e), r.copy(e, t.length), _.encode(e);\n          }\n          fromBuffer(t) {\n            return this.buf = t, this;\n          }\n          fromString(t) {\n            const e = k.decode(t);\n            return this.buf = e, this;\n          }\n          toBuffer() {\n            return this.buf;\n          }\n          toString() {\n            return k.encode(this.buf);\n          }\n        }\n        class N {\n          constructor(t) {\n            this.keyDefined = e => e in t, this.getValue = e => t[e];\n          }\n          get(t) {\n            if (this.keyDefined(t)) return this.getValue(t);\n            throw new Error(`Unknown configuration: ${t}`);\n          }\n        }\n        const A = new class {\n            constructor() {\n              this.variables = {};\n            }\n            build() {\n              return new N(this.variables);\n            }\n            addValue(t, e) {\n              if (void 0 === e) throw new Error(`Failed to add \"${t}\" property. The value cannot be undefined`);\n              if (t in this.variables) throw new Error(`\"${t}\" already has a value defined.`);\n              return this.variables[t] = e, this;\n            }\n            addValueWithDefault(t, e, r) {\n              if (void 0 === r) throw new Error(`Failed to add \"${t}\" property. Default value cannot be undefined`);\n              return this.addValue(t, void 0 === e ? r : e);\n            }\n          }().addValue(\"NETWORK\", process.env.NETWORK || \"mainnet\").build(),\n          x = {\n            Mainnet: {\n              MaxSize: 33554432,\n              Port: 8333,\n              Address: {\n                pubKeyHash: 0,\n                payToScriptHash: 5\n              },\n              Bip32: {\n                pubKey: 76067358,\n                privKey: 76066276\n              },\n              Block: {\n                maxNBits: 486604799,\n                magicNum: 3823236072\n              },\n              Msg: {\n                magicNum: 3823236072,\n                versionBytesNum: 70015\n              },\n              PrivKey: {\n                versionByteNum: 128\n              },\n              TxBuilder: {\n                dust: 546,\n                feePerKbNum: 500\n              },\n              Workers: {\n                timeout: 6e4\n              }\n            }\n          };\n        if (x.Testnet = Object.assign({}, x.Mainnet, {\n          Port: 18333,\n          Address: {\n            pubKeyHash: 111,\n            payToScriptHash: 196\n          },\n          Bip32: {\n            pubKey: 70617039,\n            privKey: 70615956\n          },\n          Block: {\n            maxNBits: 486604799,\n            magicNum: 4108710900\n          },\n          Msg: {\n            magicNum: 4108710900,\n            versionBytesNum: 70015\n          },\n          PrivKey: {\n            versionByteNum: 239\n          }\n        }), x.Regtest = Object.assign({}, x.Mainnet, {\n          Port: 18444,\n          Address: {\n            pubKeyHash: 111,\n            payToScriptHash: 196\n          },\n          Bip32: {\n            pubKey: 70617039,\n            privKey: 70615956\n          },\n          Block: {\n            maxNBits: 545259519,\n            magicNum: 3669344250\n          },\n          Msg: {\n            magicNum: 3669344250,\n            versionBytesNum: 70015\n          },\n          PrivKey: {\n            versionByteNum: 239\n          }\n        }), x.STN = Object.assign({}, x.Mainnet, {\n          Port: 9333,\n          Address: {\n            pubKeyHash: 111,\n            payToScriptHash: 196\n          },\n          Bip32: {\n            pubKey: 70617039,\n            privKey: 70615956\n          },\n          Block: {\n            maxNBits: 486604799,\n            magicNum: 4224632057\n          },\n          Msg: {\n            magicNum: 4224632057,\n            versionBytesNum: 70015\n          },\n          PrivKey: {\n            versionByteNum: 239\n          }\n        }), \"testnet\" === A.get(\"NETWORK\")) x.Default = Object.assign({}, x.Testnet);else if (\"mainnet\" === A.get(\"NETWORK\")) x.Default = Object.assign({}, x.Mainnet);else if (\"regtest\" === A.get(\"NETWORK\")) x.Default = Object.assign({}, x.Regtest);else {\n          if (\"stn\" !== A.get(\"NETWORK\")) throw new Error(`must set network in environment variable - mainnet, testnet, regtest or stn?, received ${A.get(\"NETWORK\")}`);\n          x.Default = Object.assign({}, x.STN);\n        }\n        const R = t => x.Mainnet.Msg.magicNum === t ? x.Mainnet : x.Testnet.Msg.magicNum === t ? x.Testnet : x.Regtest.Msg.magicNum === t ? x.Regtest : x.STN.Msg.magicNum === t ? x.STN : x.Default,\n          M = {\n            OP_FALSE: 0,\n            OP_0: 0,\n            OP_PUSHDATA1: 76,\n            OP_PUSHDATA2: 77,\n            OP_PUSHDATA4: 78,\n            OP_1NEGATE: 79,\n            OP_RESERVED: 80,\n            OP_TRUE: 81,\n            OP_1: 81,\n            OP_2: 82,\n            OP_3: 83,\n            OP_4: 84,\n            OP_5: 85,\n            OP_6: 86,\n            OP_7: 87,\n            OP_8: 88,\n            OP_9: 89,\n            OP_10: 90,\n            OP_11: 91,\n            OP_12: 92,\n            OP_13: 93,\n            OP_14: 94,\n            OP_15: 95,\n            OP_16: 96,\n            OP_NOP: 97,\n            OP_VER: 98,\n            OP_IF: 99,\n            OP_NOTIF: 100,\n            OP_VERIF: 101,\n            OP_VERNOTIF: 102,\n            OP_ELSE: 103,\n            OP_ENDIF: 104,\n            OP_VERIFY: 105,\n            OP_RETURN: 106,\n            OP_TOALTSTACK: 107,\n            OP_FROMALTSTACK: 108,\n            OP_2DROP: 109,\n            OP_2DUP: 110,\n            OP_3DUP: 111,\n            OP_2OVER: 112,\n            OP_2ROT: 113,\n            OP_2SWAP: 114,\n            OP_IFDUP: 115,\n            OP_DEPTH: 116,\n            OP_DROP: 117,\n            OP_DUP: 118,\n            OP_NIP: 119,\n            OP_OVER: 120,\n            OP_PICK: 121,\n            OP_ROLL: 122,\n            OP_ROT: 123,\n            OP_SWAP: 124,\n            OP_TUCK: 125,\n            OP_CAT: 126,\n            OP_SUBSTR: 127,\n            OP_SPLIT: 127,\n            OP_LEFT: 128,\n            OP_NUM2BIN: 128,\n            OP_RIGHT: 129,\n            OP_BIN2NUM: 129,\n            OP_SIZE: 130,\n            OP_INVERT: 131,\n            OP_AND: 132,\n            OP_OR: 133,\n            OP_XOR: 134,\n            OP_EQUAL: 135,\n            OP_EQUALVERIFY: 136,\n            OP_RESERVED1: 137,\n            OP_RESERVED2: 138,\n            OP_1ADD: 139,\n            OP_1SUB: 140,\n            OP_2MUL: 141,\n            OP_2DIV: 142,\n            OP_NEGATE: 143,\n            OP_ABS: 144,\n            OP_NOT: 145,\n            OP_0NOTEQUAL: 146,\n            OP_ADD: 147,\n            OP_SUB: 148,\n            OP_MUL: 149,\n            OP_DIV: 150,\n            OP_MOD: 151,\n            OP_LSHIFT: 152,\n            OP_RSHIFT: 153,\n            OP_BOOLAND: 154,\n            OP_BOOLOR: 155,\n            OP_NUMEQUAL: 156,\n            OP_NUMEQUALVERIFY: 157,\n            OP_NUMNOTEQUAL: 158,\n            OP_LESSTHAN: 159,\n            OP_GREATERTHAN: 160,\n            OP_LESSTHANOREQUAL: 161,\n            OP_GREATERTHANOREQUAL: 162,\n            OP_MIN: 163,\n            OP_MAX: 164,\n            OP_WITHIN: 165,\n            OP_RIPEMD160: 166,\n            OP_SHA1: 167,\n            OP_SHA256: 168,\n            OP_HASH160: 169,\n            OP_HASH256: 170,\n            OP_CODESEPARATOR: 171,\n            OP_CHECKSIG: 172,\n            OP_CHECKSIGVERIFY: 173,\n            OP_CHECKMULTISIG: 174,\n            OP_CHECKMULTISIGVERIFY: 175,\n            OP_NOP1: 176,\n            OP_NOP2: 177,\n            OP_CHECKLOCKTIMEVERIFY: 177,\n            OP_NOP3: 178,\n            OP_CHECKSEQUENCEVERIFY: 178,\n            OP_NOP4: 179,\n            OP_NOP5: 180,\n            OP_NOP6: 181,\n            OP_NOP7: 182,\n            OP_NOP8: 183,\n            OP_NOP9: 184,\n            OP_NOP10: 185,\n            OP_SMALLDATA: 249,\n            OP_SMALLINTEGER: 250,\n            OP_PUBKEYS: 251,\n            OP_PUBKEYHASH: 253,\n            OP_PUBKEY: 254,\n            OP_INVALIDOPCODE: 255\n          };\n        class T extends S {\n          constructor(t) {\n            super({\n              num: t\n            });\n          }\n          fromNumber(t) {\n            return this.num = t, this;\n          }\n          static fromNumber(t) {\n            return new this().fromNumber(t);\n          }\n          toNumber() {\n            return this.num;\n          }\n          fromString(t) {\n            const e = M[t];\n            if (void 0 === e) throw new Error(\"Invalid opCodeStr\");\n            return this.num = e, this;\n          }\n          static fromString(t) {\n            return new this().fromString(t);\n          }\n          toString() {\n            const t = T.str[this.num];\n            if (void 0 === t) {\n              if (this.num > 0 && this.num < T.OP_PUSHDATA1) return this.num.toString();\n              throw new Error(\"OpCode does not have a string representation\");\n            }\n            return t;\n          }\n        }\n        T.str = {};\n        for (const t in M) T[t] = M[t], Object.prototype.hasOwnProperty.call(M, t) && (T.str[M[t]] = t);\n        const C = c().curves.secp256k1,\n          H = C.curve.point().constructor;\n        class L extends H {\n          constructor(t, e, r) {\n            super(C.curve, t, e, r);\n          }\n          static fromX(t, e) {\n            const r = C.curve.pointFromX(e, t);\n            return Object.create(L.prototype).copyFrom(r);\n          }\n          copyFrom(t) {\n            if (!(t instanceof H)) throw new Error(\"point should be an external point\");\n            return Object.keys(t).forEach(function (e) {\n              this[e] = t[e];\n            }.bind(this)), this;\n          }\n          add(t) {\n            return t = H.prototype.add.call(this, t), Object.create(L.prototype).copyFrom(t);\n          }\n          mul(t) {\n            if (!t.lt(L.getN())) throw new Error(\"point mul out of range\");\n            const e = H.prototype.mul.call(this, t);\n            return Object.create(L.prototype).copyFrom(e);\n          }\n          mulAdd(t, e, r) {\n            const i = H.prototype.mulAdd.call(this, t, e, r);\n            return (e = Object.create(L.prototype)).copyFrom(i);\n          }\n          getX() {\n            const t = H.prototype.getX.call(this),\n              e = Object.create(p.prototype);\n            return t.copy(e), e;\n          }\n          getY() {\n            const t = H.prototype.getY.call(this),\n              e = Object.create(p.prototype);\n            return t.copy(e), e;\n          }\n          fromX(t, e) {\n            const r = L.fromX(t, e);\n            return this.copyFrom(r);\n          }\n          toJSON() {\n            return {\n              x: this.getX().toString(),\n              y: this.getY().toString()\n            };\n          }\n          fromJSON(t) {\n            const e = new p().fromString(t.x),\n              r = new p().fromString(t.y),\n              i = new L(e, r);\n            return this.copyFrom(i);\n          }\n          toString() {\n            return JSON.stringify(this.toJSON());\n          }\n          fromString(t) {\n            const e = JSON.parse(t),\n              r = new L().fromJSON(e);\n            return this.copyFrom(r);\n          }\n          static getG() {\n            const t = C.curve.g;\n            return Object.create(L.prototype).copyFrom(t);\n          }\n          static getN() {\n            return new p(C.curve.n.toArray());\n          }\n          validate() {\n            if (0 !== L.fromX(this.getY().isOdd(), this.getX()).getY().cmp(this.getY())) throw new Error(\"Invalid y value of public key\");\n            if (!(this.getX().gt(-1) && this.getX().lt(L.getN()) && this.getY().gt(-1) && this.getY().lt(L.getN()))) throw new Error(\"Point does not lie on the curve\");\n            return this;\n          }\n        }\n        class K extends S {\n          constructor(t, e) {\n            super({\n              point: t,\n              compressed: e\n            });\n          }\n          fromJSON(t) {\n            return this.fromFastHex(t), this;\n          }\n          toJSON() {\n            return this.toFastHex();\n          }\n          fromPrivKey(t) {\n            return this.fromObject({\n              point: L.getG().mul(t.bn),\n              compressed: t.compressed\n            }), this;\n          }\n          static fromPrivKey(t) {\n            return new this().fromPrivKey(t);\n          }\n          async asyncFromPrivKey(t) {\n            const e = await E.asyncObjectMethod(this, \"fromPrivKey\", [t]);\n            return this.fromFastBuffer(e.resbuf);\n          }\n          static asyncFromPrivKey(t) {\n            return new this().asyncFromPrivKey(t);\n          }\n          fromBuffer(t, e) {\n            return this.fromDer(t, e);\n          }\n          async asyncFromBuffer(t, e) {\n            const r = [t, e],\n              i = await E.asyncObjectMethod(this, \"fromBuffer\", r);\n            return this.fromFastBuffer(i.resbuf);\n          }\n          fromFastBuffer(t) {\n            if (0 === t.length) return this;\n            const e = Boolean(t[0]);\n            return t = t.slice(1), this.fromDer(t), this.compressed = e, this;\n          }\n          fromDer(t, e) {\n            if (e = void 0 === e, 4 !== t[0] && (e || 6 !== t[0] && 7 !== t[0])) {\n              if (3 === t[0]) {\n                const e = new p(t.slice(1));\n                this.fromX(!0, e), this.compressed = !0;\n              } else {\n                if (2 !== t[0]) throw new Error(\"Invalid DER format pubKey\");\n                {\n                  const e = new p(t.slice(1));\n                  this.fromX(!1, e), this.compressed = !0;\n                }\n              }\n            } else {\n              const e = t.slice(1, 33),\n                r = t.slice(33, 65);\n              if (32 !== e.length || 32 !== r.length || 65 !== t.length) throw new Error(\"LEngth of x and y must be 32 bytes\");\n              const i = new p(e),\n                s = new p(r);\n              this.point = new L(i, s), this.compressed = !1;\n            }\n            return this;\n          }\n          static fromDer(t, e) {\n            return new this().fromDer(t, e);\n          }\n          fromString(t) {\n            return this.fromDer(Buffer.from(t, \"hex\")), this;\n          }\n          fromX(t, e) {\n            if (\"boolean\" != typeof t) throw new Error(\"Must specify whether y is odd or not (true or false)\");\n            return this.point = L.fromX(t, e), this;\n          }\n          static fromX(t, e) {\n            return new this().fromX(t, e);\n          }\n          toBuffer() {\n            const t = void 0 === this.compressed || this.compressed;\n            return this.toDer(t);\n          }\n          toFastBuffer() {\n            if (!this.point) return Buffer.alloc(0);\n            const t = new y(),\n              e = void 0 === this.compressed || Boolean(this.compressed);\n            return t.writeUInt8(Number(e)), t.write(this.toDer(!1)), t.toBuffer();\n          }\n          toDer(t) {\n            if (\"boolean\" != typeof (t = void 0 === t ? this.compressed : t)) throw new Error(\"Must specify whether the public key is compressed or not (true or false)\");\n            const e = this.point.getX(),\n              r = this.point.getY(),\n              i = e.toBuffer({\n                size: 32\n              }),\n              s = r.toBuffer({\n                size: 32\n              });\n            let n;\n            return t ? (n = s[s.length - 1] % 2 ? Buffer.from([3]) : Buffer.from([2]), Buffer.concat([n, i])) : (n = Buffer.from([4]), Buffer.concat([n, i, s]));\n          }\n          toString() {\n            const t = void 0 === this.compressed || this.compressed;\n            return this.toDer(t).toString(\"hex\");\n          }\n          static isCompressedOrUncompressed(t) {\n            if (t.length < 33) return !1;\n            if (4 === t[0]) {\n              if (65 !== t.length) return !1;\n            } else {\n              if (2 !== t[0] && 3 !== t[0]) return !1;\n              if (33 !== t.length) return !1;\n            }\n            return !0;\n          }\n          validate() {\n            if (this.point.isInfinity()) throw new Error(\"point: Point cannot be equal to Infinity\");\n            if (this.point.eq(new L(new p(0), new p(0)))) throw new Error(\"point: Point cannot be equal to 0, 0\");\n            return this.point.validate(), this;\n          }\n        }\n        var F = r(353),\n          U = r.n(F);\n        class D {}\n        D.getRandomBuffer = function (t) {\n          return U()(t);\n        };\n        class V extends S {\n          constructor(t, e, r = null) {\n            super({\n              bn: t,\n              compressed: e\n            }), r = r || x.Default.PrivKey, this.Constants = r;\n          }\n          fromJSON(t) {\n            return this.fromHex(t), this;\n          }\n          toJSON() {\n            return this.toHex();\n          }\n          fromRandom() {\n            let t, e, r;\n            do {\n              t = D.getRandomBuffer(32), e = new p().fromBuffer(t), r = e.lt(L.getN());\n            } while (!r);\n            return this.fromObject({\n              bn: e,\n              compressed: !0\n            }), this;\n          }\n          static fromRandom() {\n            return new this().fromRandom();\n          }\n          toBuffer() {\n            let t = this.compressed;\n            void 0 === t && (t = !0);\n            const e = this.bn.toBuffer({\n              size: 32\n            });\n            let r;\n            return r = t ? Buffer.concat([Buffer.from([this.Constants.versionByteNum]), e, Buffer.from([1])]) : Buffer.concat([Buffer.from([this.Constants.versionByteNum]), e]), r;\n          }\n          fromBuffer(t) {\n            if (34 === t.length && 1 === t[33]) this.compressed = !0;else {\n              if (33 !== t.length) throw new Error(\"Length of privKey buffer must be 33 (uncompressed pubKey) or 34 (compressed pubKey)\");\n              this.compressed = !1;\n            }\n            if (t[0] !== this.Constants.versionByteNum) throw new Error(\"Invalid versionByteNum byte\");\n            return this.fromBn(new p().fromBuffer(t.slice(1, 33)));\n          }\n          toBn() {\n            return this.bn;\n          }\n          fromBn(t) {\n            return this.bn = t, this;\n          }\n          static fromBn(t) {\n            return new this().fromBn(t);\n          }\n          validate() {\n            if (!this.bn.lt(L.getN())) throw new Error(\"Number must be less than N\");\n            if (\"boolean\" != typeof this.compressed) throw new Error(\"Must specify whether the corresponding public key is compressed or not (true or false)\");\n            return this;\n          }\n          toWif() {\n            return k.encode(this.toBuffer());\n          }\n          fromWif(t) {\n            return this.fromBuffer(k.decode(t));\n          }\n          static fromWif(t) {\n            return new this().fromWif(t);\n          }\n          toString() {\n            return this.toWif();\n          }\n          fromString(t) {\n            return this.fromWif(t);\n          }\n        }\n        V.Mainnet = class extends V {\n          constructor(t, e) {\n            super(t, e, x.Mainnet.PrivKey);\n          }\n        }, V.Testnet = class extends V {\n          constructor(t, e) {\n            super(t, e, x.Testnet.PrivKey);\n          }\n        };\n        class j extends S {\n          constructor(t, e, r, i, s) {\n            super({\n              r: t,\n              s: e,\n              nHashType: r,\n              recovery: i,\n              compressed: s\n            });\n          }\n          fromBuffer(t) {\n            try {\n              return this.fromDer(t, !0);\n            } catch (t) {}\n            try {\n              return this.fromCompact(t);\n            } catch (t) {}\n            return this.fromTxFormat(t);\n          }\n          toBuffer() {\n            return void 0 !== this.nHashType ? this.toTxFormat() : void 0 !== this.recovery ? this.toCompact() : this.toDer();\n          }\n          fromCompact(t) {\n            let e = !0,\n              r = t.slice(0, 1)[0] - 27 - 4;\n            if (r < 0 && (e = !1, r += 4), 0 !== r && 1 !== r && 2 !== r && 3 !== r) throw new Error(\"i must be 0, 1, 2, or 3\");\n            this.compressed = e, this.recovery = r;\n            const i = t.slice(1);\n            return this.fromRS(i), this;\n          }\n          static fromCompact(t) {\n            return new this().fromCompact(t);\n          }\n          fromRS(t) {\n            const e = t.slice(0, 32),\n              r = t.slice(32, 64);\n            if (32 !== e.length) throw new Error(\"r must be 32 bytes\");\n            if (32 !== r.length || t.length > 64) throw new Error(\"s must be 32 bytes\");\n            return this.r = new p().fromBuffer(e), this.s = new p().fromBuffer(r), this;\n          }\n          static fromRS(t) {\n            return new this().fromRS(t);\n          }\n          fromDer(t, e) {\n            const r = j.parseDer(t, e);\n            return this.r = r.r, this.s = r.s, this;\n          }\n          static fromDer(t, e) {\n            return new this().fromDer(t, e);\n          }\n          fromTxFormat(t) {\n            if (0 === t.length) return this.r = new p(1), this.s = new p(1), this.nHashType = 1, this;\n            const e = t.readUInt8(t.length - 1),\n              r = t.slice(0, t.length - 1);\n            return this.fromDer(r, !1), this.nHashType = e, this;\n          }\n          static fromTxFormat(t) {\n            return new this().fromTxFormat(t);\n          }\n          fromString(t) {\n            return this.fromHex(t);\n          }\n          static parseDer(t, e) {\n            if (void 0 === e && (e = !0), !Buffer.isBuffer(t)) throw new Error(\"DER formatted signature should be a buffer\");\n            const r = t[0];\n            if (48 !== r) throw new Error(\"Header byte should be 0x30\");\n            let i = t[1];\n            const s = t.slice(2).length;\n            if (e && i !== s) throw new Error(\"LEngth byte should length of what follows\");\n            i = i < s ? i : s;\n            const n = t[2];\n            if (2 !== n) throw new Error(\"Integer byte for r should be 0x02\");\n            const a = t[3],\n              o = t.slice(4, 4 + a),\n              h = new p().fromBuffer(o),\n              f = 0 === t[4];\n            if (a !== o.length) throw new Error(\"LEngth of r incorrect\");\n            const c = t[4 + a + 0];\n            if (2 !== c) throw new Error(\"Integer byte for s should be 0x02\");\n            const u = t[4 + a + 1],\n              d = t.slice(4 + a + 2, 4 + a + 2 + u),\n              l = new p().fromBuffer(d),\n              b = 0 === t[4 + a + 2 + 2];\n            if (u !== d.length) throw new Error(\"LEngth of s incorrect\");\n            if (i !== 4 + a + 2 + u - 2) throw new Error(\"LEngth of signature incorrect\");\n            return {\n              header: r,\n              length: i,\n              rheader: n,\n              rlength: a,\n              rneg: f,\n              rbuf: o,\n              r: h,\n              sheader: c,\n              slength: u,\n              sneg: b,\n              sbuf: d,\n              s: l\n            };\n          }\n          static IsTxDer(t) {\n            if (t.length < 9) return !1;\n            if (t.length > 73) return !1;\n            if (48 !== t[0]) return !1;\n            if (t[1] !== t.length - 3) return !1;\n            const e = t[3];\n            if (5 + e >= t.length) return !1;\n            const r = t[5 + e];\n            if (e + r + 7 !== t.length) return !1;\n            const i = t.slice(4);\n            if (2 !== t[2]) return !1;\n            if (0 === e) return !1;\n            if (128 & i[0]) return !1;\n            if (e > 1 && 0 === i[0] && !(128 & i[1])) return !1;\n            const s = t.slice(6 + e);\n            return !(2 !== t[6 + e - 2] || 0 === r || 128 & s[0] || r > 1 && 0 === s[0] && !(128 & s[1]));\n          }\n          hasLowS() {\n            return !this.s.lt(1) && !this.s.gt(p.fromBuffer(Buffer.from(\"7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\", \"hex\")));\n          }\n          hasDefinedHashType() {\n            return !(this.nHashType < j.SIGHASH_ALL || this.nHashType > j.SIGHASH_SINGLE);\n          }\n          toCompact(t, e) {\n            if (t = \"number\" == typeof t ? t : this.recovery, e = \"boolean\" == typeof e ? e : this.compressed, 0 !== t && 1 !== t && 2 !== t && 3 !== t) throw new Error(\"recovery must be equal to 0, 1, 2, or 3\");\n            let r = t + 27 + 4;\n            !1 === e && (r -= 4);\n            const i = Buffer.from([r]),\n              s = this.r.toBuffer({\n                size: 32\n              }),\n              n = this.s.toBuffer({\n                size: 32\n              });\n            return Buffer.concat([i, s, n]);\n          }\n          toRS() {\n            return Buffer.concat([this.r.toBuffer({\n              size: 32\n            }), this.s.toBuffer({\n              size: 32\n            })]);\n          }\n          toDer() {\n            const t = this.r.toBuffer(),\n              e = this.s.toBuffer(),\n              r = 128 & t[0],\n              i = 128 & e[0],\n              s = r ? Buffer.concat([Buffer.from([0]), t]) : t,\n              n = i ? Buffer.concat([Buffer.from([0]), e]) : e,\n              a = 2 + s.length + 2 + n.length,\n              o = s.length,\n              h = n.length;\n            return Buffer.concat([Buffer.from([48, a, 2, o]), s, Buffer.from([2, h]), n]);\n          }\n          toTxFormat() {\n            const t = this.toDer(),\n              e = Buffer.alloc(1);\n            return e.writeUInt8(this.nHashType, 0), Buffer.concat([t, e]);\n          }\n          toString() {\n            return this.toHex();\n          }\n        }\n        j.SIGHASH_ALL = 1, j.SIGHASH_NONE = 2, j.SIGHASH_SINGLE = 3, j.SIGHASH_FORKID = 64, j.SIGHASH_ANYONECANPAY = 128;\n        class q extends S {\n          constructor(t = []) {\n            super({\n              chunks: t\n            });\n          }\n          fromJSON(t) {\n            return this.fromString(t);\n          }\n          toJSON() {\n            return this.toString();\n          }\n          fromBuffer(t) {\n            this.chunks = [];\n            const e = new g(t);\n            for (; !e.eof();) {\n              const t = e.readUInt8();\n              let r = 0,\n                i = Buffer.from([]);\n              if (t > 0 && t < T.OP_PUSHDATA1) r = t, this.chunks.push({\n                buf: e.read(r),\n                len: r,\n                opCodeNum: t\n              });else if (t === T.OP_PUSHDATA1) {\n                try {\n                  r = e.readUInt8(), i = e.read(r);\n                } catch (t) {\n                  e.read();\n                }\n                this.chunks.push({\n                  buf: i,\n                  len: r,\n                  opCodeNum: t\n                });\n              } else if (t === T.OP_PUSHDATA2) {\n                try {\n                  r = e.readUInt16LE(), i = e.read(r);\n                } catch (t) {\n                  e.read();\n                }\n                this.chunks.push({\n                  buf: i,\n                  len: r,\n                  opCodeNum: t\n                });\n              } else if (t === T.OP_PUSHDATA4) {\n                try {\n                  r = e.readUInt32LE(), i = e.read(r);\n                } catch (t) {\n                  e.read();\n                }\n                this.chunks.push({\n                  buf: i,\n                  len: r,\n                  opCodeNum: t\n                });\n              } else this.chunks.push({\n                opCodeNum: t\n              });\n            }\n            return this;\n          }\n          toBuffer() {\n            const t = new y();\n            for (let e = 0; e < this.chunks.length; e++) {\n              const r = this.chunks[e],\n                i = r.opCodeNum;\n              t.writeUInt8(i), r.buf && (i < T.OP_PUSHDATA1 ? t.write(r.buf) : i === T.OP_PUSHDATA1 ? (t.writeUInt8(r.len), t.write(r.buf)) : i === T.OP_PUSHDATA2 ? (t.writeUInt16LE(r.len), t.write(r.buf)) : i === T.OP_PUSHDATA4 && (t.writeUInt32LE(r.len), t.write(r.buf)));\n            }\n            return t.toBuffer();\n          }\n          fromString(t) {\n            if (this.chunks = [], \"\" === t || void 0 === t) return this;\n            const e = t.split(\" \");\n            let r = 0;\n            for (; r < e.length;) {\n              const t = e[r];\n              let i;\n              try {\n                i = new T().fromString(t).toNumber();\n              } catch (t) {}\n              if (void 0 === i) {\n                if (i = parseInt(t, 10), i > 0 && i < T.OP_PUSHDATA1) this.chunks.push({\n                  buf: Buffer.from(e[r + 1].slice(2), \"hex\"),\n                  len: i,\n                  opCodeNum: i\n                }), r += 2;else {\n                  if (0 !== i) throw new Error(\"Invalid script\");\n                  this.chunks.push({\n                    opCodeNum: 0\n                  }), r += 1;\n                }\n              } else if (i === T.OP_PUSHDATA1 || i === T.OP_PUSHDATA2 || i === T.OP_PUSHDATA4) {\n                if (\"0x\" !== e[r + 2].slice(0, 2)) throw new Error(\"Pushdata data must start with 0x\");\n                this.chunks.push({\n                  buf: Buffer.from(e[r + 2].slice(2), \"hex\"),\n                  len: parseInt(e[r + 1], 10),\n                  opCodeNum: i\n                }), r += 3;\n              } else this.chunks.push({\n                opCodeNum: i\n              }), r += 1;\n            }\n            return this;\n          }\n          toString() {\n            let t = \"\";\n            for (let e = 0; e < this.chunks.length; e++) {\n              const r = this.chunks[e],\n                i = r.opCodeNum;\n              r.buf ? (i !== T.OP_PUSHDATA1 && i !== T.OP_PUSHDATA2 && i !== T.OP_PUSHDATA4 || (t = t + \" \" + new T(i).toString()), t = t + \" \" + r.len, t = t + \" 0x\" + r.buf.toString(\"hex\")) : t = void 0 !== T.str[i] ? t + \" \" + new T(i).toString() : t + \" 0x\" + i.toString(16);\n            }\n            return t.substr(1);\n          }\n          fromBitcoindString(t) {\n            const e = new y(),\n              r = t.split(\" \");\n            let i;\n            for (i = 0; i < r.length; i++) {\n              const t = r[i];\n              if (\"\" !== t) if (\"0\" === t[0] && \"x\" === t[1]) {\n                const r = t.slice(2);\n                e.write(Buffer.from(r, \"hex\"));\n              } else if (\"'\" === t[0]) {\n                const r = t.slice(1, t.length - 1),\n                  i = Buffer.from(r),\n                  s = new q().writeBuffer(i).toBuffer();\n                e.write(s);\n              } else if (void 0 !== T[\"OP_\" + t]) {\n                const r = T[\"OP_\" + t];\n                e.writeUInt8(r);\n              } else if (\"number\" == typeof T[t]) {\n                const r = T[t];\n                e.writeUInt8(r);\n              } else {\n                if (isNaN(parseInt(t, 10))) throw new Error(\"Could not determine type of script value\");\n                {\n                  const r = new p(t),\n                    i = new q().writeBn(r).toBuffer();\n                  e.write(i);\n                }\n              }\n            }\n            const s = e.toBuffer();\n            return this.fromBuffer(s);\n          }\n          static fromBitcoindString(t) {\n            return new this().fromBitcoindString(t);\n          }\n          toBitcoindString() {\n            let t = \"\";\n            for (let e = 0; e < this.chunks.length; e++) {\n              const r = this.chunks[e];\n              t = r.buf ? t + \" 0x\" + new q([r]).toBuffer().toString(\"hex\") : void 0 !== T.str[r.opCodeNum] ? t + \" \" + new T(r.opCodeNum).toString().slice(3) : t + \" 0x\" + r.opCodeNum.toString(16);\n            }\n            return t.substr(1);\n          }\n          fromAsmString(t) {\n            this.chunks = [];\n            const e = t.split(\" \");\n            let r = 0;\n            for (; r < e.length;) {\n              const t = e[r];\n              let i, s;\n              try {\n                i = T.fromString(t), s = i.toNumber();\n              } catch (t) {\n                i = void 0, s = void 0;\n              }\n              if (\"0\" === t) s = 0, this.chunks.push({\n                opCodeNum: s\n              }), r += 1;else if (\"-1\" === t) s = T.OP_1NEGATE, this.chunks.push({\n                opCodeNum: s\n              }), r += 1;else if (void 0 === i) {\n                const t = e[r],\n                  i = Buffer.from(t, \"hex\");\n                if (i.toString(\"hex\") !== t) throw new Error(\"invalid hex string in script\");\n                const n = i.length;\n                n >= 0 && n < T.OP_PUSHDATA1 ? s = n : n < Math.pow(2, 8) ? s = T.OP_PUSHDATA1 : n < Math.pow(2, 16) ? s = T.OP_PUSHDATA2 : n < Math.pow(2, 32) && (s = T.OP_PUSHDATA4), this.chunks.push({\n                  buf: i,\n                  len: i.length,\n                  opCodeNum: s\n                }), r += 1;\n              } else this.chunks.push({\n                opCodeNum: s\n              }), r += 1;\n            }\n            return this;\n          }\n          static fromAsmString(t) {\n            return new this().fromAsmString(t);\n          }\n          toAsmString() {\n            for (var t = \"\", e = 0; e < this.chunks.length; e++) {\n              var r = this.chunks[e];\n              t += this._chunkToString(r);\n            }\n            return t.substr(1);\n          }\n          _chunkToString(t, e) {\n            var r = t.opCodeNum,\n              i = \"\";\n            if (t.buf) t.len > 0 && (i = i + \" \" + t.buf.toString(\"hex\"));else if (void 0 !== T.str[r]) 0 === r ? i += \" 0\" : 79 === r ? i += \" -1\" : i = i + \" \" + new T(r).toString();else {\n              var s = r.toString(16);\n              s.length % 2 != 0 && (s = \"0\" + s), i = i + \" \" + s;\n            }\n            return i;\n          }\n          fromOpReturnData(t) {\n            return this.writeOpCode(T.OP_RETURN), this.writeBuffer(t), this;\n          }\n          static fromOpReturnData(t) {\n            return new this().fromOpReturnData(t);\n          }\n          fromSafeData(t) {\n            return this.writeOpCode(T.OP_FALSE), this.writeOpCode(T.OP_RETURN), this.writeBuffer(t), this;\n          }\n          static fromSafeData(t) {\n            return new this().fromSafeData(t);\n          }\n          fromSafeDataArray(t) {\n            this.writeOpCode(T.OP_FALSE), this.writeOpCode(T.OP_RETURN);\n            for (const e in t) {\n              const r = t[e];\n              this.writeBuffer(r);\n            }\n            return this;\n          }\n          static fromSafeDataArray(t) {\n            return new this().fromSafeDataArray(t);\n          }\n          getData() {\n            if (this.isSafeDataOut()) return this.chunks.slice(2).map(t => t.buf);\n            if (this.isOpReturn()) return this.chunks.slice(1).map(t => t.buf);\n            throw new Error(\"Unrecognized script type to get data from\");\n          }\n          fromPubKeyHash(t) {\n            if (20 !== t.length) throw new Error(\"hashBuf must be a 20 byte buffer\");\n            return this.writeOpCode(T.OP_DUP), this.writeOpCode(T.OP_HASH160), this.writeBuffer(t), this.writeOpCode(T.OP_EQUALVERIFY), this.writeOpCode(T.OP_CHECKSIG), this;\n          }\n          static fromPubKeyHash(t) {\n            return new this().fromPubKeyHash(t);\n          }\n          static sortPubKeys(t) {\n            return t.slice().sort((t, e) => {\n              const r = t.toBuffer(),\n                i = e.toBuffer(),\n                s = Math.max(r.length, i.length);\n              for (let t = 0; t <= s; t++) {\n                if (void 0 === r[t]) return -1;\n                if (void 0 === i[t]) return 1;\n                if (r[t] < i[t]) return -1;\n                if (r[t] > i[t]) return 1;\n              }\n            });\n          }\n          fromPubKeys(t, e, r = !0) {\n            if (\"number\" != typeof t) throw new Error(\"m must be a number\");\n            !0 === r && (e = q.sortPubKeys(e)), this.writeOpCode(t + T.OP_1 - 1);\n            for (const t in e) this.writeBuffer(e[t].toBuffer());\n            return this.writeOpCode(e.length + T.OP_1 - 1), this.writeOpCode(T.OP_CHECKMULTISIG), this;\n          }\n          static fromPubKeys(t, e, r) {\n            return new this().fromPubKeys(t, e, r);\n          }\n          removeCodeseparators() {\n            const t = [];\n            for (let e = 0; e < this.chunks.length; e++) this.chunks[e].opCodeNum !== T.OP_CODESEPARATOR && t.push(this.chunks[e]);\n            return this.chunks = t, this;\n          }\n          isPushOnly() {\n            for (let t = 0; t < this.chunks.length; t++) if (this.chunks[t].opCodeNum > T.OP_16) return !1;\n            return !0;\n          }\n          isNonSpendable() {\n            const t = this.chunks[0].opCodeNum === T.OP_FALSE,\n              e = this.chunks[1] && this.chunks[1].opCodeNum === T.OP_RETURN;\n            return !!t && !!e;\n          }\n          isOpReturn() {\n            return this.chunks[0].opCodeNum === T.OP_RETURN && this.chunks.filter(t => Buffer.isBuffer(t.buf)).length === this.chunks.slice(1).length;\n          }\n          isSafeDataOut() {\n            if (this.chunks.length < 2) return !1;\n            if (this.chunks[0].opCodeNum !== T.OP_FALSE) return !1;\n            var t = this.chunks.slice(1);\n            return new q(t).isOpReturn();\n          }\n          isPubKeyHashOut() {\n            return !!(this.chunks[0] && this.chunks[0].opCodeNum === T.OP_DUP && this.chunks[1] && this.chunks[1].opCodeNum === T.OP_HASH160 && this.chunks[2].buf && this.chunks[3] && this.chunks[3].opCodeNum === T.OP_EQUALVERIFY && this.chunks[4] && this.chunks[4].opCodeNum === T.OP_CHECKSIG);\n          }\n          isPubKeyHashIn() {\n            return !(2 !== this.chunks.length || !this.chunks[0].buf && this.chunks[0].opCodeNum !== T.OP_0 || !this.chunks[1].buf && this.chunks[0].opCodeNum !== T.OP_0);\n          }\n          isScriptHashOut() {\n            const t = this.toBuffer();\n            return 23 === t.length && t[0] === T.OP_HASH160 && 20 === t[1] && t[22] === T.OP_EQUAL;\n          }\n          isScriptHashIn() {\n            if (!this.isPushOnly()) return !1;\n            try {\n              new q().fromBuffer(this.chunks[this.chunks.length - 1].buf);\n            } catch (t) {\n              return !1;\n            }\n            return !0;\n          }\n          isMultiSigOut() {\n            const t = this.chunks[0].opCodeNum - T.OP_1 + 1;\n            if (!(t >= 1 && t <= 16)) return !1;\n            if (!this.chunks.slice(1, this.chunks.length - 2).every(t => {\n              try {\n                const e = t.buf;\n                return new K().fromDer(e).validate(), !0;\n              } catch (t) {\n                return !1;\n              }\n            })) return !1;\n            const e = this.chunks[this.chunks.length - 2].opCodeNum - T.OP_1 + 1;\n            return e >= t && e <= 16 && this.chunks[1 + e + 1].opCodeNum === T.OP_CHECKMULTISIG;\n          }\n          isMultiSigIn() {\n            if (this.chunks[0].opCodeNum !== T.OP_0) return !1;\n            const t = this.chunks.slice(1);\n            return !(t.length < 1) && t.every(t => Buffer.isBuffer(t.buf) && j.IsTxDer(t.buf));\n          }\n          findAndDelete(t) {\n            const e = t.toBuffer();\n            for (let t = 0; t < this.chunks.length; t++) {\n              const r = new q([this.chunks[t]]).toBuffer();\n              B(e, r) && this.chunks.splice(t, 1);\n            }\n            return this;\n          }\n          writeScript(t) {\n            return this.chunks = this.chunks.concat(t.chunks), this;\n          }\n          static writeScript(t) {\n            return new this().writeScript(t);\n          }\n          writeString(t) {\n            const e = new q().fromString(t);\n            return this.chunks = this.chunks.concat(e.chunks), this;\n          }\n          static writeString(t) {\n            return new this().writeString(t);\n          }\n          writeOpCode(t) {\n            return this.chunks.push({\n              opCodeNum: t\n            }), this;\n          }\n          static writeOpCode(t) {\n            return new this().writeOpCode(t);\n          }\n          setChunkOpCode(t, e) {\n            return this.chunks[t] = {\n              opCodeNum: e\n            }, this;\n          }\n          writeBn(t) {\n            if (t.cmp(0) === T.OP_0) this.chunks.push({\n              opCodeNum: T.OP_0\n            });else if (0 === t.cmp(-1)) this.chunks.push({\n              opCodeNum: T.OP_1NEGATE\n            });else if (t.cmp(1) >= 0 && t.cmp(16) <= 0) this.chunks.push({\n              opCodeNum: t.toNumber() + T.OP_1 - 1\n            });else {\n              const e = t.toSm({\n                endian: \"little\"\n              });\n              this.writeBuffer(e);\n            }\n            return this;\n          }\n          static writeBn(t) {\n            return new this().writeBn(t);\n          }\n          writeNumber(t) {\n            return this.writeBn(new p().fromNumber(t)), this;\n          }\n          static writeNumber(t) {\n            return new this().writeNumber(t);\n          }\n          setChunkBn(t, e) {\n            return this.chunks[t] = new q().writeBn(e).chunks[0], this;\n          }\n          writeBuffer(t) {\n            let e;\n            const r = t.length;\n            if (t.length > 0 && t.length < T.OP_PUSHDATA1) e = t.length;else if (0 === t.length) e = T.OP_0;else if (t.length < Math.pow(2, 8)) e = T.OP_PUSHDATA1;else if (t.length < Math.pow(2, 16)) e = T.OP_PUSHDATA2;else {\n              if (!(t.length < Math.pow(2, 32))) throw new Error(\"You can't push that much data\");\n              e = T.OP_PUSHDATA4;\n            }\n            return this.chunks.push({\n              buf: t,\n              len: r,\n              opCodeNum: e\n            }), this;\n          }\n          static writeBuffer(t) {\n            return new this().writeBuffer(t);\n          }\n          setChunkBuffer(t, e) {\n            return this.chunks[t] = new q().writeBuffer(e).chunks[0], this;\n          }\n          checkMinimalPush(t) {\n            const e = this.chunks[t],\n              r = e.buf,\n              i = e.opCodeNum;\n            return !(r && (0 === r.length ? i !== T.OP_0 : 1 === r.length && r[0] >= 1 && r[0] <= 16 ? i !== T.OP_1 + (r[0] - 1) : 1 === r.length && 129 === r[0] ? i !== T.OP_1NEGATE : r.length <= 75 ? i !== r.length : r.length <= 255 ? i !== T.OP_PUSHDATA1 : r.length <= 65535 && i !== T.OP_PUSHDATA2));\n          }\n        }\n        class z extends S {\n          constructor(t, e, r = null) {\n            super({\n              versionByteNum: t,\n              hashBuf: e\n            }), r = r || x.Default.Address, this.Constants = r;\n          }\n          fromBuffer(t) {\n            if (21 !== t.length) throw new Error(\"address buffers must be exactly 21 bytes\");\n            if (t[0] !== this.Constants.pubKeyHash) throw new Error(\"address: invalid versionByteNum byte\");\n            return this.versionByteNum = t[0], this.hashBuf = t.slice(1), this;\n          }\n          fromPubKeyHashBuf(t) {\n            return this.hashBuf = t, this.versionByteNum = this.Constants.pubKeyHash, this;\n          }\n          static fromPubKeyHashBuf(t) {\n            return new this().fromPubKeyHashBuf(t);\n          }\n          fromPubKey(t) {\n            const e = P.sha256Ripemd160(t.toBuffer());\n            return this.fromPubKeyHashBuf(e);\n          }\n          static fromPubKey(t) {\n            return new this().fromPubKey(t);\n          }\n          async asyncFromPubKey(t) {\n            const e = [t],\n              r = await E.asyncObjectMethod(this, \"fromPubKey\", e);\n            return this.fromFastBuffer(r.resbuf);\n          }\n          static asyncFromPubKey(t) {\n            return new this().asyncFromPubKey(t);\n          }\n          fromPrivKey(t) {\n            const e = new K().fromPrivKey(t),\n              r = P.sha256Ripemd160(e.toBuffer());\n            return this.fromPubKeyHashBuf(r);\n          }\n          static fromPrivKey(t) {\n            return new this().fromPrivKey(t);\n          }\n          async asyncFromPrivKey(t) {\n            const e = [t],\n              r = await E.asyncObjectMethod(this, \"fromPrivKey\", e);\n            return this.fromFastBuffer(r.resbuf);\n          }\n          static asyncFromPrivKey(t) {\n            return new this().fromPrivKey(t);\n          }\n          fromRandom() {\n            const t = new V().fromRandom();\n            return this.fromPrivKey(t);\n          }\n          static fromRandom() {\n            return new this().fromRandom();\n          }\n          async asyncFromRandom() {\n            const t = await E.asyncObjectMethod(this, \"fromRandom\", []);\n            return this.fromFastBuffer(t.resbuf);\n          }\n          static asyncFromRandom() {\n            return new this().fromRandom();\n          }\n          fromString(t) {\n            const e = k.decode(t);\n            return this.fromBuffer(e);\n          }\n          async asyncFromString(t) {\n            const e = [t],\n              r = await E.asyncObjectMethod(this, \"fromString\", e);\n            return this.fromFastBuffer(r.resbuf);\n          }\n          static asyncFromString(t) {\n            return new this().asyncFromString(t);\n          }\n          static isValid(t) {\n            let e;\n            try {\n              e = new z().fromString(t);\n            } catch (t) {\n              return !1;\n            }\n            return e.isValid();\n          }\n          isValid() {\n            try {\n              return this.validate(), !0;\n            } catch (t) {\n              return !1;\n            }\n          }\n          toTxOutScript() {\n            const t = new q();\n            return t.writeOpCode(T.OP_DUP), t.writeOpCode(T.OP_HASH160), t.writeBuffer(this.hashBuf), t.writeOpCode(T.OP_EQUALVERIFY), t.writeOpCode(T.OP_CHECKSIG), t;\n          }\n          fromTxInScript(t) {\n            const e = P.sha256Ripemd160(t.chunks[1].buf || Buffer.from(\"00\".repeat(32), \"hex\"));\n            return this.fromPubKeyHashBuf(e);\n          }\n          static fromTxInScript(t) {\n            return new this().fromTxInScript(t);\n          }\n          fromTxOutScript(t) {\n            return this.fromPubKeyHashBuf(t.chunks[2].buf);\n          }\n          static fromTxOutScript(t) {\n            return new this().fromTxOutScript(t);\n          }\n          toBuffer() {\n            const t = Buffer.from([this.versionByteNum]);\n            return Buffer.concat([t, this.hashBuf]);\n          }\n          toJSON() {\n            const t = {};\n            return this.hashBuf && (t.hashBuf = this.hashBuf.toString(\"hex\")), void 0 !== this.versionByteNum && (t.versionByteNum = this.versionByteNum), t;\n          }\n          fromJSON(t) {\n            return t.hashBuf && (this.hashBuf = Buffer.from(t.hashBuf, \"hex\")), void 0 !== t.versionByteNum && (this.versionByteNum = t.versionByteNum), this;\n          }\n          toString() {\n            return k.encode(this.toBuffer());\n          }\n          async asyncToString() {\n            const t = await E.asyncObjectMethod(this, \"toString\", []);\n            return JSON.parse(t.resbuf.toString());\n          }\n          validate() {\n            if (!Buffer.isBuffer(this.hashBuf) || 20 !== this.hashBuf.length) throw new Error(\"hashBuf must be a buffer of 20 bytes\");\n            if (this.versionByteNum !== this.Constants.pubKeyHash) throw new Error(\"invalid versionByteNum\");\n            return this;\n          }\n        }\n        z.Mainnet = class extends z {\n          constructor(t, e) {\n            super(t, e, x.Mainnet.Address);\n          }\n        }, z.Testnet = class extends z {\n          constructor(t, e) {\n            super(t, e, x.Testnet.Address);\n          }\n        };\n        class G extends S {\n          constructor(t, e, r, i, s, n, a, o = null, h = V) {\n            super({\n              versionBytesNum: t,\n              depth: e,\n              parentFingerPrint: r,\n              childIndex: i,\n              chainCode: s,\n              privKey: n,\n              pubKey: a\n            }), o = o || x.Default.Bip32, this.Constants = o, this.PrivKey = h;\n          }\n          fromRandom() {\n            return this.versionBytesNum = this.Constants.privKey, this.depth = 0, this.parentFingerPrint = Buffer.from([0, 0, 0, 0]), this.childIndex = 0, this.chainCode = D.getRandomBuffer(32), this.privKey = new this.PrivKey().fromRandom(), this.pubKey = new K().fromPrivKey(this.privKey), this;\n          }\n          static fromRandom() {\n            return new this().fromRandom();\n          }\n          fromString(t) {\n            return this.fromBuffer(k.decode(t));\n          }\n          async asyncFromString(t) {\n            const e = [t],\n              r = await E.asyncObjectMethod(this, \"fromString\", e);\n            return this.fromFastBuffer(r.resbuf);\n          }\n          fromSeed(t) {\n            if (!Buffer.isBuffer(t)) throw new Error(\"bytes must be a buffer\");\n            if (t.length < 16) throw new Error(\"Need more than 128 bits of entropy\");\n            if (t.length > 64) throw new Error(\"More than 512 bits of entropy is nonstandard\");\n            const e = P.sha512Hmac(t, Buffer.from(\"Bitcoin seed\"));\n            return this.depth = 0, this.parentFingerPrint = Buffer.from([0, 0, 0, 0]), this.childIndex = 0, this.chainCode = e.slice(32, 64), this.versionBytesNum = this.Constants.privKey, this.privKey = new this.PrivKey().fromBn(p().fromBuffer(e.slice(0, 32))), this.pubKey = new K().fromPrivKey(this.privKey), this;\n          }\n          static fromSeed(t) {\n            return new this().fromSeed(t);\n          }\n          async asyncFromSeed(t) {\n            const e = await E.asyncObjectMethod(this, \"fromSeed\", [t]);\n            return this.fromFastBuffer(e.resbuf);\n          }\n          static asyncFromSeed(t) {\n            return new this().asyncFromSeed(t);\n          }\n          fromBuffer(t) {\n            if (78 !== t.length) throw new Error(\"incorrect bip32 data length\");\n            this.versionBytesNum = t.slice(0, 4).readUInt32BE(0), this.depth = t.slice(4, 5).readUInt8(0), this.parentFingerPrint = t.slice(5, 9), this.childIndex = t.slice(9, 13).readUInt32BE(0), this.chainCode = t.slice(13, 45);\n            const e = t.slice(45, 78),\n              r = this.versionBytesNum === this.Constants.privKey,\n              i = this.versionBytesNum === this.Constants.pubKey;\n            if (r && 0 === e[0]) this.privKey = new this.PrivKey().fromBn(p().fromBuffer(e.slice(1, 33))), this.pubKey = new K().fromPrivKey(this.privKey);else {\n              if (!i || 2 !== e[0] && 3 !== e[0]) throw new Error(\"Invalid key\");\n              this.pubKey = new K().fromDer(e);\n            }\n            return this;\n          }\n          fromFastBuffer(t) {\n            if (0 === t.length) return this;\n            if (78 !== t.length && 111 !== t.length) throw new Error(\"incorrect bip32 fastBuffer data length: \" + t.length);\n            this.versionBytesNum = t.slice(0, 4).readUInt32BE(0), this.depth = t.slice(4, 5).readUInt8(0), this.parentFingerPrint = t.slice(5, 9), this.childIndex = t.slice(9, 13).readUInt32BE(0), this.chainCode = t.slice(13, 45);\n            const e = t.slice(45, t.length),\n              r = this.versionBytesNum === this.Constants.privKey,\n              i = this.versionBytesNum === this.Constants.pubKey;\n            if (r && 0 === e[0] && 78 === t.length) this.privKey = new this.PrivKey().fromBn(p().fromBuffer(e.slice(1, 33))), this.pubKey = new K().fromPrivKey(this.privKey);else {\n              if (!i || 111 !== t.length) throw new Error(\"Invalid key\");\n              this.pubKey = new K().fromFastBuffer(e), this.pubKey.compressed = !0;\n            }\n            return this;\n          }\n          derive(t) {\n            const e = t.split(\"/\");\n            if (\"m\" === t) return this;\n            let r = this;\n            for (const t in e) {\n              const i = e[t];\n              if (\"0\" === t) {\n                if (\"m\" !== i) throw new Error(\"invalid path\");\n                continue;\n              }\n              if (parseInt(i.replace(\"'\", \"\"), 10).toString() !== i.replace(\"'\", \"\")) throw new Error(\"invalid path\");\n              const s = i.length > 1 && \"'\" === i[i.length - 1];\n              let n = 2147483647 & parseInt(s ? i.slice(0, i.length - 1) : i, 10);\n              s && (n += 2147483648), r = r.deriveChild(n);\n            }\n            return r;\n          }\n          async asyncDerive(t) {\n            const e = await E.asyncObjectMethod(this, \"derive\", [t]);\n            return new this.constructor().fromFastBuffer(e.resbuf);\n          }\n          deriveChild(t) {\n            if (\"number\" != typeof t) throw new Error(\"i must be a number\");\n            let e = [];\n            e.push(t >> 24 & 255), e.push(t >> 16 & 255), e.push(t >> 8 & 255), e.push(255 & t), e = Buffer.from(e);\n            const r = 0 != (2147483648 & t),\n              i = this.versionBytesNum === this.Constants.privKey;\n            if (r && (!this.privKey || !i)) throw new Error(\"Cannot do private key derivation without private key\");\n            let s = null;\n            if (this.privKey) {\n              let t = null;\n              t = r ? Buffer.concat([Buffer.from([0]), this.privKey.bn.toBuffer({\n                size: 32\n              }), e]) : Buffer.concat([this.pubKey.toBuffer({\n                size: 32\n              }), e]);\n              const i = P.sha512Hmac(t, this.chainCode),\n                n = p().fromBuffer(i.slice(0, 32), {\n                  size: 32\n                }),\n                a = i.slice(32, 64),\n                o = n.add(this.privKey.bn).mod(L.getN());\n              s = new this.constructor(), s.chainCode = a, s.privKey = new this.PrivKey().fromBn(o), s.pubKey = new K().fromPrivKey(s.privKey);\n            } else {\n              const t = Buffer.concat([this.pubKey.toBuffer(), e]),\n                r = P.sha512Hmac(t, this.chainCode),\n                i = p().fromBuffer(r.slice(0, 32)),\n                n = r.slice(32, 64),\n                a = L.getG().mul(i),\n                o = this.pubKey.point,\n                h = a.add(o),\n                f = new K();\n              f.point = h, s = new this.constructor(), s.chainCode = n, s.pubKey = f;\n            }\n            s.childIndex = t;\n            const n = P.sha256Ripemd160(this.pubKey.toBuffer());\n            return s.parentFingerPrint = n.slice(0, 4), s.versionBytesNum = this.versionBytesNum, s.depth = this.depth + 1, s;\n          }\n          toPublic() {\n            const t = new this.constructor().fromObject(this);\n            return t.versionBytesNum = this.Constants.pubKey, t.privKey = void 0, t;\n          }\n          toBuffer() {\n            const t = this.versionBytesNum === this.Constants.privKey,\n              e = this.versionBytesNum === this.Constants.pubKey;\n            if (t) return new y().writeUInt32BE(this.versionBytesNum).writeUInt8(this.depth).write(this.parentFingerPrint).writeUInt32BE(this.childIndex).write(this.chainCode).writeUInt8(0).write(this.privKey.bn.toBuffer({\n              size: 32\n            })).toBuffer();\n            if (e) {\n              if (!1 === this.pubKey.compressed) throw new Error(\"cannot convert bip32 to buffer if pubKey is not compressed\");\n              return new y().writeUInt32BE(this.versionBytesNum).writeUInt8(this.depth).write(this.parentFingerPrint).writeUInt32BE(this.childIndex).write(this.chainCode).write(this.pubKey.toBuffer()).toBuffer();\n            }\n            throw new Error(\"bip32: invalid versionBytesNum byte\");\n          }\n          toFastBuffer() {\n            if (!this.versionBytesNum) return Buffer.alloc(0);\n            const t = this.versionBytesNum === this.Constants.privKey,\n              e = this.versionBytesNum === this.Constants.pubKey;\n            if (t) return new y().writeUInt32BE(this.versionBytesNum).writeUInt8(this.depth).write(this.parentFingerPrint).writeUInt32BE(this.childIndex).write(this.chainCode).writeUInt8(0).write(this.privKey.bn.toBuffer({\n              size: 32\n            })).toBuffer();\n            if (e) return new y().writeUInt32BE(this.versionBytesNum).writeUInt8(this.depth).write(this.parentFingerPrint).writeUInt32BE(this.childIndex).write(this.chainCode).write(this.pubKey.toFastBuffer()).toBuffer();\n            throw new Error(\"bip32: invalid versionBytesNum byte\");\n          }\n          toString() {\n            return k.encode(this.toBuffer());\n          }\n          async asyncToString() {\n            const t = await E.asyncObjectMethod(this, \"toString\", []);\n            return JSON.parse(t.resbuf.toString());\n          }\n          toJSON() {\n            return this.toFastHex();\n          }\n          fromJSON(t) {\n            return this.fromFastHex(t);\n          }\n          isPrivate() {\n            return this.versionBytesNum === this.Constants.privKey;\n          }\n        }\n        G.Mainnet = class extends G {\n          constructor(t, e, r, i, s, n, a) {\n            super(t, e, r, i, s, n, a, x.Mainnet.Bip32, V.Mainnet);\n          }\n        }, G.Testnet = class extends G {\n          constructor(t, e, r, i, s, n, a) {\n            super(t, e, r, i, s, n, a, x.Testnet.Bip32, V.Testnet);\n          }\n        };\n        const J = [\"abandon\", \"ability\", \"able\", \"about\", \"above\", \"absent\", \"absorb\", \"abstract\", \"absurd\", \"abuse\", \"access\", \"accident\", \"account\", \"accuse\", \"achieve\", \"acid\", \"acoustic\", \"acquire\", \"across\", \"act\", \"action\", \"actor\", \"actress\", \"actual\", \"adapt\", \"add\", \"addict\", \"address\", \"adjust\", \"admit\", \"adult\", \"advance\", \"advice\", \"aerobic\", \"affair\", \"afford\", \"afraid\", \"again\", \"age\", \"agent\", \"agree\", \"ahead\", \"aim\", \"air\", \"airport\", \"aisle\", \"alarm\", \"album\", \"alcohol\", \"alert\", \"alien\", \"all\", \"alley\", \"allow\", \"almost\", \"alone\", \"alpha\", \"already\", \"also\", \"alter\", \"always\", \"amateur\", \"amazing\", \"among\", \"amount\", \"amused\", \"analyst\", \"anchor\", \"ancient\", \"anger\", \"angle\", \"angry\", \"animal\", \"ankle\", \"announce\", \"annual\", \"another\", \"answer\", \"antenna\", \"antique\", \"anxiety\", \"any\", \"apart\", \"apology\", \"appear\", \"apple\", \"approve\", \"april\", \"arch\", \"arctic\", \"area\", \"arena\", \"argue\", \"arm\", \"armed\", \"armor\", \"army\", \"around\", \"arrange\", \"arrest\", \"arrive\", \"arrow\", \"art\", \"artefact\", \"artist\", \"artwork\", \"ask\", \"aspect\", \"assault\", \"asset\", \"assist\", \"assume\", \"asthma\", \"athlete\", \"atom\", \"attack\", \"attend\", \"attitude\", \"attract\", \"auction\", \"audit\", \"august\", \"aunt\", \"author\", \"auto\", \"autumn\", \"average\", \"avocado\", \"avoid\", \"awake\", \"aware\", \"away\", \"awesome\", \"awful\", \"awkward\", \"axis\", \"baby\", \"bachelor\", \"bacon\", \"badge\", \"bag\", \"balance\", \"balcony\", \"ball\", \"bamboo\", \"banana\", \"banner\", \"bar\", \"barely\", \"bargain\", \"barrel\", \"base\", \"basic\", \"basket\", \"battle\", \"beach\", \"bean\", \"beauty\", \"because\", \"become\", \"beef\", \"before\", \"begin\", \"behave\", \"behind\", \"believe\", \"below\", \"belt\", \"bench\", \"benefit\", \"best\", \"betray\", \"better\", \"between\", \"beyond\", \"bicycle\", \"bid\", \"bike\", \"bind\", \"biology\", \"bird\", \"birth\", \"bitter\", \"black\", \"blade\", \"blame\", \"blanket\", \"blast\", \"bleak\", \"bless\", \"blind\", \"blood\", \"blossom\", \"blouse\", \"blue\", \"blur\", \"blush\", \"board\", \"boat\", \"body\", \"boil\", \"bomb\", \"bone\", \"bonus\", \"book\", \"boost\", \"border\", \"boring\", \"borrow\", \"boss\", \"bottom\", \"bounce\", \"box\", \"boy\", \"bracket\", \"brain\", \"brand\", \"brass\", \"brave\", \"bread\", \"breeze\", \"brick\", \"bridge\", \"brief\", \"bright\", \"bring\", \"brisk\", \"broccoli\", \"broken\", \"bronze\", \"broom\", \"brother\", \"brown\", \"brush\", \"bubble\", \"buddy\", \"budget\", \"buffalo\", \"build\", \"bulb\", \"bulk\", \"bullet\", \"bundle\", \"bunker\", \"burden\", \"burger\", \"burst\", \"bus\", \"business\", \"busy\", \"butter\", \"buyer\", \"buzz\", \"cabbage\", \"cabin\", \"cable\", \"cactus\", \"cage\", \"cake\", \"call\", \"calm\", \"camera\", \"camp\", \"can\", \"canal\", \"cancel\", \"candy\", \"cannon\", \"canoe\", \"canvas\", \"canyon\", \"capable\", \"capital\", \"captain\", \"car\", \"carbon\", \"card\", \"cargo\", \"carpet\", \"carry\", \"cart\", \"case\", \"cash\", \"casino\", \"castle\", \"casual\", \"cat\", \"catalog\", \"catch\", \"category\", \"cattle\", \"caught\", \"cause\", \"caution\", \"cave\", \"ceiling\", \"celery\", \"cement\", \"census\", \"century\", \"cereal\", \"certain\", \"chair\", \"chalk\", \"champion\", \"change\", \"chaos\", \"chapter\", \"charge\", \"chase\", \"chat\", \"cheap\", \"check\", \"cheese\", \"chef\", \"cherry\", \"chest\", \"chicken\", \"chief\", \"child\", \"chimney\", \"choice\", \"choose\", \"chronic\", \"chuckle\", \"chunk\", \"churn\", \"cigar\", \"cinnamon\", \"circle\", \"citizen\", \"city\", \"civil\", \"claim\", \"clap\", \"clarify\", \"claw\", \"clay\", \"clean\", \"clerk\", \"clever\", \"click\", \"client\", \"cliff\", \"climb\", \"clinic\", \"clip\", \"clock\", \"clog\", \"close\", \"cloth\", \"cloud\", \"clown\", \"club\", \"clump\", \"cluster\", \"clutch\", \"coach\", \"coast\", \"coconut\", \"code\", \"coffee\", \"coil\", \"coin\", \"collect\", \"color\", \"column\", \"combine\", \"come\", \"comfort\", \"comic\", \"common\", \"company\", \"concert\", \"conduct\", \"confirm\", \"congress\", \"connect\", \"consider\", \"control\", \"convince\", \"cook\", \"cool\", \"copper\", \"copy\", \"coral\", \"core\", \"corn\", \"correct\", \"cost\", \"cotton\", \"couch\", \"country\", \"couple\", \"course\", \"cousin\", \"cover\", \"coyote\", \"crack\", \"cradle\", \"craft\", \"cram\", \"crane\", \"crash\", \"crater\", \"crawl\", \"crazy\", \"cream\", \"credit\", \"creek\", \"crew\", \"cricket\", \"crime\", \"crisp\", \"critic\", \"crop\", \"cross\", \"crouch\", \"crowd\", \"crucial\", \"cruel\", \"cruise\", \"crumble\", \"crunch\", \"crush\", \"cry\", \"crystal\", \"cube\", \"culture\", \"cup\", \"cupboard\", \"curious\", \"current\", \"curtain\", \"curve\", \"cushion\", \"custom\", \"cute\", \"cycle\", \"dad\", \"damage\", \"damp\", \"dance\", \"danger\", \"daring\", \"dash\", \"daughter\", \"dawn\", \"day\", \"deal\", \"debate\", \"debris\", \"decade\", \"december\", \"decide\", \"decline\", \"decorate\", \"decrease\", \"deer\", \"defense\", \"define\", \"defy\", \"degree\", \"delay\", \"deliver\", \"demand\", \"demise\", \"denial\", \"dentist\", \"deny\", \"depart\", \"depend\", \"deposit\", \"depth\", \"deputy\", \"derive\", \"describe\", \"desert\", \"design\", \"desk\", \"despair\", \"destroy\", \"detail\", \"detect\", \"develop\", \"device\", \"devote\", \"diagram\", \"dial\", \"diamond\", \"diary\", \"dice\", \"diesel\", \"diet\", \"differ\", \"digital\", \"dignity\", \"dilemma\", \"dinner\", \"dinosaur\", \"direct\", \"dirt\", \"disagree\", \"discover\", \"disease\", \"dish\", \"dismiss\", \"disorder\", \"display\", \"distance\", \"divert\", \"divide\", \"divorce\", \"dizzy\", \"doctor\", \"document\", \"dog\", \"doll\", \"dolphin\", \"domain\", \"donate\", \"donkey\", \"donor\", \"door\", \"dose\", \"double\", \"dove\", \"draft\", \"dragon\", \"drama\", \"drastic\", \"draw\", \"dream\", \"dress\", \"drift\", \"drill\", \"drink\", \"drip\", \"drive\", \"drop\", \"drum\", \"dry\", \"duck\", \"dumb\", \"dune\", \"during\", \"dust\", \"dutch\", \"duty\", \"dwarf\", \"dynamic\", \"eager\", \"eagle\", \"early\", \"earn\", \"earth\", \"easily\", \"east\", \"easy\", \"echo\", \"ecology\", \"economy\", \"edge\", \"edit\", \"educate\", \"effort\", \"egg\", \"eight\", \"either\", \"elbow\", \"elder\", \"electric\", \"elegant\", \"element\", \"elephant\", \"elevator\", \"elite\", \"else\", \"embark\", \"embody\", \"embrace\", \"emerge\", \"emotion\", \"employ\", \"empower\", \"empty\", \"enable\", \"enact\", \"end\", \"endless\", \"endorse\", \"enemy\", \"energy\", \"enforce\", \"engage\", \"engine\", \"enhance\", \"enjoy\", \"enlist\", \"enough\", \"enrich\", \"enroll\", \"ensure\", \"enter\", \"entire\", \"entry\", \"envelope\", \"episode\", \"equal\", \"equip\", \"era\", \"erase\", \"erode\", \"erosion\", \"error\", \"erupt\", \"escape\", \"essay\", \"essence\", \"estate\", \"eternal\", \"ethics\", \"evidence\", \"evil\", \"evoke\", \"evolve\", \"exact\", \"example\", \"excess\", \"exchange\", \"excite\", \"exclude\", \"excuse\", \"execute\", \"exercise\", \"exhaust\", \"exhibit\", \"exile\", \"exist\", \"exit\", \"exotic\", \"expand\", \"expect\", \"expire\", \"explain\", \"expose\", \"express\", \"extend\", \"extra\", \"eye\", \"eyebrow\", \"fabric\", \"face\", \"faculty\", \"fade\", \"faint\", \"faith\", \"fall\", \"false\", \"fame\", \"family\", \"famous\", \"fan\", \"fancy\", \"fantasy\", \"farm\", \"fashion\", \"fat\", \"fatal\", \"father\", \"fatigue\", \"fault\", \"favorite\", \"feature\", \"february\", \"federal\", \"fee\", \"feed\", \"feel\", \"female\", \"fence\", \"festival\", \"fetch\", \"fever\", \"few\", \"fiber\", \"fiction\", \"field\", \"figure\", \"file\", \"film\", \"filter\", \"final\", \"find\", \"fine\", \"finger\", \"finish\", \"fire\", \"firm\", \"first\", \"fiscal\", \"fish\", \"fit\", \"fitness\", \"fix\", \"flag\", \"flame\", \"flash\", \"flat\", \"flavor\", \"flee\", \"flight\", \"flip\", \"float\", \"flock\", \"floor\", \"flower\", \"fluid\", \"flush\", \"fly\", \"foam\", \"focus\", \"fog\", \"foil\", \"fold\", \"follow\", \"food\", \"foot\", \"force\", \"forest\", \"forget\", \"fork\", \"fortune\", \"forum\", \"forward\", \"fossil\", \"foster\", \"found\", \"fox\", \"fragile\", \"frame\", \"frequent\", \"fresh\", \"friend\", \"fringe\", \"frog\", \"front\", \"frost\", \"frown\", \"frozen\", \"fruit\", \"fuel\", \"fun\", \"funny\", \"furnace\", \"fury\", \"future\", \"gadget\", \"gain\", \"galaxy\", \"gallery\", \"game\", \"gap\", \"garage\", \"garbage\", \"garden\", \"garlic\", \"garment\", \"gas\", \"gasp\", \"gate\", \"gather\", \"gauge\", \"gaze\", \"general\", \"genius\", \"genre\", \"gentle\", \"genuine\", \"gesture\", \"ghost\", \"giant\", \"gift\", \"giggle\", \"ginger\", \"giraffe\", \"girl\", \"give\", \"glad\", \"glance\", \"glare\", \"glass\", \"glide\", \"glimpse\", \"globe\", \"gloom\", \"glory\", \"glove\", \"glow\", \"glue\", \"goat\", \"goddess\", \"gold\", \"good\", \"goose\", \"gorilla\", \"gospel\", \"gossip\", \"govern\", \"gown\", \"grab\", \"grace\", \"grain\", \"grant\", \"grape\", \"grass\", \"gravity\", \"great\", \"green\", \"grid\", \"grief\", \"grit\", \"grocery\", \"group\", \"grow\", \"grunt\", \"guard\", \"guess\", \"guide\", \"guilt\", \"guitar\", \"gun\", \"gym\", \"habit\", \"hair\", \"half\", \"hammer\", \"hamster\", \"hand\", \"happy\", \"harbor\", \"hard\", \"harsh\", \"harvest\", \"hat\", \"have\", \"hawk\", \"hazard\", \"head\", \"health\", \"heart\", \"heavy\", \"hedgehog\", \"height\", \"hello\", \"helmet\", \"help\", \"hen\", \"hero\", \"hidden\", \"high\", \"hill\", \"hint\", \"hip\", \"hire\", \"history\", \"hobby\", \"hockey\", \"hold\", \"hole\", \"holiday\", \"hollow\", \"home\", \"honey\", \"hood\", \"hope\", \"horn\", \"horror\", \"horse\", \"hospital\", \"host\", \"hotel\", \"hour\", \"hover\", \"hub\", \"huge\", \"human\", \"humble\", \"humor\", \"hundred\", \"hungry\", \"hunt\", \"hurdle\", \"hurry\", \"hurt\", \"husband\", \"hybrid\", \"ice\", \"icon\", \"idea\", \"identify\", \"idle\", \"ignore\", \"ill\", \"illegal\", \"illness\", \"image\", \"imitate\", \"immense\", \"immune\", \"impact\", \"impose\", \"improve\", \"impulse\", \"inch\", \"include\", \"income\", \"increase\", \"index\", \"indicate\", \"indoor\", \"industry\", \"infant\", \"inflict\", \"inform\", \"inhale\", \"inherit\", \"initial\", \"inject\", \"injury\", \"inmate\", \"inner\", \"innocent\", \"input\", \"inquiry\", \"insane\", \"insect\", \"inside\", \"inspire\", \"install\", \"intact\", \"interest\", \"into\", \"invest\", \"invite\", \"involve\", \"iron\", \"island\", \"isolate\", \"issue\", \"item\", \"ivory\", \"jacket\", \"jaguar\", \"jar\", \"jazz\", \"jealous\", \"jeans\", \"jelly\", \"jewel\", \"job\", \"join\", \"joke\", \"journey\", \"joy\", \"judge\", \"juice\", \"jump\", \"jungle\", \"junior\", \"junk\", \"just\", \"kangaroo\", \"keen\", \"keep\", \"ketchup\", \"key\", \"kick\", \"kid\", \"kidney\", \"kind\", \"kingdom\", \"kiss\", \"kit\", \"kitchen\", \"kite\", \"kitten\", \"kiwi\", \"knee\", \"knife\", \"knock\", \"know\", \"lab\", \"label\", \"labor\", \"ladder\", \"lady\", \"lake\", \"lamp\", \"language\", \"laptop\", \"large\", \"later\", \"latin\", \"laugh\", \"laundry\", \"lava\", \"law\", \"lawn\", \"lawsuit\", \"layer\", \"lazy\", \"leader\", \"leaf\", \"learn\", \"leave\", \"lecture\", \"left\", \"leg\", \"legal\", \"legend\", \"leisure\", \"lemon\", \"lend\", \"length\", \"lens\", \"leopard\", \"lesson\", \"letter\", \"level\", \"liar\", \"liberty\", \"library\", \"license\", \"life\", \"lift\", \"light\", \"like\", \"limb\", \"limit\", \"link\", \"lion\", \"liquid\", \"list\", \"little\", \"live\", \"lizard\", \"load\", \"loan\", \"lobster\", \"local\", \"lock\", \"logic\", \"lonely\", \"long\", \"loop\", \"lottery\", \"loud\", \"lounge\", \"love\", \"loyal\", \"lucky\", \"luggage\", \"lumber\", \"lunar\", \"lunch\", \"luxury\", \"lyrics\", \"machine\", \"mad\", \"magic\", \"magnet\", \"maid\", \"mail\", \"main\", \"major\", \"make\", \"mammal\", \"man\", \"manage\", \"mandate\", \"mango\", \"mansion\", \"manual\", \"maple\", \"marble\", \"march\", \"margin\", \"marine\", \"market\", \"marriage\", \"mask\", \"mass\", \"master\", \"match\", \"material\", \"math\", \"matrix\", \"matter\", \"maximum\", \"maze\", \"meadow\", \"mean\", \"measure\", \"meat\", \"mechanic\", \"medal\", \"media\", \"melody\", \"melt\", \"member\", \"memory\", \"mention\", \"menu\", \"mercy\", \"merge\", \"merit\", \"merry\", \"mesh\", \"message\", \"metal\", \"method\", \"middle\", \"midnight\", \"milk\", \"million\", \"mimic\", \"mind\", \"minimum\", \"minor\", \"minute\", \"miracle\", \"mirror\", \"misery\", \"miss\", \"mistake\", \"mix\", \"mixed\", \"mixture\", \"mobile\", \"model\", \"modify\", \"mom\", \"moment\", \"monitor\", \"monkey\", \"monster\", \"month\", \"moon\", \"moral\", \"more\", \"morning\", \"mosquito\", \"mother\", \"motion\", \"motor\", \"mountain\", \"mouse\", \"move\", \"movie\", \"much\", \"muffin\", \"mule\", \"multiply\", \"muscle\", \"museum\", \"mushroom\", \"music\", \"must\", \"mutual\", \"myself\", \"mystery\", \"myth\", \"naive\", \"name\", \"napkin\", \"narrow\", \"nasty\", \"nation\", \"nature\", \"near\", \"neck\", \"need\", \"negative\", \"neglect\", \"neither\", \"nephew\", \"nerve\", \"nest\", \"net\", \"network\", \"neutral\", \"never\", \"news\", \"next\", \"nice\", \"night\", \"noble\", \"noise\", \"nominee\", \"noodle\", \"normal\", \"north\", \"nose\", \"notable\", \"note\", \"nothing\", \"notice\", \"novel\", \"now\", \"nuclear\", \"number\", \"nurse\", \"nut\", \"oak\", \"obey\", \"object\", \"oblige\", \"obscure\", \"observe\", \"obtain\", \"obvious\", \"occur\", \"ocean\", \"october\", \"odor\", \"off\", \"offer\", \"office\", \"often\", \"oil\", \"okay\", \"old\", \"olive\", \"olympic\", \"omit\", \"once\", \"one\", \"onion\", \"online\", \"only\", \"open\", \"opera\", \"opinion\", \"oppose\", \"option\", \"orange\", \"orbit\", \"orchard\", \"order\", \"ordinary\", \"organ\", \"orient\", \"original\", \"orphan\", \"ostrich\", \"other\", \"outdoor\", \"outer\", \"output\", \"outside\", \"oval\", \"oven\", \"over\", \"own\", \"owner\", \"oxygen\", \"oyster\", \"ozone\", \"pact\", \"paddle\", \"page\", \"pair\", \"palace\", \"palm\", \"panda\", \"panel\", \"panic\", \"panther\", \"paper\", \"parade\", \"parent\", \"park\", \"parrot\", \"party\", \"pass\", \"patch\", \"path\", \"patient\", \"patrol\", \"pattern\", \"pause\", \"pave\", \"payment\", \"peace\", \"peanut\", \"pear\", \"peasant\", \"pelican\", \"pen\", \"penalty\", \"pencil\", \"people\", \"pepper\", \"perfect\", \"permit\", \"person\", \"pet\", \"phone\", \"photo\", \"phrase\", \"physical\", \"piano\", \"picnic\", \"picture\", \"piece\", \"pig\", \"pigeon\", \"pill\", \"pilot\", \"pink\", \"pioneer\", \"pipe\", \"pistol\", \"pitch\", \"pizza\", \"place\", \"planet\", \"plastic\", \"plate\", \"play\", \"please\", \"pledge\", \"pluck\", \"plug\", \"plunge\", \"poem\", \"poet\", \"point\", \"polar\", \"pole\", \"police\", \"pond\", \"pony\", \"pool\", \"popular\", \"portion\", \"position\", \"possible\", \"post\", \"potato\", \"pottery\", \"poverty\", \"powder\", \"power\", \"practice\", \"praise\", \"predict\", \"prefer\", \"prepare\", \"present\", \"pretty\", \"prevent\", \"price\", \"pride\", \"primary\", \"print\", \"priority\", \"prison\", \"private\", \"prize\", \"problem\", \"process\", \"produce\", \"profit\", \"program\", \"project\", \"promote\", \"proof\", \"property\", \"prosper\", \"protect\", \"proud\", \"provide\", \"public\", \"pudding\", \"pull\", \"pulp\", \"pulse\", \"pumpkin\", \"punch\", \"pupil\", \"puppy\", \"purchase\", \"purity\", \"purpose\", \"purse\", \"push\", \"put\", \"puzzle\", \"pyramid\", \"quality\", \"quantum\", \"quarter\", \"question\", \"quick\", \"quit\", \"quiz\", \"quote\", \"rabbit\", \"raccoon\", \"race\", \"rack\", \"radar\", \"radio\", \"rail\", \"rain\", \"raise\", \"rally\", \"ramp\", \"ranch\", \"random\", \"range\", \"rapid\", \"rare\", \"rate\", \"rather\", \"raven\", \"raw\", \"razor\", \"ready\", \"real\", \"reason\", \"rebel\", \"rebuild\", \"recall\", \"receive\", \"recipe\", \"record\", \"recycle\", \"reduce\", \"reflect\", \"reform\", \"refuse\", \"region\", \"regret\", \"regular\", \"reject\", \"relax\", \"release\", \"relief\", \"rely\", \"remain\", \"remember\", \"remind\", \"remove\", \"render\", \"renew\", \"rent\", \"reopen\", \"repair\", \"repeat\", \"replace\", \"report\", \"require\", \"rescue\", \"resemble\", \"resist\", \"resource\", \"response\", \"result\", \"retire\", \"retreat\", \"return\", \"reunion\", \"reveal\", \"review\", \"reward\", \"rhythm\", \"rib\", \"ribbon\", \"rice\", \"rich\", \"ride\", \"ridge\", \"rifle\", \"right\", \"rigid\", \"ring\", \"riot\", \"ripple\", \"risk\", \"ritual\", \"rival\", \"river\", \"road\", \"roast\", \"robot\", \"robust\", \"rocket\", \"romance\", \"roof\", \"rookie\", \"room\", \"rose\", \"rotate\", \"rough\", \"round\", \"route\", \"royal\", \"rubber\", \"rude\", \"rug\", \"rule\", \"run\", \"runway\", \"rural\", \"sad\", \"saddle\", \"sadness\", \"safe\", \"sail\", \"salad\", \"salmon\", \"salon\", \"salt\", \"salute\", \"same\", \"sample\", \"sand\", \"satisfy\", \"satoshi\", \"sauce\", \"sausage\", \"save\", \"say\", \"scale\", \"scan\", \"scare\", \"scatter\", \"scene\", \"scheme\", \"school\", \"science\", \"scissors\", \"scorpion\", \"scout\", \"scrap\", \"screen\", \"script\", \"scrub\", \"sea\", \"search\", \"season\", \"seat\", \"second\", \"secret\", \"section\", \"security\", \"seed\", \"seek\", \"segment\", \"select\", \"sell\", \"seminar\", \"senior\", \"sense\", \"sentence\", \"series\", \"service\", \"session\", \"settle\", \"setup\", \"seven\", \"shadow\", \"shaft\", \"shallow\", \"share\", \"shed\", \"shell\", \"sheriff\", \"shield\", \"shift\", \"shine\", \"ship\", \"shiver\", \"shock\", \"shoe\", \"shoot\", \"shop\", \"short\", \"shoulder\", \"shove\", \"shrimp\", \"shrug\", \"shuffle\", \"shy\", \"sibling\", \"sick\", \"side\", \"siege\", \"sight\", \"sign\", \"silent\", \"silk\", \"silly\", \"silver\", \"similar\", \"simple\", \"since\", \"sing\", \"siren\", \"sister\", \"situate\", \"six\", \"size\", \"skate\", \"sketch\", \"ski\", \"skill\", \"skin\", \"skirt\", \"skull\", \"slab\", \"slam\", \"sleep\", \"slender\", \"slice\", \"slide\", \"slight\", \"slim\", \"slogan\", \"slot\", \"slow\", \"slush\", \"small\", \"smart\", \"smile\", \"smoke\", \"smooth\", \"snack\", \"snake\", \"snap\", \"sniff\", \"snow\", \"soap\", \"soccer\", \"social\", \"sock\", \"soda\", \"soft\", \"solar\", \"soldier\", \"solid\", \"solution\", \"solve\", \"someone\", \"song\", \"soon\", \"sorry\", \"sort\", \"soul\", \"sound\", \"soup\", \"source\", \"south\", \"space\", \"spare\", \"spatial\", \"spawn\", \"speak\", \"special\", \"speed\", \"spell\", \"spend\", \"sphere\", \"spice\", \"spider\", \"spike\", \"spin\", \"spirit\", \"split\", \"spoil\", \"sponsor\", \"spoon\", \"sport\", \"spot\", \"spray\", \"spread\", \"spring\", \"spy\", \"square\", \"squeeze\", \"squirrel\", \"stable\", \"stadium\", \"staff\", \"stage\", \"stairs\", \"stamp\", \"stand\", \"start\", \"state\", \"stay\", \"steak\", \"steel\", \"stem\", \"step\", \"stereo\", \"stick\", \"still\", \"sting\", \"stock\", \"stomach\", \"stone\", \"stool\", \"story\", \"stove\", \"strategy\", \"street\", \"strike\", \"strong\", \"struggle\", \"student\", \"stuff\", \"stumble\", \"style\", \"subject\", \"submit\", \"subway\", \"success\", \"such\", \"sudden\", \"suffer\", \"sugar\", \"suggest\", \"suit\", \"summer\", \"sun\", \"sunny\", \"sunset\", \"super\", \"supply\", \"supreme\", \"sure\", \"surface\", \"surge\", \"surprise\", \"surround\", \"survey\", \"suspect\", \"sustain\", \"swallow\", \"swamp\", \"swap\", \"swarm\", \"swear\", \"sweet\", \"swift\", \"swim\", \"swing\", \"switch\", \"sword\", \"symbol\", \"symptom\", \"syrup\", \"system\", \"table\", \"tackle\", \"tag\", \"tail\", \"talent\", \"talk\", \"tank\", \"tape\", \"target\", \"task\", \"taste\", \"tattoo\", \"taxi\", \"teach\", \"team\", \"tell\", \"ten\", \"tenant\", \"tennis\", \"tent\", \"term\", \"test\", \"text\", \"thank\", \"that\", \"theme\", \"then\", \"theory\", \"there\", \"they\", \"thing\", \"this\", \"thought\", \"three\", \"thrive\", \"throw\", \"thumb\", \"thunder\", \"ticket\", \"tide\", \"tiger\", \"tilt\", \"timber\", \"time\", \"tiny\", \"tip\", \"tired\", \"tissue\", \"title\", \"toast\", \"tobacco\", \"today\", \"toddler\", \"toe\", \"together\", \"toilet\", \"token\", \"tomato\", \"tomorrow\", \"tone\", \"tongue\", \"tonight\", \"tool\", \"tooth\", \"top\", \"topic\", \"topple\", \"torch\", \"tornado\", \"tortoise\", \"toss\", \"total\", \"tourist\", \"toward\", \"tower\", \"town\", \"toy\", \"track\", \"trade\", \"traffic\", \"tragic\", \"train\", \"transfer\", \"trap\", \"trash\", \"travel\", \"tray\", \"treat\", \"tree\", \"trend\", \"trial\", \"tribe\", \"trick\", \"trigger\", \"trim\", \"trip\", \"trophy\", \"trouble\", \"truck\", \"true\", \"truly\", \"trumpet\", \"trust\", \"truth\", \"try\", \"tube\", \"tuition\", \"tumble\", \"tuna\", \"tunnel\", \"turkey\", \"turn\", \"turtle\", \"twelve\", \"twenty\", \"twice\", \"twin\", \"twist\", \"two\", \"type\", \"typical\", \"ugly\", \"umbrella\", \"unable\", \"unaware\", \"uncle\", \"uncover\", \"under\", \"undo\", \"unfair\", \"unfold\", \"unhappy\", \"uniform\", \"unique\", \"unit\", \"universe\", \"unknown\", \"unlock\", \"until\", \"unusual\", \"unveil\", \"update\", \"upgrade\", \"uphold\", \"upon\", \"upper\", \"upset\", \"urban\", \"urge\", \"usage\", \"use\", \"used\", \"useful\", \"useless\", \"usual\", \"utility\", \"vacant\", \"vacuum\", \"vague\", \"valid\", \"valley\", \"valve\", \"van\", \"vanish\", \"vapor\", \"various\", \"vast\", \"vault\", \"vehicle\", \"velvet\", \"vendor\", \"venture\", \"venue\", \"verb\", \"verify\", \"version\", \"very\", \"vessel\", \"veteran\", \"viable\", \"vibrant\", \"vicious\", \"victory\", \"video\", \"view\", \"village\", \"vintage\", \"violin\", \"virtual\", \"virus\", \"visa\", \"visit\", \"visual\", \"vital\", \"vivid\", \"vocal\", \"voice\", \"void\", \"volcano\", \"volume\", \"vote\", \"voyage\", \"wage\", \"wagon\", \"wait\", \"walk\", \"wall\", \"walnut\", \"want\", \"warfare\", \"warm\", \"warrior\", \"wash\", \"wasp\", \"waste\", \"water\", \"wave\", \"way\", \"wealth\", \"weapon\", \"wear\", \"weasel\", \"weather\", \"web\", \"wedding\", \"weekend\", \"weird\", \"welcome\", \"west\", \"wet\", \"whale\", \"what\", \"wheat\", \"wheel\", \"when\", \"where\", \"whip\", \"whisper\", \"wide\", \"width\", \"wife\", \"wild\", \"will\", \"win\", \"window\", \"wine\", \"wing\", \"wink\", \"winner\", \"winter\", \"wire\", \"wisdom\", \"wise\", \"wish\", \"witness\", \"wolf\", \"woman\", \"wonder\", \"wood\", \"wool\", \"word\", \"work\", \"world\", \"worry\", \"worth\", \"wrap\", \"wreck\", \"wrestle\", \"wrist\", \"write\", \"wrong\", \"yard\", \"year\", \"yellow\", \"you\", \"young\", \"youth\", \"zebra\", \"zero\", \"zone\", \"zoo\"];\n        J.space = \" \";\n        class Y extends S {\n          constructor(t, e, r = J) {\n            super({\n              mnemonic: t,\n              seed: e\n            }), this.Wordlist = r;\n          }\n          toBw(t) {\n            if (t || (t = new y()), this.mnemonic) {\n              const e = Buffer.from(this.mnemonic);\n              t.writeVarIntNum(e.length), t.write(e);\n            } else t.writeVarIntNum(0);\n            return this.seed ? (t.writeVarIntNum(this.seed.length), t.write(this.seed)) : t.writeVarIntNum(0), t;\n          }\n          fromBr(t) {\n            const e = t.readVarIntNum();\n            e > 0 && (this.mnemonic = t.read(e).toString());\n            const r = t.readVarIntNum();\n            return r > 0 && (this.seed = t.read(r)), this;\n          }\n          fromRandom(t) {\n            if (t || (t = 128), t % 32 != 0) throw new Error(\"bits must be multiple of 32\");\n            if (t < 128) throw new Error(\"bits must be at least 128\");\n            const e = D.getRandomBuffer(t / 8);\n            return this.entropy2Mnemonic(e), this.mnemonic2Seed(), this;\n          }\n          static fromRandom(t) {\n            return new this().fromRandom(t);\n          }\n          async asyncFromRandom(t) {\n            t || (t = 128);\n            const e = D.getRandomBuffer(t / 8);\n            let r = await E.asyncObjectMethod(this, \"entropy2Mnemonic\", [e]);\n            const i = new Y().fromFastBuffer(r.resbuf);\n            return r = await E.asyncObjectMethod(i, \"mnemonic2Seed\", []), this.fromFastBuffer(r.resbuf);\n          }\n          static asyncFromRandom(t) {\n            return new this().asyncFromRandom(t);\n          }\n          fromEntropy(t) {\n            return this.entropy2Mnemonic(t), this;\n          }\n          static fromEntropy(t) {\n            return new this().fromEntropy(t);\n          }\n          async asyncFromEntropy(t) {\n            const e = await E.asyncObjectMethod(this, \"fromEntropy\", [t]);\n            return this.fromFastBuffer(e.resbuf);\n          }\n          static asyncFromEntropy(t) {\n            return new this().asyncFromEntropy(t);\n          }\n          fromString(t) {\n            return this.mnemonic = t, this;\n          }\n          toString() {\n            return this.mnemonic;\n          }\n          toSeed(t) {\n            return this.mnemonic2Seed(t), this.seed;\n          }\n          async asyncToSeed(t) {\n            void 0 === t && (t = \"\");\n            const e = [t];\n            return (await E.asyncObjectMethod(this, \"toSeed\", e)).resbuf;\n          }\n          entropy2Mnemonic(t) {\n            if (!Buffer.isBuffer(t) || t.length < 16) throw new Error(\"Entropy is less than 128 bits. It must be 128 bits or more.\");\n            const e = P.sha256(t);\n            let r = \"\";\n            const i = 8 * t.length;\n            for (let e = 0; e < t.length; e++) r += (\"00000000\" + t[e].toString(2)).slice(-8);\n            let s = e[0].toString(2);\n            if (s = (\"00000000\" + s).slice(-8).slice(0, i / 32), r += s, r.length % 11 != 0) throw new Error(\"internal error - entropy not an even multiple of 11 bits - \" + r.length);\n            let n = \"\";\n            for (let t = 0; t < r.length / 11; t++) {\n              \"\" !== n && (n += this.Wordlist.space);\n              const e = parseInt(r.slice(11 * t, 11 * (t + 1)), 2);\n              n += this.Wordlist[e];\n            }\n            return this.mnemonic = n, this;\n          }\n          check() {\n            const t = this.mnemonic.split(this.Wordlist.space);\n            let e = \"\";\n            for (let r = 0; r < t.length; r++) {\n              const i = this.Wordlist.indexOf(t[r]);\n              if (i < 0) return !1;\n              e += (\"00000000000\" + i.toString(2)).slice(-11);\n            }\n            if (e.length % 11 != 0) throw new Error(\"internal error - entropy not an even multiple of 11 bits - \" + e.length);\n            const r = e.length / 33,\n              i = e.slice(-r),\n              s = e.slice(0, e.length - r),\n              n = Buffer.alloc(s.length / 8);\n            for (let t = 0; t < s.length / 8; t++) n.writeUInt8(parseInt(e.slice(8 * t, 8 * (t + 1)), 2), t);\n            let a = P.sha256(n)[0].toString(2);\n            return a = (\"00000000\" + a).slice(-8).slice(0, r), a === i;\n          }\n          mnemonic2Seed(t = \"\") {\n            let e = this.mnemonic;\n            if (!this.check()) throw new Error(\"Mnemonic does not pass the check - was the mnemonic typed incorrectly? Are there extra spaces?\");\n            if (\"string\" != typeof t) throw new Error(\"passphrase must be a string or undefined\");\n            e = e.normalize(\"NFKD\"), t = t.normalize(\"NFKD\");\n            const r = Buffer.from(e),\n              i = Buffer.concat([Buffer.from(\"mnemonic\"), Buffer.from(t)]);\n            return this.seed = l.pbkdf2Sync(r, i, 2048, 64, \"sha512\"), this;\n          }\n          isValid(t = \"\") {\n            let e;\n            try {\n              e = !!this.mnemonic2Seed(t);\n            } catch (t) {\n              e = !1;\n            }\n            return e;\n          }\n          static isValid(t, e = \"\") {\n            return new Y(t).isValid(e);\n          }\n        }\n        const W = [\"あいこくしん\", \"あいさつ\", \"あいだ\", \"あおぞら\", \"あかちゃん\", \"あきる\", \"あけがた\", \"あける\", \"あこがれる\", \"あさい\", \"あさひ\", \"あしあと\", \"あじわう\", \"あずかる\", \"あずき\", \"あそぶ\", \"あたえる\", \"あたためる\", \"あたりまえ\", \"あたる\", \"あつい\", \"あつかう\", \"あっしゅく\", \"あつまり\", \"あつめる\", \"あてな\", \"あてはまる\", \"あひる\", \"あぶら\", \"あぶる\", \"あふれる\", \"あまい\", \"あまど\", \"あまやかす\", \"あまり\", \"あみもの\", \"あめりか\", \"あやまる\", \"あゆむ\", \"あらいぐま\", \"あらし\", \"あらすじ\", \"あらためる\", \"あらゆる\", \"あらわす\", \"ありがとう\", \"あわせる\", \"あわてる\", \"あんい\", \"あんがい\", \"あんこ\", \"あんぜん\", \"あんてい\", \"あんない\", \"あんまり\", \"いいだす\", \"いおん\", \"いがい\", \"いがく\", \"いきおい\", \"いきなり\", \"いきもの\", \"いきる\", \"いくじ\", \"いくぶん\", \"いけばな\", \"いけん\", \"いこう\", \"いこく\", \"いこつ\", \"いさましい\", \"いさん\", \"いしき\", \"いじゅう\", \"いじょう\", \"いじわる\", \"いずみ\", \"いずれ\", \"いせい\", \"いせえび\", \"いせかい\", \"いせき\", \"いぜん\", \"いそうろう\", \"いそがしい\", \"いだい\", \"いだく\", \"いたずら\", \"いたみ\", \"いたりあ\", \"いちおう\", \"いちじ\", \"いちど\", \"いちば\", \"いちぶ\", \"いちりゅう\", \"いつか\", \"いっしゅん\", \"いっせい\", \"いっそう\", \"いったん\", \"いっち\", \"いってい\", \"いっぽう\", \"いてざ\", \"いてん\", \"いどう\", \"いとこ\", \"いない\", \"いなか\", \"いねむり\", \"いのち\", \"いのる\", \"いはつ\", \"いばる\", \"いはん\", \"いびき\", \"いひん\", \"いふく\", \"いへん\", \"いほう\", \"いみん\", \"いもうと\", \"いもたれ\", \"いもり\", \"いやがる\", \"いやす\", \"いよかん\", \"いよく\", \"いらい\", \"いらすと\", \"いりぐち\", \"いりょう\", \"いれい\", \"いれもの\", \"いれる\", \"いろえんぴつ\", \"いわい\", \"いわう\", \"いわかん\", \"いわば\", \"いわゆる\", \"いんげんまめ\", \"いんさつ\", \"いんしょう\", \"いんよう\", \"うえき\", \"うえる\", \"うおざ\", \"うがい\", \"うかぶ\", \"うかべる\", \"うきわ\", \"うくらいな\", \"うくれれ\", \"うけたまわる\", \"うけつけ\", \"うけとる\", \"うけもつ\", \"うける\", \"うごかす\", \"うごく\", \"うこん\", \"うさぎ\", \"うしなう\", \"うしろがみ\", \"うすい\", \"うすぎ\", \"うすぐらい\", \"うすめる\", \"うせつ\", \"うちあわせ\", \"うちがわ\", \"うちき\", \"うちゅう\", \"うっかり\", \"うつくしい\", \"うったえる\", \"うつる\", \"うどん\", \"うなぎ\", \"うなじ\", \"うなずく\", \"うなる\", \"うねる\", \"うのう\", \"うぶげ\", \"うぶごえ\", \"うまれる\", \"うめる\", \"うもう\", \"うやまう\", \"うよく\", \"うらがえす\", \"うらぐち\", \"うらない\", \"うりあげ\", \"うりきれ\", \"うるさい\", \"うれしい\", \"うれゆき\", \"うれる\", \"うろこ\", \"うわき\", \"うわさ\", \"うんこう\", \"うんちん\", \"うんてん\", \"うんどう\", \"えいえん\", \"えいが\", \"えいきょう\", \"えいご\", \"えいせい\", \"えいぶん\", \"えいよう\", \"えいわ\", \"えおり\", \"えがお\", \"えがく\", \"えきたい\", \"えくせる\", \"えしゃく\", \"えすて\", \"えつらん\", \"えのぐ\", \"えほうまき\", \"えほん\", \"えまき\", \"えもじ\", \"えもの\", \"えらい\", \"えらぶ\", \"えりあ\", \"えんえん\", \"えんかい\", \"えんぎ\", \"えんげき\", \"えんしゅう\", \"えんぜつ\", \"えんそく\", \"えんちょう\", \"えんとつ\", \"おいかける\", \"おいこす\", \"おいしい\", \"おいつく\", \"おうえん\", \"おうさま\", \"おうじ\", \"おうせつ\", \"おうたい\", \"おうふく\", \"おうべい\", \"おうよう\", \"おえる\", \"おおい\", \"おおう\", \"おおどおり\", \"おおや\", \"おおよそ\", \"おかえり\", \"おかず\", \"おがむ\", \"おかわり\", \"おぎなう\", \"おきる\", \"おくさま\", \"おくじょう\", \"おくりがな\", \"おくる\", \"おくれる\", \"おこす\", \"おこなう\", \"おこる\", \"おさえる\", \"おさない\", \"おさめる\", \"おしいれ\", \"おしえる\", \"おじぎ\", \"おじさん\", \"おしゃれ\", \"おそらく\", \"おそわる\", \"おたがい\", \"おたく\", \"おだやか\", \"おちつく\", \"おっと\", \"おつり\", \"おでかけ\", \"おとしもの\", \"おとなしい\", \"おどり\", \"おどろかす\", \"おばさん\", \"おまいり\", \"おめでとう\", \"おもいで\", \"おもう\", \"おもたい\", \"おもちゃ\", \"おやつ\", \"おやゆび\", \"およぼす\", \"おらんだ\", \"おろす\", \"おんがく\", \"おんけい\", \"おんしゃ\", \"おんせん\", \"おんだん\", \"おんちゅう\", \"おんどけい\", \"かあつ\", \"かいが\", \"がいき\", \"がいけん\", \"がいこう\", \"かいさつ\", \"かいしゃ\", \"かいすいよく\", \"かいぜん\", \"かいぞうど\", \"かいつう\", \"かいてん\", \"かいとう\", \"かいふく\", \"がいへき\", \"かいほう\", \"かいよう\", \"がいらい\", \"かいわ\", \"かえる\", \"かおり\", \"かかえる\", \"かがく\", \"かがし\", \"かがみ\", \"かくご\", \"かくとく\", \"かざる\", \"がぞう\", \"かたい\", \"かたち\", \"がちょう\", \"がっきゅう\", \"がっこう\", \"がっさん\", \"がっしょう\", \"かなざわし\", \"かのう\", \"がはく\", \"かぶか\", \"かほう\", \"かほご\", \"かまう\", \"かまぼこ\", \"かめれおん\", \"かゆい\", \"かようび\", \"からい\", \"かるい\", \"かろう\", \"かわく\", \"かわら\", \"がんか\", \"かんけい\", \"かんこう\", \"かんしゃ\", \"かんそう\", \"かんたん\", \"かんち\", \"がんばる\", \"きあい\", \"きあつ\", \"きいろ\", \"ぎいん\", \"きうい\", \"きうん\", \"きえる\", \"きおう\", \"きおく\", \"きおち\", \"きおん\", \"きかい\", \"きかく\", \"きかんしゃ\", \"ききて\", \"きくばり\", \"きくらげ\", \"きけんせい\", \"きこう\", \"きこえる\", \"きこく\", \"きさい\", \"きさく\", \"きさま\", \"きさらぎ\", \"ぎじかがく\", \"ぎしき\", \"ぎじたいけん\", \"ぎじにってい\", \"ぎじゅつしゃ\", \"きすう\", \"きせい\", \"きせき\", \"きせつ\", \"きそう\", \"きぞく\", \"きぞん\", \"きたえる\", \"きちょう\", \"きつえん\", \"ぎっちり\", \"きつつき\", \"きつね\", \"きてい\", \"きどう\", \"きどく\", \"きない\", \"きなが\", \"きなこ\", \"きぬごし\", \"きねん\", \"きのう\", \"きのした\", \"きはく\", \"きびしい\", \"きひん\", \"きふく\", \"きぶん\", \"きぼう\", \"きほん\", \"きまる\", \"きみつ\", \"きむずかしい\", \"きめる\", \"きもだめし\", \"きもち\", \"きもの\", \"きゃく\", \"きやく\", \"ぎゅうにく\", \"きよう\", \"きょうりゅう\", \"きらい\", \"きらく\", \"きりん\", \"きれい\", \"きれつ\", \"きろく\", \"ぎろん\", \"きわめる\", \"ぎんいろ\", \"きんかくじ\", \"きんじょ\", \"きんようび\", \"ぐあい\", \"くいず\", \"くうかん\", \"くうき\", \"くうぐん\", \"くうこう\", \"ぐうせい\", \"くうそう\", \"ぐうたら\", \"くうふく\", \"くうぼ\", \"くかん\", \"くきょう\", \"くげん\", \"ぐこう\", \"くさい\", \"くさき\", \"くさばな\", \"くさる\", \"くしゃみ\", \"くしょう\", \"くすのき\", \"くすりゆび\", \"くせげ\", \"くせん\", \"ぐたいてき\", \"くださる\", \"くたびれる\", \"くちこみ\", \"くちさき\", \"くつした\", \"ぐっすり\", \"くつろぐ\", \"くとうてん\", \"くどく\", \"くなん\", \"くねくね\", \"くのう\", \"くふう\", \"くみあわせ\", \"くみたてる\", \"くめる\", \"くやくしょ\", \"くらす\", \"くらべる\", \"くるま\", \"くれる\", \"くろう\", \"くわしい\", \"ぐんかん\", \"ぐんしょく\", \"ぐんたい\", \"ぐんて\", \"けあな\", \"けいかく\", \"けいけん\", \"けいこ\", \"けいさつ\", \"げいじゅつ\", \"けいたい\", \"げいのうじん\", \"けいれき\", \"けいろ\", \"けおとす\", \"けおりもの\", \"げきか\", \"げきげん\", \"げきだん\", \"げきちん\", \"げきとつ\", \"げきは\", \"げきやく\", \"げこう\", \"げこくじょう\", \"げざい\", \"けさき\", \"げざん\", \"けしき\", \"けしごむ\", \"けしょう\", \"げすと\", \"けたば\", \"けちゃっぷ\", \"けちらす\", \"けつあつ\", \"けつい\", \"けつえき\", \"けっこん\", \"けつじょ\", \"けっせき\", \"けってい\", \"けつまつ\", \"げつようび\", \"げつれい\", \"けつろん\", \"げどく\", \"けとばす\", \"けとる\", \"けなげ\", \"けなす\", \"けなみ\", \"けぬき\", \"げねつ\", \"けねん\", \"けはい\", \"げひん\", \"けぶかい\", \"げぼく\", \"けまり\", \"けみかる\", \"けむし\", \"けむり\", \"けもの\", \"けらい\", \"けろけろ\", \"けわしい\", \"けんい\", \"けんえつ\", \"けんお\", \"けんか\", \"げんき\", \"けんげん\", \"けんこう\", \"けんさく\", \"けんしゅう\", \"けんすう\", \"げんそう\", \"けんちく\", \"けんてい\", \"けんとう\", \"けんない\", \"けんにん\", \"げんぶつ\", \"けんま\", \"けんみん\", \"けんめい\", \"けんらん\", \"けんり\", \"こあくま\", \"こいぬ\", \"こいびと\", \"ごうい\", \"こうえん\", \"こうおん\", \"こうかん\", \"ごうきゅう\", \"ごうけい\", \"こうこう\", \"こうさい\", \"こうじ\", \"こうすい\", \"ごうせい\", \"こうそく\", \"こうたい\", \"こうちゃ\", \"こうつう\", \"こうてい\", \"こうどう\", \"こうない\", \"こうはい\", \"ごうほう\", \"ごうまん\", \"こうもく\", \"こうりつ\", \"こえる\", \"こおり\", \"ごかい\", \"ごがつ\", \"ごかん\", \"こくご\", \"こくさい\", \"こくとう\", \"こくない\", \"こくはく\", \"こぐま\", \"こけい\", \"こける\", \"ここのか\", \"こころ\", \"こさめ\", \"こしつ\", \"こすう\", \"こせい\", \"こせき\", \"こぜん\", \"こそだて\", \"こたい\", \"こたえる\", \"こたつ\", \"こちょう\", \"こっか\", \"こつこつ\", \"こつばん\", \"こつぶ\", \"こてい\", \"こてん\", \"ことがら\", \"ことし\", \"ことば\", \"ことり\", \"こなごな\", \"こねこね\", \"このまま\", \"このみ\", \"このよ\", \"ごはん\", \"こひつじ\", \"こふう\", \"こふん\", \"こぼれる\", \"ごまあぶら\", \"こまかい\", \"ごますり\", \"こまつな\", \"こまる\", \"こむぎこ\", \"こもじ\", \"こもち\", \"こもの\", \"こもん\", \"こやく\", \"こやま\", \"こゆう\", \"こゆび\", \"こよい\", \"こよう\", \"こりる\", \"これくしょん\", \"ころっけ\", \"こわもて\", \"こわれる\", \"こんいん\", \"こんかい\", \"こんき\", \"こんしゅう\", \"こんすい\", \"こんだて\", \"こんとん\", \"こんなん\", \"こんびに\", \"こんぽん\", \"こんまけ\", \"こんや\", \"こんれい\", \"こんわく\", \"ざいえき\", \"さいかい\", \"さいきん\", \"ざいげん\", \"ざいこ\", \"さいしょ\", \"さいせい\", \"ざいたく\", \"ざいちゅう\", \"さいてき\", \"ざいりょう\", \"さうな\", \"さかいし\", \"さがす\", \"さかな\", \"さかみち\", \"さがる\", \"さぎょう\", \"さくし\", \"さくひん\", \"さくら\", \"さこく\", \"さこつ\", \"さずかる\", \"ざせき\", \"さたん\", \"さつえい\", \"ざつおん\", \"ざっか\", \"ざつがく\", \"さっきょく\", \"ざっし\", \"さつじん\", \"ざっそう\", \"さつたば\", \"さつまいも\", \"さてい\", \"さといも\", \"さとう\", \"さとおや\", \"さとし\", \"さとる\", \"さのう\", \"さばく\", \"さびしい\", \"さべつ\", \"さほう\", \"さほど\", \"さます\", \"さみしい\", \"さみだれ\", \"さむけ\", \"さめる\", \"さやえんどう\", \"さゆう\", \"さよう\", \"さよく\", \"さらだ\", \"ざるそば\", \"さわやか\", \"さわる\", \"さんいん\", \"さんか\", \"さんきゃく\", \"さんこう\", \"さんさい\", \"ざんしょ\", \"さんすう\", \"さんせい\", \"さんそ\", \"さんち\", \"さんま\", \"さんみ\", \"さんらん\", \"しあい\", \"しあげ\", \"しあさって\", \"しあわせ\", \"しいく\", \"しいん\", \"しうち\", \"しえい\", \"しおけ\", \"しかい\", \"しかく\", \"じかん\", \"しごと\", \"しすう\", \"じだい\", \"したうけ\", \"したぎ\", \"したて\", \"したみ\", \"しちょう\", \"しちりん\", \"しっかり\", \"しつじ\", \"しつもん\", \"してい\", \"してき\", \"してつ\", \"じてん\", \"じどう\", \"しなぎれ\", \"しなもの\", \"しなん\", \"しねま\", \"しねん\", \"しのぐ\", \"しのぶ\", \"しはい\", \"しばかり\", \"しはつ\", \"しはらい\", \"しはん\", \"しひょう\", \"しふく\", \"じぶん\", \"しへい\", \"しほう\", \"しほん\", \"しまう\", \"しまる\", \"しみん\", \"しむける\", \"じむしょ\", \"しめい\", \"しめる\", \"しもん\", \"しゃいん\", \"しゃうん\", \"しゃおん\", \"じゃがいも\", \"しやくしょ\", \"しゃくほう\", \"しゃけん\", \"しゃこ\", \"しゃざい\", \"しゃしん\", \"しゃせん\", \"しゃそう\", \"しゃたい\", \"しゃちょう\", \"しゃっきん\", \"じゃま\", \"しゃりん\", \"しゃれい\", \"じゆう\", \"じゅうしょ\", \"しゅくはく\", \"じゅしん\", \"しゅっせき\", \"しゅみ\", \"しゅらば\", \"じゅんばん\", \"しょうかい\", \"しょくたく\", \"しょっけん\", \"しょどう\", \"しょもつ\", \"しらせる\", \"しらべる\", \"しんか\", \"しんこう\", \"じんじゃ\", \"しんせいじ\", \"しんちく\", \"しんりん\", \"すあげ\", \"すあし\", \"すあな\", \"ずあん\", \"すいえい\", \"すいか\", \"すいとう\", \"ずいぶん\", \"すいようび\", \"すうがく\", \"すうじつ\", \"すうせん\", \"すおどり\", \"すきま\", \"すくう\", \"すくない\", \"すける\", \"すごい\", \"すこし\", \"ずさん\", \"すずしい\", \"すすむ\", \"すすめる\", \"すっかり\", \"ずっしり\", \"ずっと\", \"すてき\", \"すてる\", \"すねる\", \"すのこ\", \"すはだ\", \"すばらしい\", \"ずひょう\", \"ずぶぬれ\", \"すぶり\", \"すふれ\", \"すべて\", \"すべる\", \"ずほう\", \"すぼん\", \"すまい\", \"すめし\", \"すもう\", \"すやき\", \"すらすら\", \"するめ\", \"すれちがう\", \"すろっと\", \"すわる\", \"すんぜん\", \"すんぽう\", \"せあぶら\", \"せいかつ\", \"せいげん\", \"せいじ\", \"せいよう\", \"せおう\", \"せかいかん\", \"せきにん\", \"せきむ\", \"せきゆ\", \"せきらんうん\", \"せけん\", \"せこう\", \"せすじ\", \"せたい\", \"せたけ\", \"せっかく\", \"せっきゃく\", \"ぜっく\", \"せっけん\", \"せっこつ\", \"せっさたくま\", \"せつぞく\", \"せつだん\", \"せつでん\", \"せっぱん\", \"せつび\", \"せつぶん\", \"せつめい\", \"せつりつ\", \"せなか\", \"せのび\", \"せはば\", \"せびろ\", \"せぼね\", \"せまい\", \"せまる\", \"せめる\", \"せもたれ\", \"せりふ\", \"ぜんあく\", \"せんい\", \"せんえい\", \"せんか\", \"せんきょ\", \"せんく\", \"せんげん\", \"ぜんご\", \"せんさい\", \"せんしゅ\", \"せんすい\", \"せんせい\", \"せんぞ\", \"せんたく\", \"せんちょう\", \"せんてい\", \"せんとう\", \"せんぬき\", \"せんねん\", \"せんぱい\", \"ぜんぶ\", \"ぜんぽう\", \"せんむ\", \"せんめんじょ\", \"せんもん\", \"せんやく\", \"せんゆう\", \"せんよう\", \"ぜんら\", \"ぜんりゃく\", \"せんれい\", \"せんろ\", \"そあく\", \"そいとげる\", \"そいね\", \"そうがんきょう\", \"そうき\", \"そうご\", \"そうしん\", \"そうだん\", \"そうなん\", \"そうび\", \"そうめん\", \"そうり\", \"そえもの\", \"そえん\", \"そがい\", \"そげき\", \"そこう\", \"そこそこ\", \"そざい\", \"そしな\", \"そせい\", \"そせん\", \"そそぐ\", \"そだてる\", \"そつう\", \"そつえん\", \"そっかん\", \"そつぎょう\", \"そっけつ\", \"そっこう\", \"そっせん\", \"そっと\", \"そとがわ\", \"そとづら\", \"そなえる\", \"そなた\", \"そふぼ\", \"そぼく\", \"そぼろ\", \"そまつ\", \"そまる\", \"そむく\", \"そむりえ\", \"そめる\", \"そもそも\", \"そよかぜ\", \"そらまめ\", \"そろう\", \"そんかい\", \"そんけい\", \"そんざい\", \"そんしつ\", \"そんぞく\", \"そんちょう\", \"ぞんび\", \"ぞんぶん\", \"そんみん\", \"たあい\", \"たいいん\", \"たいうん\", \"たいえき\", \"たいおう\", \"だいがく\", \"たいき\", \"たいぐう\", \"たいけん\", \"たいこ\", \"たいざい\", \"だいじょうぶ\", \"だいすき\", \"たいせつ\", \"たいそう\", \"だいたい\", \"たいちょう\", \"たいてい\", \"だいどころ\", \"たいない\", \"たいねつ\", \"たいのう\", \"たいはん\", \"だいひょう\", \"たいふう\", \"たいへん\", \"たいほ\", \"たいまつばな\", \"たいみんぐ\", \"たいむ\", \"たいめん\", \"たいやき\", \"たいよう\", \"たいら\", \"たいりょく\", \"たいる\", \"たいわん\", \"たうえ\", \"たえる\", \"たおす\", \"たおる\", \"たおれる\", \"たかい\", \"たかね\", \"たきび\", \"たくさん\", \"たこく\", \"たこやき\", \"たさい\", \"たしざん\", \"だじゃれ\", \"たすける\", \"たずさわる\", \"たそがれ\", \"たたかう\", \"たたく\", \"ただしい\", \"たたみ\", \"たちばな\", \"だっかい\", \"だっきゃく\", \"だっこ\", \"だっしゅつ\", \"だったい\", \"たてる\", \"たとえる\", \"たなばた\", \"たにん\", \"たぬき\", \"たのしみ\", \"たはつ\", \"たぶん\", \"たべる\", \"たぼう\", \"たまご\", \"たまる\", \"だむる\", \"ためいき\", \"ためす\", \"ためる\", \"たもつ\", \"たやすい\", \"たよる\", \"たらす\", \"たりきほんがん\", \"たりょう\", \"たりる\", \"たると\", \"たれる\", \"たれんと\", \"たろっと\", \"たわむれる\", \"だんあつ\", \"たんい\", \"たんおん\", \"たんか\", \"たんき\", \"たんけん\", \"たんご\", \"たんさん\", \"たんじょうび\", \"だんせい\", \"たんそく\", \"たんたい\", \"だんち\", \"たんてい\", \"たんとう\", \"だんな\", \"たんにん\", \"だんねつ\", \"たんのう\", \"たんぴん\", \"だんぼう\", \"たんまつ\", \"たんめい\", \"だんれつ\", \"だんろ\", \"だんわ\", \"ちあい\", \"ちあん\", \"ちいき\", \"ちいさい\", \"ちえん\", \"ちかい\", \"ちから\", \"ちきゅう\", \"ちきん\", \"ちけいず\", \"ちけん\", \"ちこく\", \"ちさい\", \"ちしき\", \"ちしりょう\", \"ちせい\", \"ちそう\", \"ちたい\", \"ちたん\", \"ちちおや\", \"ちつじょ\", \"ちてき\", \"ちてん\", \"ちぬき\", \"ちぬり\", \"ちのう\", \"ちひょう\", \"ちへいせん\", \"ちほう\", \"ちまた\", \"ちみつ\", \"ちみどろ\", \"ちめいど\", \"ちゃんこなべ\", \"ちゅうい\", \"ちゆりょく\", \"ちょうし\", \"ちょさくけん\", \"ちらし\", \"ちらみ\", \"ちりがみ\", \"ちりょう\", \"ちるど\", \"ちわわ\", \"ちんたい\", \"ちんもく\", \"ついか\", \"ついたち\", \"つうか\", \"つうじょう\", \"つうはん\", \"つうわ\", \"つかう\", \"つかれる\", \"つくね\", \"つくる\", \"つけね\", \"つける\", \"つごう\", \"つたえる\", \"つづく\", \"つつじ\", \"つつむ\", \"つとめる\", \"つながる\", \"つなみ\", \"つねづね\", \"つのる\", \"つぶす\", \"つまらない\", \"つまる\", \"つみき\", \"つめたい\", \"つもり\", \"つもる\", \"つよい\", \"つるぼ\", \"つるみく\", \"つわもの\", \"つわり\", \"てあし\", \"てあて\", \"てあみ\", \"ていおん\", \"ていか\", \"ていき\", \"ていけい\", \"ていこく\", \"ていさつ\", \"ていし\", \"ていせい\", \"ていたい\", \"ていど\", \"ていねい\", \"ていひょう\", \"ていへん\", \"ていぼう\", \"てうち\", \"ておくれ\", \"てきとう\", \"てくび\", \"でこぼこ\", \"てさぎょう\", \"てさげ\", \"てすり\", \"てそう\", \"てちがい\", \"てちょう\", \"てつがく\", \"てつづき\", \"でっぱ\", \"てつぼう\", \"てつや\", \"でぬかえ\", \"てぬき\", \"てぬぐい\", \"てのひら\", \"てはい\", \"てぶくろ\", \"てふだ\", \"てほどき\", \"てほん\", \"てまえ\", \"てまきずし\", \"てみじか\", \"てみやげ\", \"てらす\", \"てれび\", \"てわけ\", \"てわたし\", \"でんあつ\", \"てんいん\", \"てんかい\", \"てんき\", \"てんぐ\", \"てんけん\", \"てんごく\", \"てんさい\", \"てんし\", \"てんすう\", \"でんち\", \"てんてき\", \"てんとう\", \"てんない\", \"てんぷら\", \"てんぼうだい\", \"てんめつ\", \"てんらんかい\", \"でんりょく\", \"でんわ\", \"どあい\", \"といれ\", \"どうかん\", \"とうきゅう\", \"どうぐ\", \"とうし\", \"とうむぎ\", \"とおい\", \"とおか\", \"とおく\", \"とおす\", \"とおる\", \"とかい\", \"とかす\", \"ときおり\", \"ときどき\", \"とくい\", \"とくしゅう\", \"とくてん\", \"とくに\", \"とくべつ\", \"とけい\", \"とける\", \"とこや\", \"とさか\", \"としょかん\", \"とそう\", \"とたん\", \"とちゅう\", \"とっきゅう\", \"とっくん\", \"とつぜん\", \"とつにゅう\", \"とどける\", \"ととのえる\", \"とない\", \"となえる\", \"となり\", \"とのさま\", \"とばす\", \"どぶがわ\", \"とほう\", \"とまる\", \"とめる\", \"ともだち\", \"ともる\", \"どようび\", \"とらえる\", \"とんかつ\", \"どんぶり\", \"ないかく\", \"ないこう\", \"ないしょ\", \"ないす\", \"ないせん\", \"ないそう\", \"なおす\", \"ながい\", \"なくす\", \"なげる\", \"なこうど\", \"なさけ\", \"なたでここ\", \"なっとう\", \"なつやすみ\", \"ななおし\", \"なにごと\", \"なにもの\", \"なにわ\", \"なのか\", \"なふだ\", \"なまいき\", \"なまえ\", \"なまみ\", \"なみだ\", \"なめらか\", \"なめる\", \"なやむ\", \"ならう\", \"ならび\", \"ならぶ\", \"なれる\", \"なわとび\", \"なわばり\", \"にあう\", \"にいがた\", \"にうけ\", \"におい\", \"にかい\", \"にがて\", \"にきび\", \"にくしみ\", \"にくまん\", \"にげる\", \"にさんかたんそ\", \"にしき\", \"にせもの\", \"にちじょう\", \"にちようび\", \"にっか\", \"にっき\", \"にっけい\", \"にっこう\", \"にっさん\", \"にっしょく\", \"にっすう\", \"にっせき\", \"にってい\", \"になう\", \"にほん\", \"にまめ\", \"にもつ\", \"にやり\", \"にゅういん\", \"にりんしゃ\", \"にわとり\", \"にんい\", \"にんか\", \"にんき\", \"にんげん\", \"にんしき\", \"にんずう\", \"にんそう\", \"にんたい\", \"にんち\", \"にんてい\", \"にんにく\", \"にんぷ\", \"にんまり\", \"にんむ\", \"にんめい\", \"にんよう\", \"ぬいくぎ\", \"ぬかす\", \"ぬぐいとる\", \"ぬぐう\", \"ぬくもり\", \"ぬすむ\", \"ぬまえび\", \"ぬめり\", \"ぬらす\", \"ぬんちゃく\", \"ねあげ\", \"ねいき\", \"ねいる\", \"ねいろ\", \"ねぐせ\", \"ねくたい\", \"ねくら\", \"ねこぜ\", \"ねこむ\", \"ねさげ\", \"ねすごす\", \"ねそべる\", \"ねだん\", \"ねつい\", \"ねっしん\", \"ねつぞう\", \"ねったいぎょ\", \"ねぶそく\", \"ねふだ\", \"ねぼう\", \"ねほりはほり\", \"ねまき\", \"ねまわし\", \"ねみみ\", \"ねむい\", \"ねむたい\", \"ねもと\", \"ねらう\", \"ねわざ\", \"ねんいり\", \"ねんおし\", \"ねんかん\", \"ねんきん\", \"ねんぐ\", \"ねんざ\", \"ねんし\", \"ねんちゃく\", \"ねんど\", \"ねんぴ\", \"ねんぶつ\", \"ねんまつ\", \"ねんりょう\", \"ねんれい\", \"のいず\", \"のおづま\", \"のがす\", \"のきなみ\", \"のこぎり\", \"のこす\", \"のこる\", \"のせる\", \"のぞく\", \"のぞむ\", \"のたまう\", \"のちほど\", \"のっく\", \"のばす\", \"のはら\", \"のべる\", \"のぼる\", \"のみもの\", \"のやま\", \"のらいぬ\", \"のらねこ\", \"のりもの\", \"のりゆき\", \"のれん\", \"のんき\", \"ばあい\", \"はあく\", \"ばあさん\", \"ばいか\", \"ばいく\", \"はいけん\", \"はいご\", \"はいしん\", \"はいすい\", \"はいせん\", \"はいそう\", \"はいち\", \"ばいばい\", \"はいれつ\", \"はえる\", \"はおる\", \"はかい\", \"ばかり\", \"はかる\", \"はくしゅ\", \"はけん\", \"はこぶ\", \"はさみ\", \"はさん\", \"はしご\", \"ばしょ\", \"はしる\", \"はせる\", \"ぱそこん\", \"はそん\", \"はたん\", \"はちみつ\", \"はつおん\", \"はっかく\", \"はづき\", \"はっきり\", \"はっくつ\", \"はっけん\", \"はっこう\", \"はっさん\", \"はっしん\", \"はったつ\", \"はっちゅう\", \"はってん\", \"はっぴょう\", \"はっぽう\", \"はなす\", \"はなび\", \"はにかむ\", \"はぶらし\", \"はみがき\", \"はむかう\", \"はめつ\", \"はやい\", \"はやし\", \"はらう\", \"はろうぃん\", \"はわい\", \"はんい\", \"はんえい\", \"はんおん\", \"はんかく\", \"はんきょう\", \"ばんぐみ\", \"はんこ\", \"はんしゃ\", \"はんすう\", \"はんだん\", \"ぱんち\", \"ぱんつ\", \"はんてい\", \"はんとし\", \"はんのう\", \"はんぱ\", \"はんぶん\", \"はんぺん\", \"はんぼうき\", \"はんめい\", \"はんらん\", \"はんろん\", \"ひいき\", \"ひうん\", \"ひえる\", \"ひかく\", \"ひかり\", \"ひかる\", \"ひかん\", \"ひくい\", \"ひけつ\", \"ひこうき\", \"ひこく\", \"ひさい\", \"ひさしぶり\", \"ひさん\", \"びじゅつかん\", \"ひしょ\", \"ひそか\", \"ひそむ\", \"ひたむき\", \"ひだり\", \"ひたる\", \"ひつぎ\", \"ひっこし\", \"ひっし\", \"ひつじゅひん\", \"ひっす\", \"ひつぜん\", \"ぴったり\", \"ぴっちり\", \"ひつよう\", \"ひてい\", \"ひとごみ\", \"ひなまつり\", \"ひなん\", \"ひねる\", \"ひはん\", \"ひびく\", \"ひひょう\", \"ひほう\", \"ひまわり\", \"ひまん\", \"ひみつ\", \"ひめい\", \"ひめじし\", \"ひやけ\", \"ひやす\", \"ひよう\", \"びょうき\", \"ひらがな\", \"ひらく\", \"ひりつ\", \"ひりょう\", \"ひるま\", \"ひるやすみ\", \"ひれい\", \"ひろい\", \"ひろう\", \"ひろき\", \"ひろゆき\", \"ひんかく\", \"ひんけつ\", \"ひんこん\", \"ひんしゅ\", \"ひんそう\", \"ぴんち\", \"ひんぱん\", \"びんぼう\", \"ふあん\", \"ふいうち\", \"ふうけい\", \"ふうせん\", \"ぷうたろう\", \"ふうとう\", \"ふうふ\", \"ふえる\", \"ふおん\", \"ふかい\", \"ふきん\", \"ふくざつ\", \"ふくぶくろ\", \"ふこう\", \"ふさい\", \"ふしぎ\", \"ふじみ\", \"ふすま\", \"ふせい\", \"ふせぐ\", \"ふそく\", \"ぶたにく\", \"ふたん\", \"ふちょう\", \"ふつう\", \"ふつか\", \"ふっかつ\", \"ふっき\", \"ふっこく\", \"ぶどう\", \"ふとる\", \"ふとん\", \"ふのう\", \"ふはい\", \"ふひょう\", \"ふへん\", \"ふまん\", \"ふみん\", \"ふめつ\", \"ふめん\", \"ふよう\", \"ふりこ\", \"ふりる\", \"ふるい\", \"ふんいき\", \"ぶんがく\", \"ぶんぐ\", \"ふんしつ\", \"ぶんせき\", \"ふんそう\", \"ぶんぽう\", \"へいあん\", \"へいおん\", \"へいがい\", \"へいき\", \"へいげん\", \"へいこう\", \"へいさ\", \"へいしゃ\", \"へいせつ\", \"へいそ\", \"へいたく\", \"へいてん\", \"へいねつ\", \"へいわ\", \"へきが\", \"へこむ\", \"べにいろ\", \"べにしょうが\", \"へらす\", \"へんかん\", \"べんきょう\", \"べんごし\", \"へんさい\", \"へんたい\", \"べんり\", \"ほあん\", \"ほいく\", \"ぼうぎょ\", \"ほうこく\", \"ほうそう\", \"ほうほう\", \"ほうもん\", \"ほうりつ\", \"ほえる\", \"ほおん\", \"ほかん\", \"ほきょう\", \"ぼきん\", \"ほくろ\", \"ほけつ\", \"ほけん\", \"ほこう\", \"ほこる\", \"ほしい\", \"ほしつ\", \"ほしゅ\", \"ほしょう\", \"ほせい\", \"ほそい\", \"ほそく\", \"ほたて\", \"ほたる\", \"ぽちぶくろ\", \"ほっきょく\", \"ほっさ\", \"ほったん\", \"ほとんど\", \"ほめる\", \"ほんい\", \"ほんき\", \"ほんけ\", \"ほんしつ\", \"ほんやく\", \"まいにち\", \"まかい\", \"まかせる\", \"まがる\", \"まける\", \"まこと\", \"まさつ\", \"まじめ\", \"ますく\", \"まぜる\", \"まつり\", \"まとめ\", \"まなぶ\", \"まぬけ\", \"まねく\", \"まほう\", \"まもる\", \"まゆげ\", \"まよう\", \"まろやか\", \"まわす\", \"まわり\", \"まわる\", \"まんが\", \"まんきつ\", \"まんぞく\", \"まんなか\", \"みいら\", \"みうち\", \"みえる\", \"みがく\", \"みかた\", \"みかん\", \"みけん\", \"みこん\", \"みじかい\", \"みすい\", \"みすえる\", \"みせる\", \"みっか\", \"みつかる\", \"みつける\", \"みてい\", \"みとめる\", \"みなと\", \"みなみかさい\", \"みねらる\", \"みのう\", \"みのがす\", \"みほん\", \"みもと\", \"みやげ\", \"みらい\", \"みりょく\", \"みわく\", \"みんか\", \"みんぞく\", \"むいか\", \"むえき\", \"むえん\", \"むかい\", \"むかう\", \"むかえ\", \"むかし\", \"むぎちゃ\", \"むける\", \"むげん\", \"むさぼる\", \"むしあつい\", \"むしば\", \"むじゅん\", \"むしろ\", \"むすう\", \"むすこ\", \"むすぶ\", \"むすめ\", \"むせる\", \"むせん\", \"むちゅう\", \"むなしい\", \"むのう\", \"むやみ\", \"むよう\", \"むらさき\", \"むりょう\", \"むろん\", \"めいあん\", \"めいうん\", \"めいえん\", \"めいかく\", \"めいきょく\", \"めいさい\", \"めいし\", \"めいそう\", \"めいぶつ\", \"めいれい\", \"めいわく\", \"めぐまれる\", \"めざす\", \"めした\", \"めずらしい\", \"めだつ\", \"めまい\", \"めやす\", \"めんきょ\", \"めんせき\", \"めんどう\", \"もうしあげる\", \"もうどうけん\", \"もえる\", \"もくし\", \"もくてき\", \"もくようび\", \"もちろん\", \"もどる\", \"もらう\", \"もんく\", \"もんだい\", \"やおや\", \"やける\", \"やさい\", \"やさしい\", \"やすい\", \"やすたろう\", \"やすみ\", \"やせる\", \"やそう\", \"やたい\", \"やちん\", \"やっと\", \"やっぱり\", \"やぶる\", \"やめる\", \"ややこしい\", \"やよい\", \"やわらかい\", \"ゆうき\", \"ゆうびんきょく\", \"ゆうべ\", \"ゆうめい\", \"ゆけつ\", \"ゆしゅつ\", \"ゆせん\", \"ゆそう\", \"ゆたか\", \"ゆちゃく\", \"ゆでる\", \"ゆにゅう\", \"ゆびわ\", \"ゆらい\", \"ゆれる\", \"ようい\", \"ようか\", \"ようきゅう\", \"ようじ\", \"ようす\", \"ようちえん\", \"よかぜ\", \"よかん\", \"よきん\", \"よくせい\", \"よくぼう\", \"よけい\", \"よごれる\", \"よさん\", \"よしゅう\", \"よそう\", \"よそく\", \"よっか\", \"よてい\", \"よどがわく\", \"よねつ\", \"よやく\", \"よゆう\", \"よろこぶ\", \"よろしい\", \"らいう\", \"らくがき\", \"らくご\", \"らくさつ\", \"らくだ\", \"らしんばん\", \"らせん\", \"らぞく\", \"らたい\", \"らっか\", \"られつ\", \"りえき\", \"りかい\", \"りきさく\", \"りきせつ\", \"りくぐん\", \"りくつ\", \"りけん\", \"りこう\", \"りせい\", \"りそう\", \"りそく\", \"りてん\", \"りねん\", \"りゆう\", \"りゅうがく\", \"りよう\", \"りょうり\", \"りょかん\", \"りょくちゃ\", \"りょこう\", \"りりく\", \"りれき\", \"りろん\", \"りんご\", \"るいけい\", \"るいさい\", \"るいじ\", \"るいせき\", \"るすばん\", \"るりがわら\", \"れいかん\", \"れいぎ\", \"れいせい\", \"れいぞうこ\", \"れいとう\", \"れいぼう\", \"れきし\", \"れきだい\", \"れんあい\", \"れんけい\", \"れんこん\", \"れんさい\", \"れんしゅう\", \"れんぞく\", \"れんらく\", \"ろうか\", \"ろうご\", \"ろうじん\", \"ろうそく\", \"ろくが\", \"ろこつ\", \"ろじうら\", \"ろしゅつ\", \"ろせん\", \"ろてん\", \"ろめん\", \"ろれつ\", \"ろんぎ\", \"ろんぱ\", \"ろんぶん\", \"ろんり\", \"わかす\", \"わかめ\", \"わかやま\", \"わかれる\", \"わしつ\", \"わじまし\", \"わすれもの\", \"わらう\", \"われる\"];\n        W.space = \"　\";\n        class Q extends S {\n          constructor(t, e, r = V) {\n            super({\n              privKey: t,\n              pubKey: e\n            }), this.PrivKey = r;\n          }\n          fromJSON(t) {\n            return t.privKey && (this.privKey = this.PrivKey.fromJSON(t.privKey)), t.pubKey && (this.pubKey = K.fromJSON(t.pubKey)), this;\n          }\n          fromBr(t) {\n            const e = t.readUInt8();\n            e > 0 && (this.privKey = new this.PrivKey().fromFastBuffer(t.read(e)));\n            const r = t.readUInt8();\n            return r > 0 && (this.pubKey = new K().fromFastBuffer(t.read(r))), this;\n          }\n          toBw(t) {\n            if (t || (t = new y()), this.privKey) {\n              const e = this.privKey.toFastBuffer();\n              t.writeUInt8(e.length), t.write(e);\n            } else t.writeUInt8(0);\n            if (this.pubKey) {\n              const e = this.pubKey.toFastBuffer();\n              t.writeUInt8(e.length), t.write(e);\n            } else t.writeUInt8(0);\n            return t;\n          }\n          fromString(t) {\n            return this.fromJSON(JSON.parse(t));\n          }\n          toString() {\n            return JSON.stringify(this.toJSON());\n          }\n          toPublic() {\n            const t = new Q().fromObject(this);\n            return t.privKey = void 0, t;\n          }\n          fromPrivKey(t) {\n            return this.privKey = t, this.pubKey = new K().fromPrivKey(t), this;\n          }\n          static fromPrivKey(t) {\n            return new this().fromPrivKey(t);\n          }\n          async asyncFromPrivKey(t) {\n            return this.privKey = t, this.pubKey = await new K().asyncFromPrivKey(t), this;\n          }\n          static asyncFromPrivKey(t) {\n            return new this().asyncFromPrivKey(t);\n          }\n          fromRandom() {\n            return this.privKey = new this.PrivKey().fromRandom(), this.pubKey = new K().fromPrivKey(this.privKey), this;\n          }\n          static fromRandom() {\n            return new this().fromRandom();\n          }\n          async asyncFromRandom() {\n            return this.privKey = new this.PrivKey().fromRandom(), this.asyncFromPrivKey(this.privKey);\n          }\n          static asyncFromRandom() {\n            return new this().asyncFromRandom();\n          }\n        }\n        Q.Mainnet = class extends Q {\n          constructor(t, e) {\n            super(t, e, V.Mainnet);\n          }\n        }, Q.Testnet = class extends Q {\n          constructor(t, e) {\n            super(t, e, V.Testnet);\n          }\n        };\n        class X extends S {\n          constructor(t, e, r, i, s, n) {\n            super({\n              sig: t,\n              keyPair: e,\n              hashBuf: r,\n              k: i,\n              endian: s,\n              verified: n\n            });\n          }\n          toJSON() {\n            return {\n              sig: this.sig ? this.sig.toString() : void 0,\n              keyPair: this.keyPair ? this.keyPair.toBuffer().toString(\"hex\") : void 0,\n              hashBuf: this.hashBuf ? this.hashBuf.toString(\"hex\") : void 0,\n              k: this.k ? this.k.toString() : void 0,\n              endian: this.endian,\n              verified: this.verified\n            };\n          }\n          fromJSON(t) {\n            return this.sig = t.sig ? new j().fromString(t.sig) : void 0, this.keyPair = t.keyPair ? new Q().fromBuffer(Buffer.from(t.keyPair, \"hex\")) : void 0, this.hashBuf = t.hashBuf ? Buffer.from(t.hashBuf, \"hex\") : void 0, this.k = t.k ? new p().fromString(t.k) : void 0, this.endian = t.endian, this.verified = t.verified, this;\n          }\n          toBuffer() {\n            const t = JSON.stringify(this.toJSON());\n            return Buffer.from(t);\n          }\n          fromBuffer(t) {\n            const e = JSON.parse(t.toString());\n            return this.fromJSON(e);\n          }\n          calcrecovery() {\n            for (let t = 0; t < 4; t++) {\n              let e;\n              this.sig.recovery = t;\n              try {\n                e = this.sig2PubKey();\n              } catch (t) {\n                continue;\n              }\n              if (e.point.eq(this.keyPair.pubKey.point)) {\n                const t = this.keyPair.pubKey.compressed;\n                return this.sig.compressed = void 0 === this.keyPair.pubKey.compressed || t, this;\n              }\n            }\n            throw this.sig.recovery = void 0, new Error(\"Unable to find valid recovery factor\");\n          }\n          async asyncCalcrecovery() {\n            const t = await E.asyncObjectMethod(this, \"calcrecovery\", []);\n            return this.fromFastBuffer(t.resbuf);\n          }\n          static calcrecovery(t, e, r) {\n            return new X().fromObject({\n              sig: t,\n              keyPair: new Q().fromObject({\n                pubKey: e\n              }),\n              hashBuf: r\n            }).calcrecovery().sig;\n          }\n          static async asyncCalcrecovery(t, e, r) {\n            const i = await E.asyncClassMethod(X, \"calcrecovery\", [t, e, r]);\n            return new j().fromFastBuffer(i.resbuf);\n          }\n          fromString(t) {\n            const e = JSON.parse(t);\n            return e.hashBuf && (this.hashBuf = Buffer.from(e.hashBuf, \"hex\")), e.keyPair && (this.keyPair = new Q().fromString(e.keyPair)), e.sig && (this.sig = new j().fromString(e.sig)), e.k && (this.k = new p(e.k, 10)), this;\n          }\n          randomK() {\n            const t = L.getN();\n            let e;\n            do {\n              e = new p().fromBuffer(D.getRandomBuffer(32));\n            } while (!e.lt(t) || !e.gt(0));\n            return this.k = e, this;\n          }\n          deterministicK(t) {\n            let e = Buffer.alloc(32);\n            e.fill(1);\n            let r = Buffer.alloc(32);\n            r.fill(0);\n            const i = this.keyPair.privKey.bn.toBuffer({\n              size: 32\n            });\n            r = P.sha256Hmac(Buffer.concat([e, Buffer.from([0]), i, this.hashBuf]), r), e = P.sha256Hmac(e, r), r = P.sha256Hmac(Buffer.concat([e, Buffer.from([1]), i, this.hashBuf]), r), e = P.sha256Hmac(e, r), e = P.sha256Hmac(e, r);\n            let s = new p().fromBuffer(e);\n            const n = L.getN();\n            void 0 === t && (t = 0);\n            for (let i = 0; i < t || !s.lt(n) || !s.gt(0); i++) r = P.sha256Hmac(Buffer.concat([e, Buffer.from([0])]), r), e = P.sha256Hmac(e, r), e = P.sha256Hmac(e, r), s = new p().fromBuffer(e);\n            return this.k = s, this;\n          }\n          sig2PubKey() {\n            const t = this.sig.recovery;\n            if (0 !== t && 1 !== t && 2 !== t && 3 !== t) throw new Error(\"i must be equal to 0, 1, 2, or 3\");\n            const e = new p().fromBuffer(this.hashBuf),\n              r = this.sig.r,\n              i = this.sig.s,\n              s = 1 & t,\n              n = t >> 1,\n              a = L.getN(),\n              o = L.getG(),\n              h = n ? r.add(a) : r,\n              f = L.fromX(s, h);\n            let c = \"\";\n            try {\n              f.mul(a);\n            } catch (t) {\n              c = t.message;\n            }\n            if (\"point mul out of range\" !== c) throw new Error(\"nR is not a valid curve point\");\n            const u = e.neg().umod(a),\n              d = r.invm(a),\n              l = f.mul(i).add(o.mul(u)).mul(d),\n              b = new K(l);\n            return b.compressed = this.sig.compressed, b.validate(), b;\n          }\n          async asyncSig2PubKey() {\n            const t = await E.asyncObjectMethod(this, \"sig2PubKey\", []);\n            return K.fromFastBuffer(t.resbuf);\n          }\n          static sig2PubKey(t, e) {\n            return new X().fromObject({\n              sig: t,\n              hashBuf: e\n            }).sig2PubKey();\n          }\n          static async asyncSig2PubKey(t, e) {\n            const r = new X().fromObject({\n              sig: t,\n              hashBuf: e\n            });\n            return await r.asyncSig2PubKey();\n          }\n          verifyStr(t = !0) {\n            if (!Buffer.isBuffer(this.hashBuf) || 32 !== this.hashBuf.length) return \"hashBuf must be a 32 byte buffer\";\n            try {\n              this.keyPair.pubKey.validate();\n            } catch (i) {\n              return \"Invalid pubKey: \" + i;\n            }\n            const e = this.sig.r,\n              r = this.sig.s;\n            if (!(e.gt(0) && e.lt(L.getN()) && r.gt(0) && r.lt(L.getN()))) return \"r and s not in range\";\n            if (t && !this.sig.hasLowS()) return \"s is too high and does not satisfy low s contraint - see bip 62\";\n            const i = new p().fromBuffer(this.hashBuf, this.endian ? {\n                endian: this.endian\n              } : void 0),\n              s = L.getN(),\n              n = r.invm(s),\n              a = n.mul(i).mod(s),\n              o = n.mul(e).mod(s),\n              h = L.getG().mulAdd(a, this.keyPair.pubKey.point, o);\n            return h.isInfinity() ? \"p is infinity\" : 0 !== h.getX().mod(s).cmp(e) && \"Invalid signature\";\n          }\n          sign() {\n            const t = \"little\" === this.endian ? new g(this.hashBuf).readReverse() : this.hashBuf,\n              e = this.keyPair.privKey,\n              r = e.bn;\n            if (!t || !e || !r) throw new Error(\"invalid parameters\");\n            if (!Buffer.isBuffer(t) || 32 !== t.length) throw new Error(\"hashBuf must be a 32 byte buffer\");\n            const i = L.getN(),\n              s = L.getG(),\n              n = new p().fromBuffer(t);\n            let a,\n              o,\n              h,\n              f,\n              c = 0;\n            do {\n              (!this.k || c > 0) && this.deterministicK(c), c++, a = this.k, o = s.mul(a), h = o.getX().mod(i), f = a.invm(i).mul(n.add(r.mul(h))).mod(i);\n            } while (h.cmp(0) <= 0 || f.cmp(0) <= 0);\n            return f.gt(new p().fromBuffer(Buffer.from(\"7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\", \"hex\"))) && (f = L.getN().sub(f)), this.sig = j.fromObject({\n              r: h,\n              s: f,\n              compressed: this.keyPair.pubKey.compressed\n            }), this;\n          }\n          async asyncSign() {\n            const t = await E.asyncObjectMethod(this, \"sign\", []);\n            return this.fromFastBuffer(t.resbuf);\n          }\n          signRandomK() {\n            return this.randomK(), this.sign();\n          }\n          toString() {\n            const t = {};\n            return this.hashBuf && (t.hashBuf = this.hashBuf.toString(\"hex\")), this.keyPair && (t.keyPair = this.keyPair.toString()), this.sig && (t.sig = this.sig.toString()), this.k && (t.k = this.k.toString()), JSON.stringify(t);\n          }\n          verify(t = !0) {\n            return this.verifyStr(t) ? this.verified = !1 : this.verified = !0, this;\n          }\n          async asyncVerify(t = !0) {\n            const e = await E.asyncObjectMethod(this, \"verify\", [t]);\n            return this.fromFastBuffer(e.resbuf);\n          }\n          static sign(t, e, r) {\n            return new X().fromObject({\n              hashBuf: t,\n              endian: r,\n              keyPair: e\n            }).sign().sig;\n          }\n          static async asyncSign(t, e, r) {\n            const i = new X().fromObject({\n              hashBuf: t,\n              endian: r,\n              keyPair: e\n            });\n            return await i.asyncSign(), i.sig;\n          }\n          static verify(t, e, r, i, s = !0) {\n            return new X().fromObject({\n              hashBuf: t,\n              endian: i,\n              sig: e,\n              keyPair: new Q().fromObject({\n                pubKey: r\n              })\n            }).verify(s).verified;\n          }\n          static async asyncVerify(t, e, r, i, s = !0) {\n            const n = new X().fromObject({\n              hashBuf: t,\n              endian: i,\n              sig: e,\n              keyPair: new Q().fromObject({\n                pubKey: r\n              })\n            });\n            return await n.asyncVerify(s), n.verified;\n          }\n        }\n        class Z extends S {\n          constructor(t, e, r, i, s) {\n            super({\n              messageBuf: t,\n              keyPair: e,\n              sig: r,\n              address: i,\n              verified: s\n            });\n          }\n          static magicHash(t) {\n            if (!Buffer.isBuffer(t)) throw new Error(\"messageBuf must be a buffer\");\n            const e = new y();\n            e.writeVarIntNum(Z.magicBytes.length), e.write(Z.magicBytes), e.writeVarIntNum(t.length), e.write(t);\n            const r = e.toBuffer();\n            return P.sha256Sha256(r);\n          }\n          static async asyncMagicHash(t) {\n            const e = [t];\n            return (await E.asyncClassMethod(Z, \"magicHash\", e)).resbuf;\n          }\n          static sign(t, e) {\n            const r = new Z(t, e);\n            return r.sign(), r.sig.toCompact().toString(\"base64\");\n          }\n          static async asyncSign(t, e) {\n            const r = [t, e],\n              i = await E.asyncClassMethod(Z, \"sign\", r);\n            return JSON.parse(i.resbuf.toString());\n          }\n          static verify(t, e, r) {\n            const i = Buffer.from(e, \"base64\"),\n              s = new Z();\n            return s.messageBuf = t, s.sig = new j().fromCompact(i), s.address = r, s.verify().verified;\n          }\n          static async asyncVerify(t, e, r) {\n            const i = [t, e, r],\n              s = await E.asyncClassMethod(Z, \"verify\", i);\n            return JSON.parse(s.resbuf.toString());\n          }\n          sign() {\n            const t = Z.magicHash(this.messageBuf),\n              e = new X().fromObject({\n                hashBuf: t,\n                keyPair: this.keyPair\n              });\n            return e.sign(), e.calcrecovery(), this.sig = e.sig, this;\n          }\n          verify() {\n            const t = Z.magicHash(this.messageBuf),\n              e = new X();\n            if (e.hashBuf = t, e.sig = this.sig, e.keyPair = new Q(), e.keyPair.pubKey = e.sig2PubKey(), !e.verify()) return this.verified = !1, this;\n            const r = new z().fromPubKey(e.keyPair.pubKey, void 0, this.sig.compressed);\n            return B(r.hashBuf, this.address.hashBuf) ? this.verified = !0 : this.verified = !1, this;\n          }\n        }\n        Z.magicBytes = Buffer.from(\"Bitcoin Signed Message:\\n\");\n        class $ extends S {\n          constructor(t, e, r, i, s, n) {\n            super({\n              versionBytesNum: t,\n              prevBlockHashBuf: e,\n              merkleRootBuf: r,\n              time: i,\n              bits: s,\n              nonce: n\n            });\n          }\n          fromJSON(t) {\n            return this.fromObject({\n              versionBytesNum: t.versionBytesNum,\n              prevBlockHashBuf: Buffer.from(t.prevBlockHashBuf, \"hex\"),\n              merkleRootBuf: Buffer.from(t.merkleRootBuf, \"hex\"),\n              time: t.time,\n              bits: t.bits,\n              nonce: t.nonce\n            }), this;\n          }\n          toJSON() {\n            return {\n              versionBytesNum: this.versionBytesNum,\n              prevBlockHashBuf: this.prevBlockHashBuf.toString(\"hex\"),\n              merkleRootBuf: this.merkleRootBuf.toString(\"hex\"),\n              time: this.time,\n              bits: this.bits,\n              nonce: this.nonce\n            };\n          }\n          fromBr(t) {\n            return this.versionBytesNum = t.readUInt32LE(), this.prevBlockHashBuf = t.read(32), this.merkleRootBuf = t.read(32), this.time = t.readUInt32LE(), this.bits = t.readUInt32LE(), this.nonce = t.readUInt32LE(), this;\n          }\n          toBw(t) {\n            return t || (t = new y()), t.writeUInt32LE(this.versionBytesNum), t.write(this.prevBlockHashBuf), t.write(this.merkleRootBuf), t.writeUInt32LE(this.time), t.writeUInt32LE(this.bits), t.writeUInt32LE(this.nonce), t;\n          }\n        }\n        class tt extends S {\n          constructor(t, e, r, i) {\n            super({\n              hashBuf: t,\n              buf: e,\n              merkle1: r,\n              merkle2: i\n            });\n          }\n          hash() {\n            if (this.hashBuf) return this.hashBuf;\n            if (this.buf) return P.sha256Sha256(this.buf);\n            const t = this.merkle1.hash(),\n              e = this.merkle2.hash();\n            return this.buf = Buffer.concat([t, e]), P.sha256Sha256(this.buf);\n          }\n          fromBuffers(t) {\n            if (t.length < 1) throw new Error(\"buffers must have a length\");\n            t = t.slice();\n            const e = Math.log2(t.length);\n            if (!Number.isInteger(e)) {\n              const i = t[t.length - 1];\n              var r = Math.pow(2, Math.ceil(e));\n              for (let e = t.length; e < r; e++) t.push(i);\n            }\n            const i = t.slice(0, t.length / 2),\n              s = t.slice(t.length / 2);\n            return this.fromBufferArrays(i, s), this;\n          }\n          static fromBuffers(t) {\n            return new this().fromBuffers(t);\n          }\n          fromBufferArrays(t, e) {\n            if (1 === t.length) return this.merkle1 = new tt(void 0, t[0]), this.merkle2 = new tt(void 0, e[0]), this;\n            const r = t.slice(0, t.length / 2),\n              i = t.slice(t.length / 2);\n            this.merkle1 = new tt().fromBufferArrays(r, i);\n            const s = e.slice(0, e.length / 2),\n              n = e.slice(e.length / 2);\n            return this.merkle2 = new tt().fromBufferArrays(s, n), this;\n          }\n          static fromBufferArrays(t, e) {\n            return new this().fromBufferArrays(t, e);\n          }\n          leavesNum() {\n            if (this.merkle1) return this.merkle1.leavesNum() + this.merkle2.leavesNum();\n            if (this.buf) return 1;\n            throw new Error(\"invalid number of leaves\");\n          }\n        }\n        class et extends S {\n          constructor(t, e, r) {\n            super(), this.fromObject({\n              prevoutsHashBuf: t,\n              sequenceHashBuf: e,\n              outputsHashBuf: r\n            });\n          }\n          fromBuffer(t) {\n            return this.fromJSON(JSON.parse(t.toString()));\n          }\n          toBuffer() {\n            return Buffer.from(JSON.stringify(this.toJSON()));\n          }\n          fromJSON(t) {\n            return this.prevoutsHashBuf = t.prevoutsHashBuf ? Buffer.from(t.prevoutsHashBuf, \"hex\") : void 0, this.sequenceHashBuf = t.sequenceHashBuf ? Buffer.from(t.sequenceHashBuf, \"hex\") : void 0, this.outputsHashBuf = t.outputsHashBuf ? Buffer.from(t.outputsHashBuf, \"hex\") : void 0, this;\n          }\n          toJSON() {\n            return {\n              prevoutsHashBuf: this.prevoutsHashBuf ? this.prevoutsHashBuf.toString(\"hex\") : void 0,\n              sequenceHashBuf: this.sequenceHashBuf ? this.sequenceHashBuf.toString(\"hex\") : void 0,\n              outputsHashBuf: this.outputsHashBuf ? this.outputsHashBuf.toString(\"hex\") : void 0\n            };\n          }\n        }\n        class rt extends S {\n          constructor(t) {\n            super({\n              buf: t\n            });\n          }\n          fromJSON(t) {\n            return this.fromObject({\n              buf: Buffer.from(t, \"hex\")\n            }), this;\n          }\n          toJSON() {\n            return this.buf.toString(\"hex\");\n          }\n          fromBuffer(t) {\n            return this.buf = t, this;\n          }\n          fromBr(t) {\n            return this.buf = t.readVarIntBuf(), this;\n          }\n          fromBn(t) {\n            return this.buf = new y().writeVarIntBn(t).toBuffer(), this;\n          }\n          static fromBn(t) {\n            return new this().fromBn(t);\n          }\n          fromNumber(t) {\n            return this.buf = new y().writeVarIntNum(t).toBuffer(), this;\n          }\n          static fromNumber(t) {\n            return new this().fromNumber(t);\n          }\n          toBuffer() {\n            return this.buf;\n          }\n          toBn() {\n            return new g(this.buf).readVarIntBn();\n          }\n          toNumber() {\n            return new g(this.buf).readVarIntNum();\n          }\n        }\n        class it extends S {\n          constructor(t, e, r, i, s = 4294967295) {\n            super({\n              txHashBuf: t,\n              txOutNum: e,\n              scriptVi: r,\n              script: i,\n              nSequence: s\n            });\n          }\n          setScript(t) {\n            return this.scriptVi = rt.fromNumber(t.toBuffer().length), this.script = t, this;\n          }\n          fromProperties(t, e, r, i) {\n            return this.fromObject({\n              txHashBuf: t,\n              txOutNum: e,\n              nSequence: i\n            }), this.setScript(r), this;\n          }\n          static fromProperties(t, e, r, i) {\n            return new this().fromProperties(t, e, r, i);\n          }\n          fromJSON(t) {\n            return this.fromObject({\n              txHashBuf: void 0 !== t.txHashBuf ? Buffer.from(t.txHashBuf, \"hex\") : void 0,\n              txOutNum: t.txOutNum,\n              scriptVi: void 0 !== t.scriptVi ? rt.fromJSON(t.scriptVi) : void 0,\n              script: void 0 !== t.script ? q.fromJSON(t.script) : void 0,\n              nSequence: t.nSequence\n            }), this;\n          }\n          toJSON() {\n            return {\n              txHashBuf: void 0 !== this.txHashBuf ? this.txHashBuf.toString(\"hex\") : void 0,\n              txOutNum: this.txOutNum,\n              scriptVi: void 0 !== this.scriptVi ? this.scriptVi.toJSON() : void 0,\n              script: void 0 !== this.script ? this.script.toJSON() : void 0,\n              nSequence: this.nSequence\n            };\n          }\n          fromBr(t) {\n            return this.txHashBuf = t.read(32), this.txOutNum = t.readUInt32LE(), this.scriptVi = rt.fromBuffer(t.readVarIntBuf()), this.script = q.fromBuffer(t.read(this.scriptVi.toNumber())), this.nSequence = t.readUInt32LE(), this;\n          }\n          toBw(t) {\n            return t || (t = new y()), t.write(this.txHashBuf), t.writeUInt32LE(this.txOutNum), t.write(this.scriptVi.buf), t.write(this.script.toBuffer()), t.writeUInt32LE(this.nSequence), t;\n          }\n          fromPubKeyHashTxOut(t, e, r, i) {\n            const s = new q();\n            if (!r.script.isPubKeyHashOut()) throw new Error(\"txOut must be of type pubKeyHash\");\n            return s.writeOpCode(T.OP_0), i ? s.writeBuffer(i.toBuffer()) : s.writeOpCode(T.OP_0), this.txHashBuf = t, this.txOutNum = e, this.setScript(s), this;\n          }\n          hasNullInput() {\n            return \"0000000000000000000000000000000000000000000000000000000000000000\" === this.txHashBuf.toString(\"hex\") && 4294967295 === this.txOutNum;\n          }\n          setNullInput() {\n            this.txHashBuf = Buffer.alloc(32), this.txHashBuf.fill(0), this.txOutNum = 4294967295;\n          }\n        }\n        it.LOCKTIME_VERIFY_SEQUENCE = 1, it.SEQUENCE_FINAL = 4294967295, it.SEQUENCE_LOCKTIME_DISABLE_FLAG = 1 << 31, it.SEQUENCE_LOCKTIME_TYPE_FLAG = 1 << 22, it.SEQUENCE_LOCKTIME_MASK = 65535, it.SEQUENCE_LOCKTIME_GRANULARITY = 9;\n        class st extends S {\n          constructor(t, e, r) {\n            super({\n              valueBn: t,\n              scriptVi: e,\n              script: r\n            });\n          }\n          setScript(t) {\n            return this.scriptVi = rt.fromNumber(t.toBuffer().length), this.script = t, this;\n          }\n          fromProperties(t, e) {\n            return this.fromObject({\n              valueBn: t\n            }), this.setScript(e), this;\n          }\n          static fromProperties(t, e) {\n            return new this().fromProperties(t, e);\n          }\n          fromJSON(t) {\n            return this.fromObject({\n              valueBn: new p().fromJSON(t.valueBn),\n              scriptVi: new rt().fromJSON(t.scriptVi),\n              script: new q().fromJSON(t.script)\n            }), this;\n          }\n          toJSON() {\n            return {\n              valueBn: this.valueBn.toJSON(),\n              scriptVi: this.scriptVi.toJSON(),\n              script: this.script.toJSON()\n            };\n          }\n          fromBr(t) {\n            return this.valueBn = t.readUInt64LEBn(), this.scriptVi = rt.fromNumber(t.readVarIntNum()), this.script = new q().fromBuffer(t.read(this.scriptVi.toNumber())), this;\n          }\n          toBw(t) {\n            return t || (t = new y()), t.writeUInt64LEBn(this.valueBn), t.write(this.scriptVi.buf), t.write(this.script.toBuffer()), t;\n          }\n        }\n        class nt extends S {\n          constructor(t = 1, e = rt.fromNumber(0), r = [], i = rt.fromNumber(0), s = [], n = 0) {\n            super({\n              versionBytesNum: t,\n              txInsVi: e,\n              txIns: r,\n              txOutsVi: i,\n              txOuts: s,\n              nLockTime: n\n            });\n          }\n          fromJSON(t) {\n            const e = [];\n            t.txIns.forEach(function (t) {\n              e.push(new it().fromJSON(t));\n            });\n            const r = [];\n            return t.txOuts.forEach(function (t) {\n              r.push(new st().fromJSON(t));\n            }), this.fromObject({\n              versionBytesNum: t.versionBytesNum,\n              txInsVi: new rt().fromJSON(t.txInsVi),\n              txIns: e,\n              txOutsVi: new rt().fromJSON(t.txOutsVi),\n              txOuts: r,\n              nLockTime: t.nLockTime\n            }), this;\n          }\n          toJSON() {\n            const t = [];\n            this.txIns.forEach(function (e) {\n              t.push(e.toJSON());\n            });\n            const e = [];\n            return this.txOuts.forEach(function (t) {\n              e.push(t.toJSON());\n            }), {\n              versionBytesNum: this.versionBytesNum,\n              txInsVi: this.txInsVi.toJSON(),\n              txIns: t,\n              txOutsVi: this.txOutsVi.toJSON(),\n              txOuts: e,\n              nLockTime: this.nLockTime\n            };\n          }\n          fromBr(t) {\n            this.versionBytesNum = t.readUInt32LE(), this.txInsVi = new rt(t.readVarIntBuf());\n            const e = this.txInsVi.toNumber();\n            this.txIns = [];\n            for (let r = 0; r < e; r++) this.txIns.push(new it().fromBr(t));\n            this.txOutsVi = new rt(t.readVarIntBuf());\n            const r = this.txOutsVi.toNumber();\n            this.txOuts = [];\n            for (let e = 0; e < r; e++) this.txOuts.push(new st().fromBr(t));\n            return this.nLockTime = t.readUInt32LE(), this;\n          }\n          toBw(t) {\n            t || (t = new y()), t.writeUInt32LE(this.versionBytesNum), t.write(this.txInsVi.buf);\n            for (let e = 0; e < this.txIns.length; e++) this.txIns[e].toBw(t);\n            t.write(this.txOutsVi.buf);\n            for (let e = 0; e < this.txOuts.length; e++) this.txOuts[e].toBw(t);\n            return t.writeUInt32LE(this.nLockTime), t;\n          }\n          hashPrevouts() {\n            const t = new y();\n            for (const e in this.txIns) {\n              const r = this.txIns[e];\n              t.write(r.txHashBuf), t.writeUInt32LE(r.txOutNum);\n            }\n            return P.sha256Sha256(t.toBuffer());\n          }\n          hashSequence() {\n            const t = new y();\n            for (const e in this.txIns) {\n              const r = this.txIns[e];\n              t.writeUInt32LE(r.nSequence);\n            }\n            return P.sha256Sha256(t.toBuffer());\n          }\n          hashOutputs() {\n            const t = new y();\n            for (const e in this.txOuts) {\n              const r = this.txOuts[e];\n              t.write(r.toBuffer());\n            }\n            return P.sha256Sha256(t.toBuffer());\n          }\n          sighash(t, e, r, i, s = 0, n = new et()) {\n            const a = this.sighashPreimage(t, e, r, i, s, n);\n            return 0 === a.compare(Buffer.from(\"0000000000000000000000000000000000000000000000000000000000000001\", \"hex\")) ? a : new g(P.sha256Sha256(a)).readReverse();\n          }\n          async asyncSighash(t, e, r, i, s = 0, n = {}) {\n            return (await E.asyncObjectMethod(this, \"sighash\", [t, e, r, i, s, n])).resbuf;\n          }\n          sighashPreimage(t, e, r, i, s = 0, n = new et()) {\n            if (t & j.SIGHASH_FORKID && s & nt.SCRIPT_ENABLE_SIGHASH_FORKID) {\n              let s = Buffer.alloc(32, 0),\n                a = Buffer.alloc(32, 0),\n                o = Buffer.alloc(32, 0);\n              t & j.SIGHASH_ANYONECANPAY || (s = n.prevoutsHashBuf ? n.prevoutsHashBuf : n.prevoutsHashBuf = this.hashPrevouts()), t & j.SIGHASH_ANYONECANPAY || (31 & t) === j.SIGHASH_SINGLE || (31 & t) === j.SIGHASH_NONE || (a = n.sequenceHashBuf ? n.sequenceHashBuf : n.sequenceHashBuf = this.hashSequence()), (31 & t) !== j.SIGHASH_SINGLE && (31 & t) !== j.SIGHASH_NONE ? o = n.outputsHashBuf ? n.outputsHashBuf : n.outputsHashBuf = this.hashOutputs() : (31 & t) === j.SIGHASH_SINGLE && e < this.txOuts.length && (o = P.sha256Sha256(this.txOuts[e].toBuffer()));\n              const h = new y();\n              return h.writeUInt32LE(this.versionBytesNum), h.write(s), h.write(a), h.write(this.txIns[e].txHashBuf), h.writeUInt32LE(this.txIns[e].txOutNum), h.writeVarIntNum(r.toBuffer().length), h.write(r.toBuffer()), h.writeUInt64LEBn(i), h.writeUInt32LE(this.txIns[e].nSequence), h.write(o), h.writeUInt32LE(this.nLockTime), h.writeUInt32LE(t >>> 0), h.toBuffer();\n            }\n            const a = this.cloneByBuffer();\n            (r = new q().fromBuffer(r.toBuffer())).removeCodeseparators();\n            for (let t = 0; t < a.txIns.length; t++) a.txIns[t] = it.fromBuffer(a.txIns[t].toBuffer()).setScript(new q());\n            if (a.txIns[e] = it.fromBuffer(a.txIns[e].toBuffer()).setScript(r), (31 & t) === j.SIGHASH_NONE) {\n              a.txOuts.length = 0, a.txOutsVi = rt.fromNumber(0);\n              for (let t = 0; t < a.txIns.length; t++) t !== e && (a.txIns[t].nSequence = 0);\n            } else if ((31 & t) === j.SIGHASH_SINGLE) {\n              if (e > a.txOuts.length - 1) return Buffer.from(\"0000000000000000000000000000000000000000000000000000000000000001\", \"hex\");\n              a.txOuts.length = e + 1, a.txOutsVi = rt.fromNumber(e + 1);\n              for (let t = 0; t < a.txOuts.length; t++) t < e && (a.txOuts[t] = st.fromProperties(new p().fromBuffer(Buffer.from(\"ffffffffffffffff\", \"hex\")), new q()));\n              for (let t = 0; t < a.txIns.length; t++) t !== e && (a.txIns[t].nSequence = 0);\n            }\n            return t & j.SIGHASH_ANYONECANPAY && (a.txIns[0] = a.txIns[e], a.txIns.length = 1, a.txInsVi = rt.fromNumber(1)), new y().write(a.toBuffer()).writeInt32LE(t).toBuffer();\n          }\n          async asyncSighashPreimage(t, e, r, i, s = 0, n = {}) {\n            return (await E.asyncObjectMethod(this, \"sighashPreimage\", [t, e, r, i, s, n])).resbuf;\n          }\n          sign(t, e = j.SIGHASH_ALL | j.SIGHASH_FORKID, r, i, s, n = nt.SCRIPT_ENABLE_SIGHASH_FORKID, a = {}) {\n            const o = this.sighash(e, r, i, s, n, a);\n            return X.sign(o, t, \"little\").fromObject({\n              nHashType: e\n            });\n          }\n          async asyncSign(t, e = j.SIGHASH_ALL | j.SIGHASH_FORKID, r, i, s, n = nt.SCRIPT_ENABLE_SIGHASH_FORKID, a = {}) {\n            const o = await E.asyncObjectMethod(this, \"sign\", [t, e, r, i, s, n, a]);\n            return new j().fromFastBuffer(o.resbuf);\n          }\n          verify(t, e, r, i, s = !1, n, a = nt.SCRIPT_ENABLE_SIGHASH_FORKID, o = {}) {\n            const h = this.sighash(t.nHashType, r, i, n, a, o);\n            return X.verify(h, t, e, \"little\", s);\n          }\n          async asyncVerify(t, e, r, i, s = !1, n, a = nt.SCRIPT_ENABLE_SIGHASH_FORKID, o = {}) {\n            const h = await E.asyncObjectMethod(this, \"verify\", [t, e, r, i, s, n, a, o]);\n            return JSON.parse(h.resbuf.toString());\n          }\n          hash() {\n            return P.sha256Sha256(this.toBuffer());\n          }\n          async asyncHash() {\n            return (await E.asyncObjectMethod(this, \"hash\", [])).resbuf;\n          }\n          id() {\n            return new g(this.hash()).readReverse().toString(\"hex\");\n          }\n          async asyncId() {\n            const t = await E.asyncObjectMethod(this, \"id\", []);\n            return JSON.parse(t.resbuf.toString());\n          }\n          addTxIn(t, e, r, i) {\n            let s;\n            return s = t instanceof it ? t : new it().fromObject({\n              txHashBuf: t,\n              txOutNum: e,\n              nSequence: i\n            }).setScript(r), this.txIns.push(s), this.txInsVi = rt.fromNumber(this.txInsVi.toNumber() + 1), this;\n          }\n          addTxOut(t, e) {\n            let r;\n            return r = t instanceof st ? t : new st().fromObject({\n              valueBn: t\n            }).setScript(e), this.txOuts.push(r), this.txOutsVi = rt.fromNumber(this.txOutsVi.toNumber() + 1), this;\n          }\n          isCoinbase() {\n            return 1 === this.txIns.length && this.txIns[0].hasNullInput();\n          }\n          sort() {\n            return this.txIns.sort((t, e) => new g(t.txHashBuf).readReverse().compare(new g(e.txHashBuf).readReverse()) || t.txOutNum - e.txOutNum), this.txOuts.sort((t, e) => t.valueBn.sub(e.valueBn).toNumber() || t.script.toBuffer().compare(e.script.toBuffer())), this;\n          }\n        }\n        nt.MAX_MONEY = 21e14, nt.SCRIPT_ENABLE_SIGHASH_FORKID = 65536;\n        class at extends S {\n          constructor(t, e, r) {\n            super({\n              blockHeader: t,\n              txsVi: e,\n              txs: r\n            });\n          }\n          fromJSON(t) {\n            const e = [];\n            return t.txs.forEach(function (t) {\n              e.push(new nt().fromJSON(t));\n            }), this.fromObject({\n              blockHeader: new $().fromJSON(t.blockHeader),\n              txsVi: new rt().fromJSON(t.txsVi),\n              txs: e\n            }), this;\n          }\n          toJSON() {\n            const t = [];\n            return this.txs.forEach(function (e) {\n              t.push(e.toJSON());\n            }), {\n              blockHeader: this.blockHeader.toJSON(),\n              txsVi: this.txsVi.toJSON(),\n              txs: t\n            };\n          }\n          fromBr(t) {\n            this.blockHeader = new $().fromBr(t), this.txsVi = new rt(t.readVarIntBuf());\n            const e = this.txsVi.toNumber();\n            this.txs = [];\n            for (let r = 0; r < e; r++) this.txs.push(new nt().fromBr(t));\n            return this;\n          }\n          toBw(t) {\n            t || (t = new y()), t.write(this.blockHeader.toBuffer()), t.write(this.txsVi.buf);\n            const e = this.txsVi.toNumber();\n            for (let r = 0; r < e; r++) this.txs[r].toBw(t);\n            return t;\n          }\n          hash() {\n            return P.sha256Sha256(this.blockHeader.toBuffer());\n          }\n          async asyncHash() {\n            return (await E.asyncObjectMethod(this, \"hash\", [])).resbuf;\n          }\n          id() {\n            return new g(this.hash()).readReverse().toString(\"hex\");\n          }\n          async asyncId() {\n            const t = await E.asyncObjectMethod(this, \"id\", []);\n            return JSON.parse(t.resbuf.toString());\n          }\n          verifyMerkleRoot() {\n            const t = this.txs.map(t => t.toBuffer()),\n              e = tt.fromBuffers(t).hash();\n            return Buffer.compare(e, this.blockHeader.merkleRootBuf);\n          }\n          static iterateTxs(t) {\n            const e = new g(t),\n              r = new $().fromBr(e),\n              i = new rt(e.readVarIntBuf()),\n              s = i.toNumber();\n            return {\n              blockHeader: r,\n              txsVi: i,\n              txsNum: s,\n              *[Symbol.iterator]() {\n                for (let t = 0; t < s; t++) yield new nt().fromBr(e);\n              }\n            };\n          }\n        }\n        at.MAX_BLOCK_SIZE = 1e6;\n        class ot extends S {\n          constructor(t, e, r, i = [], s = [], n = 0, a = 0, o = 0, h = [], f = \"\", c = ot.defaultFlags, u = new p(0)) {\n            super({\n              script: t,\n              tx: e,\n              nIn: r,\n              stack: i,\n              altStack: s,\n              pc: n,\n              pBeginCodeHash: a,\n              nOpCount: o,\n              ifStack: h,\n              errStr: f,\n              flags: c,\n              valueBn: u\n            });\n          }\n          initialize() {\n            return this.script = new q(), this.stack = [], this.altStack = [], this.pc = 0, this.pBeginCodeHash = 0, this.nOpCount = 0, this.ifStack = [], this.errStr = \"\", this.flags = ot.defaultFlags, this;\n          }\n          fromJSON(t) {\n            return this.fromJSONNoTx(t), this.tx = t.tx ? new nt().fromJSON(t.tx) : void 0, this;\n          }\n          fromJSONNoTx(t) {\n            return this.fromObject({\n              script: void 0 !== t.script ? new q().fromJSON(t.script) : void 0,\n              nIn: t.nIn\n            }), this.stack = [], t.stack.forEach(function (t) {\n              this.stack.push(Buffer.from(t, \"hex\"));\n            }.bind(this)), this.altStack = [], t.altStack.forEach(function (t) {\n              this.altStack.push(Buffer.from(t, \"hex\"));\n            }.bind(this)), this.fromObject({\n              pc: t.pc,\n              pBeginCodeHash: t.pBeginCodeHash,\n              nOpCount: t.nOpCount,\n              ifStack: t.ifStack,\n              errStr: t.errStr,\n              flags: t.flags\n            }), this;\n          }\n          fromBr(t) {\n            let e = t.readVarIntNum(),\n              r = t.read(e);\n            this.fromJSONNoTx(JSON.parse(r.toString()));\n            let i = t.readVarIntNum();\n            if (i > 0) {\n              let e = t.read(i);\n              this.tx = new nt().fromFastBuffer(e);\n            }\n            return this;\n          }\n          toJSON() {\n            let t = this.toJSONNoTx();\n            return t.tx = this.tx ? this.tx.toJSON() : void 0, t;\n          }\n          toJSONNoTx() {\n            let t = [];\n            this.stack.forEach(function (e) {\n              t.push(e.toString(\"hex\"));\n            });\n            let e = [];\n            return this.altStack.forEach(function (t) {\n              e.push(t.toString(\"hex\"));\n            }), {\n              script: this.script ? this.script.toJSON() : void 0,\n              nIn: this.nIn,\n              stack: t,\n              altStack: e,\n              pc: this.pc,\n              pBeginCodeHash: this.pBeginCodeHash,\n              nOpCount: this.nOpCount,\n              ifStack: this.ifStack,\n              errStr: this.errStr,\n              flags: this.flags\n            };\n          }\n          toBw(t) {\n            t || (t = new y());\n            let e = Buffer.from(JSON.stringify(this.toJSONNoTx()));\n            if (t.writeVarIntNum(e.length), t.write(e), this.tx) {\n              let e = this.tx.toFastBuffer();\n              t.writeVarIntNum(e.length), t.write(e);\n            } else t.writeVarIntNum(0);\n            return t;\n          }\n          static getFlags(t) {\n            let e = 0;\n            return -1 !== t.indexOf(\"NONE\") && (e |= ot.SCRIPT_VERIFY_NONE), -1 !== t.indexOf(\"P2SH\") && (e |= ot.SCRIPT_VERIFY_P2SH), -1 !== t.indexOf(\"STRICTENC\") && (e |= ot.SCRIPT_VERIFY_STRICTENC), -1 !== t.indexOf(\"DERSIG\") && (e |= ot.SCRIPT_VERIFY_DERSIG), -1 !== t.indexOf(\"LOW_S\") && (e |= ot.SCRIPT_VERIFY_LOW_S), -1 !== t.indexOf(\"NULLDUMMY\") && (e |= ot.SCRIPT_VERIFY_NULLDUMMY), -1 !== t.indexOf(\"SIGPUSHONLY\") && (e |= ot.SCRIPT_VERIFY_SIGPUSHONLY), -1 !== t.indexOf(\"MINIMALDATA\") && (e |= ot.SCRIPT_VERIFY_MINIMALDATA), -1 !== t.indexOf(\"DISCOURAGE_UPGRADABLE_NOPS\") && (e |= ot.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS), -1 !== t.indexOf(\"CLEANSTACK\") && (e |= ot.SCRIPT_VERIFY_CLEANSTACK), -1 !== t.indexOf(\"CHECKLOCKTIMEVERIFY\") && (e |= ot.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY), -1 !== t.indexOf(\"CHECKSEQUENCEVERIFY\") && (e |= ot.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY), -1 !== t.indexOf(\"SIGHASH_FORKID\") && (e |= ot.SCRIPT_ENABLE_SIGHASH_FORKID), e;\n          }\n          static castToBool(t) {\n            for (let e = 0; e < t.length; e++) if (0 !== t[e]) return e !== t.length - 1 || 128 !== t[e];\n            return !1;\n          }\n          checkSigEncoding(t) {\n            if (0 === t.length) return !0;\n            if (0 != (this.flags & (ot.SCRIPT_VERIFY_DERSIG | ot.SCRIPT_VERIFY_LOW_S | ot.SCRIPT_VERIFY_STRICTENC)) && !j.IsTxDer(t)) return this.errStr = \"SCRIPT_ERR_SIG_DER\", !1;\n            if (0 != (this.flags & ot.SCRIPT_VERIFY_LOW_S)) {\n              if (!new j().fromTxFormat(t).hasLowS()) return this.errStr = \"SCRIPT_ERR_SIG_DER\", !1;\n            } else if (0 != (this.flags & ot.SCRIPT_VERIFY_STRICTENC) && !new j().fromTxFormat(t).hasDefinedHashType()) return this.errStr = \"SCRIPT_ERR_SIG_HASHTYPE\", !1;\n            return !0;\n          }\n          checkPubKeyEncoding(t) {\n            return !(0 != (this.flags & ot.SCRIPT_VERIFY_STRICTENC) && !K.isCompressedOrUncompressed(t) && (this.errStr = \"SCRIPT_ERR_PUBKEYTYPE\", 1));\n          }\n          checkLockTime(t) {\n            return (this.tx.nLockTime < ot.LOCKTIME_THRESHOLD && t < ot.LOCKTIME_THRESHOLD || this.tx.nLockTime >= ot.LOCKTIME_THRESHOLD && t >= ot.LOCKTIME_THRESHOLD) && !(t > this.tx.nLockTime) && it.SEQUENCE_FINAL !== this.tx.txIns[this.nIn].nSequence;\n          }\n          checkSequence(t) {\n            let e = this.tx.txIns[this.nIn].nSequence;\n            if (this.tx.versionBytesNum < 2) return !1;\n            if (e & it.SEQUENCE_LOCKTIME_DISABLE_FLAG) return !1;\n            let r = it.SEQUENCE_LOCKTIME_TYPE_FLAG | it.SEQUENCE_LOCKTIME_MASK,\n              i = e & r,\n              s = t & r;\n            return (i < it.SEQUENCE_LOCKTIME_TYPE_FLAG && s < it.SEQUENCE_LOCKTIME_TYPE_FLAG || i >= it.SEQUENCE_LOCKTIME_TYPE_FLAG && s >= it.SEQUENCE_LOCKTIME_TYPE_FLAG) && !(s > i);\n          }\n          *eval() {\n            this.script.toBuffer().length > 1e4 && (this.errStr = \"SCRIPT_ERR_SCRIPT_SIZE\", yield !1);\n            try {\n              for (; this.pc < this.script.chunks.length;) {\n                let t = this.step();\n                t ? yield t : yield !1;\n              }\n              this.stack.length + this.altStack.length > 1e3 && (this.errStr = \"SCRIPT_ERR_STACK_SIZE\", yield !1);\n            } catch (t) {\n              this.errStr = \"SCRIPT_ERR_UNKNOWN_ERROR: \" + t, yield !1;\n            }\n            this.ifStack.length > 0 && (this.errStr = \"SCRIPT_ERR_UNBALANCED_CONDITIONAL\", yield !1), yield !0;\n          }\n          step() {\n            let t = 0 != (this.flags & ot.SCRIPT_VERIFY_MINIMALDATA),\n              e = !(this.ifStack.indexOf(!1) + 1),\n              r = this.script.chunks[this.pc];\n            this.pc++;\n            let i = r.opCodeNum;\n            if (void 0 === i) return this.errStr = \"SCRIPT_ERR_BAD_OPCODE\", !1;\n            if (r.buf && r.buf.length > ot.MAX_SCRIPT_ELEMENT_SIZE) return this.errStr = \"SCRIPT_ERR_PUSH_SIZE\", !1;\n            if (i > T.OP_16 && ++this.nOpCount > 201) return this.errStr = \"SCRIPT_ERR_OP_COUNT\", !1;\n            if (i === T.OP_LEFT || i === T.OP_RIGHT || i === T.OP_2MUL || i === T.OP_2DIV) return this.errStr = \"SCRIPT_ERR_DISABLED_OPCODE\", !1;\n            if (e && i >= 0 && i <= T.OP_PUSHDATA4) {\n              if (t && !this.script.checkMinimalPush(this.pc - 1)) return this.errStr = \"SCRIPT_ERR_MINIMALDATA\", !1;\n              if (r.buf) {\n                if (r.len !== r.buf.length) throw new Error(\"LEngth of push value not equal to length of data\");\n                this.stack.push(r.buf);\n              } else this.stack.push(ot.false);\n            } else if (e || T.OP_IF <= i && i <= T.OP_ENDIF) switch (i) {\n              case T.OP_1NEGATE:\n              case T.OP_1:\n              case T.OP_2:\n              case T.OP_3:\n              case T.OP_4:\n              case T.OP_5:\n              case T.OP_6:\n              case T.OP_7:\n              case T.OP_8:\n              case T.OP_9:\n              case T.OP_10:\n              case T.OP_11:\n              case T.OP_12:\n              case T.OP_13:\n              case T.OP_14:\n              case T.OP_15:\n              case T.OP_16:\n                {\n                  let t = new p(i - (T.OP_1 - 1)).toScriptNumBuffer();\n                  this.stack.push(t);\n                }\n                break;\n              case T.OP_NOP:\n                break;\n              case T.OP_CHECKLOCKTIMEVERIFY:\n                {\n                  if (!(this.flags & ot.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n                    if (this.flags & ot.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) return this.errStr = \"SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS\", !1;\n                    break;\n                  }\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let e = this.stack[this.stack.length - 1],\n                    r = new p().fromScriptNumBuffer(e, t, 5).toNumber();\n                  if (r < 0) return this.errStr = \"SCRIPT_ERR_NEGATIVE_LOCKTIME\", !1;\n                  if (!this.checkLockTime(r)) return this.errStr = \"SCRIPT_ERR_UNSATISFIED_LOCKTIME\", !1;\n                }\n                break;\n              case T.OP_CHECKSEQUENCEVERIFY:\n                {\n                  if (!(this.flags & ot.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n                    if (this.flags & ot.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) return this.errStr = \"SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS\", !1;\n                    break;\n                  }\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let e = this.stack[this.stack.length - 1],\n                    r = new p().fromScriptNumBuffer(e, t, 5).toNumber();\n                  if (r < 0) return this.errStr = \"SCRIPT_ERR_NEGATIVE_LOCKTIME\", !1;\n                  if (0 != (r & it.SEQUENCE_LOCKTIME_DISABLE_FLAG)) break;\n                  if (!this.checkSequence(r)) return this.errStr = \"SCRIPT_ERR_UNSATISFIED_LOCKTIME\", !1;\n                }\n                break;\n              case T.OP_NOP1:\n              case T.OP_NOP3:\n              case T.OP_NOP4:\n              case T.OP_NOP5:\n              case T.OP_NOP6:\n              case T.OP_NOP7:\n              case T.OP_NOP8:\n              case T.OP_NOP9:\n              case T.OP_NOP10:\n                if (this.flags & ot.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) return this.errStr = \"SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS\", !1;\n                break;\n              case T.OP_IF:\n              case T.OP_NOTIF:\n                {\n                  let t = !1;\n                  if (e) {\n                    if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_UNBALANCED_CONDITIONAL\", !1;\n                    let e = this.stack.pop();\n                    t = ot.castToBool(e), i === T.OP_NOTIF && (t = !t);\n                  }\n                  this.ifStack.push(t);\n                }\n                break;\n              case T.OP_ELSE:\n                if (0 === this.ifStack.length) return this.errStr = \"SCRIPT_ERR_UNBALANCED_CONDITIONAL\", !1;\n                this.ifStack[this.ifStack.length - 1] = !this.ifStack[this.ifStack.length - 1];\n                break;\n              case T.OP_ENDIF:\n                if (0 === this.ifStack.length) return this.errStr = \"SCRIPT_ERR_UNBALANCED_CONDITIONAL\", !1;\n                this.ifStack.pop();\n                break;\n              case T.OP_VERIFY:\n                {\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 1];\n                  if (!ot.castToBool(t)) return this.errStr = \"SCRIPT_ERR_VERIFY\", !1;\n                  this.stack.pop();\n                }\n                break;\n              case T.OP_RETURN:\n                return this.errStr = \"SCRIPT_ERR_OP_RETURN\", !1;\n              case T.OP_TOALTSTACK:\n                if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                this.altStack.push(this.stack.pop());\n                break;\n              case T.OP_FROMALTSTACK:\n                if (this.altStack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_ALTSTACK_OPERATION\", !1;\n                this.stack.push(this.altStack.pop());\n                break;\n              case T.OP_2DROP:\n                if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                this.stack.pop(), this.stack.pop();\n                break;\n              case T.OP_2DUP:\n                {\n                  if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 2],\n                    e = this.stack[this.stack.length - 1];\n                  this.stack.push(t), this.stack.push(e);\n                }\n                break;\n              case T.OP_3DUP:\n                {\n                  if (this.stack.length < 3) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 3],\n                    e = this.stack[this.stack.length - 2],\n                    r = this.stack[this.stack.length - 1];\n                  this.stack.push(t), this.stack.push(e), this.stack.push(r);\n                }\n                break;\n              case T.OP_2OVER:\n                {\n                  if (this.stack.length < 4) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 4],\n                    e = this.stack[this.stack.length - 3];\n                  this.stack.push(t), this.stack.push(e);\n                }\n                break;\n              case T.OP_2ROT:\n                {\n                  if (this.stack.length < 6) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack.splice(this.stack.length - 6, 2);\n                  this.stack.push(t[0]), this.stack.push(t[1]);\n                }\n                break;\n              case T.OP_2SWAP:\n                {\n                  if (this.stack.length < 4) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack.splice(this.stack.length - 4, 2);\n                  this.stack.push(t[0]), this.stack.push(t[1]);\n                }\n                break;\n              case T.OP_IFDUP:\n                {\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 1];\n                  ot.castToBool(t) && this.stack.push(t);\n                }\n                break;\n              case T.OP_DEPTH:\n                {\n                  let t = new p(this.stack.length).toScriptNumBuffer();\n                  this.stack.push(t);\n                }\n                break;\n              case T.OP_DROP:\n                if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                this.stack.pop();\n                break;\n              case T.OP_DUP:\n                if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                this.stack.push(this.stack[this.stack.length - 1]);\n                break;\n              case T.OP_NIP:\n                if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                this.stack.splice(this.stack.length - 2, 1);\n                break;\n              case T.OP_OVER:\n                if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                this.stack.push(this.stack[this.stack.length - 2]);\n                break;\n              case T.OP_PICK:\n              case T.OP_ROLL:\n                {\n                  if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let e = this.stack[this.stack.length - 1],\n                    r = new p().fromScriptNumBuffer(e, t).toNumber();\n                  if (this.stack.pop(), r < 0 || r >= this.stack.length) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  e = this.stack[this.stack.length - r - 1], i === T.OP_ROLL && this.stack.splice(this.stack.length - r - 1, 1), this.stack.push(e);\n                }\n                break;\n              case T.OP_ROT:\n                {\n                  if (this.stack.length < 3) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 3],\n                    e = this.stack[this.stack.length - 2],\n                    r = this.stack[this.stack.length - 1];\n                  this.stack[this.stack.length - 3] = e, this.stack[this.stack.length - 2] = r, this.stack[this.stack.length - 1] = t;\n                }\n                break;\n              case T.OP_SWAP:\n                {\n                  if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 2],\n                    e = this.stack[this.stack.length - 1];\n                  this.stack[this.stack.length - 2] = e, this.stack[this.stack.length - 1] = t;\n                }\n                break;\n              case T.OP_TUCK:\n                if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n                break;\n              case T.OP_SIZE:\n                {\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = new p(this.stack[this.stack.length - 1].length);\n                  this.stack.push(t.toScriptNumBuffer());\n                }\n                break;\n              case T.OP_OR:\n              case T.OP_AND:\n              case T.OP_XOR:\n                if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                let r = this.stack[this.stack.length - 2],\n                  s = this.stack[this.stack.length - 1];\n                if (r.length != s.length) return this.errStr = \"SCRIPT_ERR_INVALID_OPERAND_SIZE\", !1;\n                switch (i) {\n                  case T.OP_AND:\n                    for (let t = 0; t < r.length; t++) r[t] &= s[t];\n                    break;\n                  case T.OP_OR:\n                    for (let t = 0; t < r.length; t++) r[t] |= s[t];\n                    break;\n                  case T.OP_XOR:\n                    for (let t = 0; t < r.length; t++) r[t] ^= s[t];\n                }\n                this.stack.pop();\n                break;\n              case T.OP_INVERT:\n                if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                let n = this.stack[this.stack.length - 1];\n                for (let t = 0; t < n.length; t++) n[t] = ~n[t];\n                break;\n              case T.OP_LSHIFT:\n              case T.OP_RSHIFT:\n                {\n                  if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let e = this.stack[this.stack.length - 2],\n                    r = new p(e),\n                    s = new p().fromScriptNumBuffer(this.stack[this.stack.length - 1], t).toNumber();\n                  if (s < 0) return this.errStr = \"SCRIPT_ERR_INVALID_NUMBER_RANGE\", !1;\n                  switch (this.stack.pop(), this.stack.pop(), i) {\n                    case T.OP_LSHIFT:\n                      r = r.ushln(s);\n                      break;\n                    case T.OP_RSHIFT:\n                      r = r.ushrn(s);\n                  }\n                  let n = r.toBuffer().slice(-e.length);\n                  n.length < e.length && (n = Buffer.concat([Buffer.alloc(e.length - n.length), n])), this.stack.push(n);\n                  break;\n                }\n              case T.OP_EQUAL:\n              case T.OP_EQUALVERIFY:\n                {\n                  if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t = this.stack[this.stack.length - 2],\n                    e = this.stack[this.stack.length - 1],\n                    r = B(t, e);\n                  if (this.stack.pop(), this.stack.pop(), this.stack.push(r ? ot.true : ot.false), i === T.OP_EQUALVERIFY) {\n                    if (!r) return this.errStr = \"SCRIPT_ERR_EQUALVERIFY\", !1;\n                    this.stack.pop();\n                  }\n                }\n                break;\n              case T.OP_1ADD:\n              case T.OP_1SUB:\n              case T.OP_NEGATE:\n              case T.OP_ABS:\n              case T.OP_NOT:\n              case T.OP_0NOTEQUAL:\n                {\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let e = this.stack[this.stack.length - 1],\n                    r = new p().fromScriptNumBuffer(e, t);\n                  switch (i) {\n                    case T.OP_1ADD:\n                      r = r.add(1);\n                      break;\n                    case T.OP_1SUB:\n                      r = r.sub(1);\n                      break;\n                    case T.OP_NEGATE:\n                      r = r.neg();\n                      break;\n                    case T.OP_ABS:\n                      r.lt(0) && (r = r.neg());\n                      break;\n                    case T.OP_NOT:\n                      r = new p(r.eq(0) + 0);\n                      break;\n                    case T.OP_0NOTEQUAL:\n                      r = new p(r.neq(0) + 0);\n                  }\n                  this.stack.pop(), this.stack.push(r.toScriptNumBuffer());\n                }\n                break;\n              case T.OP_ADD:\n              case T.OP_SUB:\n              case T.OP_MUL:\n              case T.OP_DIV:\n              case T.OP_MOD:\n              case T.OP_BOOLAND:\n              case T.OP_BOOLOR:\n              case T.OP_NUMEQUAL:\n              case T.OP_NUMEQUALVERIFY:\n              case T.OP_NUMNOTEQUAL:\n              case T.OP_LESSTHAN:\n              case T.OP_GREATERTHAN:\n              case T.OP_LESSTHANOREQUAL:\n              case T.OP_GREATERTHANOREQUAL:\n              case T.OP_MIN:\n              case T.OP_MAX:\n                {\n                  if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let e = new p().fromScriptNumBuffer(this.stack[this.stack.length - 2], t),\n                    r = new p().fromScriptNumBuffer(this.stack[this.stack.length - 1], t),\n                    s = new p(0);\n                  switch (i) {\n                    case T.OP_ADD:\n                      s = e.add(r);\n                      break;\n                    case T.OP_SUB:\n                      s = e.sub(r);\n                      break;\n                    case T.OP_MUL:\n                      s = e.mul(r);\n                      break;\n                    case T.OP_DIV:\n                      if (0 == r) return this.errStr = \"SCRIPT_ERR_DIV_BY_ZERO\", !1;\n                      s = e.div(r);\n                      break;\n                    case T.OP_MOD:\n                      if (0 == r) return this.errStr = \"SCRIPT_ERR_DIV_BY_ZERO\", !1;\n                      s = e.mod(r);\n                      break;\n                    case T.OP_BOOLAND:\n                      s = new p((e.neq(0) && r.neq(0)) + 0);\n                      break;\n                    case T.OP_BOOLOR:\n                      s = new p((e.neq(0) || r.neq(0)) + 0);\n                      break;\n                    case T.OP_NUMEQUAL:\n                    case T.OP_NUMEQUALVERIFY:\n                      s = new p(e.eq(r) + 0);\n                      break;\n                    case T.OP_NUMNOTEQUAL:\n                      s = new p(e.neq(r) + 0);\n                      break;\n                    case T.OP_LESSTHAN:\n                      s = new p(e.lt(r) + 0);\n                      break;\n                    case T.OP_GREATERTHAN:\n                      s = new p(e.gt(r) + 0);\n                      break;\n                    case T.OP_LESSTHANOREQUAL:\n                      s = new p(e.leq(r) + 0);\n                      break;\n                    case T.OP_GREATERTHANOREQUAL:\n                      s = new p(e.geq(r) + 0);\n                      break;\n                    case T.OP_MIN:\n                      s = e.lt(r) ? e : r;\n                      break;\n                    case T.OP_MAX:\n                      s = e.gt(r) ? e : r;\n                  }\n                  if (this.stack.pop(), this.stack.pop(), this.stack.push(s.toScriptNumBuffer()), i === T.OP_NUMEQUALVERIFY) {\n                    if (!ot.castToBool(this.stack[this.stack.length - 1])) return this.errStr = \"SCRIPT_ERR_NUMEQUALVERIFY\", !1;\n                    this.stack.pop();\n                  }\n                }\n                break;\n              case T.OP_WITHIN:\n                {\n                  if (this.stack.length < 3) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let e = new p().fromScriptNumBuffer(this.stack[this.stack.length - 3], t),\n                    r = new p().fromScriptNumBuffer(this.stack[this.stack.length - 2], t),\n                    i = new p().fromScriptNumBuffer(this.stack[this.stack.length - 1], t),\n                    s = r.leq(e) && e.lt(i);\n                  this.stack.pop(), this.stack.pop(), this.stack.pop(), this.stack.push(s ? ot.true : ot.false);\n                }\n                break;\n              case T.OP_RIPEMD160:\n              case T.OP_SHA1:\n              case T.OP_SHA256:\n              case T.OP_HASH160:\n              case T.OP_HASH256:\n                {\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t,\n                    e = this.stack[this.stack.length - 1];\n                  i === T.OP_RIPEMD160 ? t = P.ripemd160(e) : i === T.OP_SHA1 ? t = P.sha1(e) : i === T.OP_SHA256 ? t = P.sha256(e) : i === T.OP_HASH160 ? t = P.sha256Ripemd160(e) : i === T.OP_HASH256 && (t = P.sha256Sha256(e)), this.stack.pop(), this.stack.push(t);\n                }\n                break;\n              case T.OP_CODESEPARATOR:\n                this.pBeginCodeHash = this.pc;\n                break;\n              case T.OP_CHECKSIG:\n              case T.OP_CHECKSIGVERIFY:\n                {\n                  if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let t,\n                    e = this.stack[this.stack.length - 2],\n                    r = this.stack[this.stack.length - 1],\n                    s = new q().fromObject({\n                      chunks: this.script.chunks.slice(this.pBeginCodeHash)\n                    });\n                  if ((e.length > 0 ? e.readUInt8(e.length - 1) : 0) & j.SIGHASH_FORKID) {\n                    if (!(this.flags & ot.SCRIPT_ENABLE_SIGHASH_FORKID)) return this.errStr = \"SCRIPT_ERR_ILLEGAL_FORKID\", !1;\n                  } else s.findAndDelete(new q().writeBuffer(e));\n                  if (!this.checkSigEncoding(e) || !this.checkPubKeyEncoding(r)) return !1;\n                  try {\n                    let i = new j().fromTxFormat(e),\n                      n = new K().fromBuffer(r, !1);\n                    t = this.tx.verify(i, n, this.nIn, s, Boolean(this.flags & ot.SCRIPT_VERIFY_LOW_S), this.valueBn, this.flags);\n                  } catch (e) {\n                    t = !1;\n                  }\n                  if (this.stack.pop(), this.stack.pop(), this.stack.push(t ? ot.true : ot.false), i === T.OP_CHECKSIGVERIFY) {\n                    if (!t) return this.errStr = \"SCRIPT_ERR_CHECKSIGVERIFY\", !1;\n                    this.stack.pop();\n                  }\n                }\n                break;\n              case T.OP_CHECKMULTISIG:\n              case T.OP_CHECKMULTISIGVERIFY:\n                {\n                  let e = 1;\n                  if (this.stack.length < e) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let r = new p().fromScriptNumBuffer(this.stack[this.stack.length - e], t).toNumber();\n                  if (r < 0 || r > 20) return this.errStr = \"SCRIPT_ERR_PUBKEY_COUNT\", !1;\n                  if (this.nOpCount += r, this.nOpCount > 201) return this.errStr = \"SCRIPT_ERR_OP_COUNT\", !1;\n                  let s = ++e;\n                  if (e += r, this.stack.length < e) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let n = new p().fromScriptNumBuffer(this.stack[this.stack.length - e], t).toNumber();\n                  if (n < 0 || n > r) return this.errStr = \"SCRIPT_ERR_SIG_COUNT\", !1;\n                  let a = ++e;\n                  if (e += n, this.stack.length < e) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  let o = new q().fromObject({\n                    chunks: this.script.chunks.slice(this.pBeginCodeHash)\n                  });\n                  for (let t = 0; t < n; t++) {\n                    let e = this.stack[this.stack.length - a - t];\n                    if ((e.length > 0 ? e.readUInt8(e.length - 1) : 0) & j.SIGHASH_FORKID) {\n                      if (!(this.flags & ot.SCRIPT_ENABLE_SIGHASH_FORKID)) return this.errStr = \"SCRIPT_ERR_ILLEGAL_FORKID\", !1;\n                    } else o.findAndDelete(new q().writeBuffer(e));\n                  }\n                  let h = !0;\n                  for (; h && n > 0;) {\n                    let t,\n                      e = this.stack[this.stack.length - a],\n                      i = this.stack[this.stack.length - s];\n                    if (!this.checkSigEncoding(e) || !this.checkPubKeyEncoding(i)) return !1;\n                    try {\n                      let r = new j().fromTxFormat(e),\n                        s = new K().fromBuffer(i, !1);\n                      t = this.tx.verify(r, s, this.nIn, o, Boolean(this.flags & ot.SCRIPT_VERIFY_LOW_S), this.valueBn, this.flags);\n                    } catch (e) {\n                      t = !1;\n                    }\n                    t && (a++, n--), s++, r--, n > r && (h = !1);\n                  }\n                  for (; e-- > 1;) this.stack.pop();\n                  if (this.stack.length < 1) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                  if (this.flags & ot.SCRIPT_VERIFY_NULLDUMMY && this.stack[this.stack.length - 1].length) return this.errStr = \"SCRIPT_ERR_SIG_NULLDUMMY\", !1;\n                  if (this.stack.pop(), this.stack.push(h ? ot.true : ot.false), i === T.OP_CHECKMULTISIGVERIFY) {\n                    if (!h) return this.errStr = \"SCRIPT_ERR_CHECKMULTISIGVERIFY\", !1;\n                    this.stack.pop();\n                  }\n                }\n                break;\n              case T.OP_CAT:\n                if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                let a = this.stack[this.stack.length - 2],\n                  o = this.stack[this.stack.length - 1];\n                this.stack[this.stack.length - 2] = Buffer.concat([a, o]), this.stack.pop();\n                break;\n              case T.OP_SPLIT:\n                if (this.stack.length < 2) return this.errStr = \"SCRIPT_ERR_INVALID_STACK_OPERATION\", !1;\n                let h = this.stack[this.stack.length - 2],\n                  f = new p().fromScriptNumBuffer(this.stack[this.stack.length - 1], t);\n                if (f.lt(0) || f.gt(h.length)) return this.errStr = \"SCRIPT_ERR_INVALID_SPLIT_RANGE\", !1;\n                let c = h.slice(0, f),\n                  u = h.slice(f);\n                this.stack.pop(), this.stack.pop(), this.stack.push(c), this.stack.push(u);\n                break;\n              default:\n                return this.errStr = \"SCRIPT_ERR_BAD_OPCODE\", !1;\n            }\n            return !0;\n          }\n          verify(t, e, r, i, s, n) {\n            let a = this.results(t, e, r, i, s, n);\n            for (let t of a) if (!t) return !1;\n            return !0;\n          }\n          *results(t, e, r, i, s, n) {\n            let a;\n            this.fromObject({\n              script: t,\n              tx: r,\n              nIn: i,\n              flags: s,\n              valueBn: n\n            }), 0 == (s & ot.SCRIPT_VERIFY_SIGPUSHONLY) || t.isPushOnly() || (this.errStr = this.errStr || \"SCRIPT_ERR_SIG_PUSHONLY\", yield !1), yield* this.eval(), s & ot.SCRIPT_VERIFY_P2SH && (a = this.stack.slice());\n            let o = this.stack;\n            this.initialize(), this.fromObject({\n              script: e,\n              stack: o,\n              tx: r,\n              nIn: i,\n              flags: s,\n              valueBn: n\n            }), yield* this.eval(), 0 === this.stack.length && (this.errStr = this.errStr || \"SCRIPT_ERR_EVAL_FALSE\", yield !1);\n            let h = this.stack[this.stack.length - 1];\n            if (ot.castToBool(h) || (this.errStr = this.errStr || \"SCRIPT_ERR_EVAL_FALSE\", yield !1), s & ot.SCRIPT_VERIFY_P2SH && e.isScriptHashOut()) {\n              t.isPushOnly() || (this.errStr = this.errStr || \"SCRIPT_ERR_SIG_PUSHONLY\", yield !1);\n              let e = o;\n              if (o = a, a = e, 0 === o.length) throw new Error(\"internal error - stack copy empty\");\n              let h = o[o.length - 1],\n                f = new q().fromBuffer(h);\n              o.pop(), this.initialize(), this.fromObject({\n                script: f,\n                stack: o,\n                tx: r,\n                nIn: i,\n                flags: s,\n                valueBn: n\n              }), yield* this.eval(), 0 === o.length && (this.errStr = this.errStr || \"SCRIPT_ERR_EVAL_FALSE\", yield !1), ot.castToBool(o[o.length - 1]) ? yield !0 : (this.errStr = this.errStr || \"SCRIPT_ERR_EVAL_FALSE\", yield !1);\n            }\n            if (0 != (s & ot.SCRIPT_VERIFY_CLEANSTACK)) {\n              if (!(s & ot.SCRIPT_VERIFY_P2SH)) throw new Error(\"cannot use CLEANSTACK without P2SH\");\n              1 !== o.length && (this.errStr = this.errStr || \"SCRIPT_ERR_CLEANSTACK\", yield !1);\n            }\n            yield !0;\n          }\n          getDebugObject() {\n            let t = this.pc - 1;\n            return {\n              errStr: this.errStr,\n              scriptStr: this.script ? this.script.toString() : \"no script found\",\n              pc: t,\n              stack: this.stack.map(t => t.toString(\"hex\")),\n              altStack: this.altStack.map(t => t.toString(\"hex\")),\n              opCodeStr: this.script ? T.fromNumber(this.script.chunks[t].opCodeNum).toString() : \"no script found\"\n            };\n          }\n          getDebugString() {\n            return JSON.stringify(this.getDebugObject(), null, 2);\n          }\n        }\n        ot.true = Buffer.from([1]), ot.false = Buffer.from([]), ot.MAX_SCRIPT_ELEMENT_SIZE = 520, ot.LOCKTIME_THRESHOLD = 5e8, ot.SCRIPT_VERIFY_NONE = 0, ot.SCRIPT_VERIFY_P2SH = 1, ot.SCRIPT_VERIFY_STRICTENC = 2, ot.SCRIPT_VERIFY_DERSIG = 4, ot.SCRIPT_VERIFY_LOW_S = 8, ot.SCRIPT_VERIFY_NULLDUMMY = 16, ot.SCRIPT_VERIFY_SIGPUSHONLY = 32, ot.SCRIPT_VERIFY_MINIMALDATA = 64, ot.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = 128, ot.SCRIPT_VERIFY_CLEANSTACK = 256, ot.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = 512, ot.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = 1024, ot.SCRIPT_ENABLE_SIGHASH_FORKID = 65536, ot.defaultFlags = ot.SCRIPT_VERIFY_P2SH | ot.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n        class ht extends S {\n          constructor(t = new Map()) {\n            super({\n              map: t\n            });\n          }\n          toJSON() {\n            const t = {};\n            return this.map.forEach((e, r) => {\n              t[r] = e.map(t => ({\n                nScriptChunk: t.nScriptChunk,\n                type: t.type,\n                addressStr: t.addressStr,\n                nHashType: t.nHashType,\n                log: t.log\n              }));\n            }), t;\n          }\n          fromJSON(t) {\n            return Object.keys(t).forEach(e => {\n              this.map.set(e, t[e].map(t => ({\n                nScriptChunk: t.nScriptChunk,\n                type: t.type,\n                addressStr: t.addressStr,\n                nHashType: t.nHashType,\n                log: t.log\n              })));\n            }), this;\n          }\n          setOne(t, e, r, i = \"sig\", s, n = j.SIGHASH_ALL | j.SIGHASH_FORKID) {\n            const a = t.toString(\"hex\") + \":\" + e,\n              o = {\n                nScriptChunk: r,\n                type: i,\n                addressStr: s,\n                nHashType: n\n              };\n            return this.map.set(a, [o]), this;\n          }\n          setMany(t, e, r) {\n            const i = t.toString(\"hex\") + \":\" + e;\n            return r = r.map(t => ({\n              type: t.type || \"sig\",\n              nHashType: t.nHashType || j.SIGHASH_ALL | j.SIGHASH_FORKID,\n              ...t\n            })), this.map.set(i, r), this;\n          }\n          addOne(t, e, r, i = \"sig\", s, n = j.SIGHASH_ALL | j.SIGHASH_FORKID) {\n            const a = this.get(t, e) || [];\n            return a.push({\n              nScriptChunk: r,\n              type: i,\n              addressStr: s,\n              nHashType: n\n            }), this.setMany(t, e, a), this;\n          }\n          get(t, e) {\n            const r = t.toString(\"hex\") + \":\" + e;\n            return this.map.get(r) || [];\n          }\n        }\n        class ft extends S {\n          constructor(t = new Map()) {\n            super({\n              map: t\n            });\n          }\n          toJSON() {\n            const t = {};\n            return this.map.forEach((e, r) => {\n              t[r] = e.toHex();\n            }), t;\n          }\n          fromJSON(t) {\n            return Object.keys(t).forEach(e => {\n              this.map.set(e, st.fromHex(t[e]));\n            }), this;\n          }\n          set(t, e, r) {\n            const i = t.toString(\"hex\") + \":\" + e;\n            return this.map.set(i, r), this;\n          }\n          get(t, e) {\n            const r = t.toString(\"hex\") + \":\" + e;\n            return this.map.get(r);\n          }\n          setTx(t) {\n            const e = t.hash().toString(\"hex\");\n            return t.txOuts.forEach((t, r) => {\n              const i = e + \":\" + r;\n              this.map.set(i, t);\n            }), this;\n          }\n        }\n        const ct = x.Default.TxBuilder;\n        class ut extends S {\n          constructor(t = new nt(), e = [], r = [], i = new ft(), s = new ht(), n, a, o, h = ct.feePerKbNum, f = 0, c = 1, u = 1, d = ct.dust, l = !1, p = new et()) {\n            super({\n              tx: t,\n              txIns: e,\n              txOuts: r,\n              uTxOutMap: i,\n              sigOperations: s,\n              changeScript: n,\n              changeAmountBn: a,\n              feeAmountBn: o,\n              feePerKbNum: h,\n              nLockTime: f,\n              versionBytesNum: c,\n              sigsPerInput: u,\n              dust: d,\n              dustChangeToFees: l,\n              hashCache: p\n            });\n          }\n          toJSON() {\n            const t = {};\n            return t.tx = this.tx.toHex(), t.txIns = this.txIns.map(t => t.toHex()), t.txOuts = this.txOuts.map(t => t.toHex()), t.uTxOutMap = this.uTxOutMap.toJSON(), t.sigOperations = this.sigOperations.toJSON(), t.changeScript = this.changeScript ? this.changeScript.toHex() : void 0, t.changeAmountBn = this.changeAmountBn ? this.changeAmountBn.toNumber() : void 0, t.feeAmountBn = this.feeAmountBn ? this.feeAmountBn.toNumber() : void 0, t.feePerKbNum = this.feePerKbNum, t.sigsPerInput = this.sigsPerInput, t.dust = this.dust, t.dustChangeToFees = this.dustChangeToFees, t.hashCache = this.hashCache.toJSON(), t;\n          }\n          fromJSON(t) {\n            return this.tx = new nt().fromHex(t.tx), this.txIns = t.txIns.map(t => it.fromHex(t)), this.txOuts = t.txOuts.map(t => st.fromHex(t)), this.uTxOutMap = new ft().fromJSON(t.uTxOutMap), this.sigOperations = new ht().fromJSON(t.sigOperations), this.changeScript = t.changeScript ? new q().fromHex(t.changeScript) : void 0, this.changeAmountBn = t.changeAmountBn ? new p(t.changeAmountBn) : void 0, this.feeAmountBn = t.feeAmountBn ? new p(t.feeAmountBn) : void 0, this.feePerKbNum = t.feePerKbNum || this.feePerKbNum, this.sigsPerInput = t.sigsPerInput || this.sigsPerInput, this.dust = t.dust || this.dust, this.dustChangeToFees = t.dustChangeToFees || this.dustChangeToFees, this.hashCache = et.fromJSON(t.hashCache), this;\n          }\n          setFeePerKbNum(t) {\n            if (\"number\" != typeof t || t < 0) throw new Error(\"cannot set a fee of zero or less\");\n            return this.feePerKbNum = t, this;\n          }\n          setChangeAddress(t) {\n            return this.changeScript = t.toTxOutScript(), this;\n          }\n          setChangeScript(t) {\n            return this.changeScript = t, this;\n          }\n          setNLocktime(t) {\n            return this.nLockTime = t, this;\n          }\n          setVersion(t) {\n            return this.versionBytesNum = t, this;\n          }\n          setDust(t = ct.dust) {\n            return this.dust = t, this;\n          }\n          sendDustChangeToFees(t = !1) {\n            return this.dustChangeToFees = t, this;\n          }\n          importPartiallySignedTx(t, e = this.uTxOutMap, r = this.sigOperations) {\n            return this.tx = t, this.uTxOutMap = e, this.sigOperations = r, this;\n          }\n          inputFromScript(t, e, r, i, s) {\n            if (!(Buffer.isBuffer(t) && \"number\" == typeof e && r instanceof st && i instanceof q)) throw new Error(\"invalid one of: txHashBuf, txOutNum, txOut, script\");\n            return this.txIns.push(it.fromProperties(t, e, i, s)), this.uTxOutMap.set(t, e, r), this;\n          }\n          addSigOperation(t, e, r, i, s, n) {\n            return this.sigOperations.addOne(t, e, r, i, s, n), this;\n          }\n          inputFromPubKeyHash(t, e, r, i, s, n) {\n            if (!(Buffer.isBuffer(t) && \"number\" == typeof e && r instanceof st)) throw new Error(\"invalid one of: txHashBuf, txOutNum, txOut\");\n            this.txIns.push(new it().fromObject({\n              nSequence: s\n            }).fromPubKeyHashTxOut(t, e, r, i)), this.uTxOutMap.set(t, e, r);\n            const a = z.fromTxOutScript(r.script).toString();\n            return this.addSigOperation(t, e, 0, \"sig\", a, n), this.addSigOperation(t, e, 1, \"pubKey\", a), this;\n          }\n          outputToAddress(t, e) {\n            if (!(e instanceof z && t instanceof p)) throw new Error(\"addr must be an Address, and valueBn must be a Bn\");\n            const r = new q().fromPubKeyHash(e.hashBuf);\n            return this.outputToScript(t, r), this;\n          }\n          outputToScript(t, e) {\n            if (!(e instanceof q && t instanceof p)) throw new Error(\"script must be a Script, and valueBn must be a Bn\");\n            const r = st.fromProperties(t, e);\n            return this.txOuts.push(r), this;\n          }\n          buildOutputs() {\n            let t = new p(0);\n            return this.txOuts.forEach(e => {\n              if (e.valueBn.lt(this.dust) && !e.script.isNonSpendable()) throw new Error(\"cannot create output lesser than dust\");\n              t = t.add(e.valueBn), this.tx.addTxOut(e);\n            }), t;\n          }\n          buildInputs(t, e = 0) {\n            let r = new p(0);\n            for (const i of this.txIns) {\n              const s = this.uTxOutMap.get(i.txHashBuf, i.txOutNum);\n              if (r = r.add(s.valueBn), this.tx.addTxIn(i), r.geq(t)) {\n                if (e <= 0) break;\n                e--;\n              }\n            }\n            if (r.lt(t)) throw new Error(\"not enough funds for outputs: inAmountBn \" + r.toNumber() + \" outAmountBn \" + t.toNumber());\n            return r;\n          }\n          estimateSize() {\n            let t = this.tx.toBuffer().length;\n            return this.tx.txIns.forEach(e => {\n              const {\n                txHashBuf: r,\n                txOutNum: i\n              } = e;\n              this.sigOperations.get(r, i).forEach(r => {\n                const {\n                    nScriptChunk: i,\n                    type: s\n                  } = r,\n                  n = new q([e.script.chunks[i]]).toBuffer().length;\n                if (t -= n, \"sig\" === s) t += 72;else {\n                  if (\"pubKey\" !== r.type) throw new Error(\"unsupported sig operations type\");\n                  t += 35;\n                }\n              });\n            }), t += 1, Math.round(t);\n          }\n          estimateFee(t = new p(0)) {\n            return new p(Math.ceil(this.estimateSize() / 1e3 * this.feePerKbNum)).add(t);\n          }\n          build(t = {\n            useAllInputs: !1\n          }) {\n            let e;\n            if (this.txIns.length <= 0) throw Error(\"tx-builder number of inputs must be greater than 0\");\n            if (!this.changeScript) throw new Error(\"must specify change script to use build method\");\n            for (let r = t.useAllInputs ? this.txIns.length - 1 : 0; r < this.txIns.length; r++) {\n              this.tx = new nt();\n              const t = this.buildOutputs(),\n                i = st.fromProperties(new p(0), this.changeScript);\n              let s;\n              this.tx.addTxOut(i);\n              try {\n                s = this.buildInputs(t, r);\n              } catch (t) {\n                throw t.message.includes(\"not enough funds for outputs\") ? new Error(\"unable to gather enough inputs for outputs and fee\") : t;\n              }\n              if (this.changeAmountBn = s.sub(t), i.valueBn = this.changeAmountBn, e = this.estimateFee(), this.changeAmountBn.geq(e) && this.changeAmountBn.sub(e).gt(this.dust)) break;\n            }\n            if (this.changeAmountBn.geq(e)) {\n              if (this.feeAmountBn = e, this.changeAmountBn = this.changeAmountBn.sub(this.feeAmountBn), this.tx.txOuts[this.tx.txOuts.length - 1].valueBn = this.changeAmountBn, this.changeAmountBn.lt(this.dust)) {\n                if (!this.dustChangeToFees) throw new Error(\"unable to create change amount greater than dust\");\n                this.tx.txOuts.pop(), this.tx.txOutsVi = rt.fromNumber(this.tx.txOutsVi.toNumber() - 1), this.feeAmountBn = this.feeAmountBn.add(this.changeAmountBn), this.changeAmountBn = new p(0);\n              }\n              if (this.tx.nLockTime = this.nLockTime, this.tx.versionBytesNum = this.versionBytesNum, 0 === this.tx.txOuts.length) throw new Error(\"outputs length is zero - unable to create any outputs greater than dust\");\n              return this;\n            }\n            throw new Error(\"unable to gather enough inputs for outputs and fee\");\n          }\n          sort() {\n            return this.tx.sort(), this;\n          }\n          static allSigsPresent(t, e) {\n            let r = 0;\n            for (let t = 1; t < e.chunks.length - 1; t++) e.chunks[t].buf && r++;\n            return r === t;\n          }\n          static removeBlankSigs(t) {\n            t = new q(t.chunks.slice());\n            for (let e = 1; e < t.chunks.length - 1; e++) t.chunks[e].buf || t.chunks.splice(e, 1);\n            return t;\n          }\n          fillSig(t, e, r) {\n            const i = this.tx.txIns[t];\n            return i.script.chunks[e] = new q().writeBuffer(r.toTxFormat()).chunks[0], i.scriptVi = rt.fromNumber(i.script.toBuffer().length), this;\n          }\n          getSig(t, e = j.SIGHASH_ALL | j.SIGHASH_FORKID, r, i, s = nt.SCRIPT_ENABLE_SIGHASH_FORKID) {\n            let n;\n            if (e & j.SIGHASH_FORKID && s & nt.SCRIPT_ENABLE_SIGHASH_FORKID) {\n              const t = this.tx.txIns[r].txHashBuf,\n                e = this.tx.txIns[r].txOutNum,\n                i = this.uTxOutMap.get(t, e);\n              if (!i) throw new Error(\"for SIGHASH_FORKID must provide UTXOs\");\n              n = i.valueBn;\n            }\n            return this.tx.sign(t, e, r, i, n, s, this.hashCache);\n          }\n          asyncGetSig(t, e = j.SIGHASH_ALL | j.SIGHASH_FORKID, r, i, s = nt.SCRIPT_ENABLE_SIGHASH_FORKID) {\n            let n;\n            if (e & j.SIGHASH_FORKID && s & nt.SCRIPT_ENABLE_SIGHASH_FORKID) {\n              const t = this.tx.txIns[r].txHashBuf,\n                e = this.tx.txIns[r].txOutNum,\n                i = this.uTxOutMap.get(t, e);\n              if (!i) throw new Error(\"for SIGHASH_FORKID must provide UTXOs\");\n              n = i.valueBn;\n            }\n            return this.tx.asyncSign(t, e, r, i, n, s, this.hashCache);\n          }\n          signTxIn(t, e, r, i, s = j.SIGHASH_ALL | j.SIGHASH_FORKID, n = nt.SCRIPT_ENABLE_SIGHASH_FORKID) {\n            const a = this.tx.txIns[t],\n              o = a.script;\n            if (void 0 === i && o.isPubKeyHashIn() && (i = 0), void 0 === i) throw new Error(\"cannot sign unknown script type for input \" + t);\n            const h = a.txHashBuf,\n              f = a.txOutNum;\n            r || (r = this.uTxOutMap.get(h, f));\n            const c = r.script,\n              u = this.getSig(e, s, t, c, n, this.hashCache);\n            return this.fillSig(t, i, u), this;\n          }\n          async asyncSignTxIn(t, e, r, i, s = j.SIGHASH_ALL | j.SIGHASH_FORKID, n = nt.SCRIPT_ENABLE_SIGHASH_FORKID) {\n            const a = this.tx.txIns[t],\n              o = a.script;\n            if (void 0 === i && o.isPubKeyHashIn() && (i = 0), void 0 === i) throw new Error(\"cannot sign unknown script type for input \" + t);\n            const h = a.txHashBuf,\n              f = a.txOutNum;\n            r || (r = this.uTxOutMap.get(h, f));\n            const c = r.script,\n              u = await this.asyncGetSig(e, s, t, c, n, this.hashCache);\n            return this.fillSig(t, i, u), this;\n          }\n          signWithKeyPairs(t) {\n            const e = {};\n            for (const r of t) e[z.fromPubKey(r.pubKey).toString()] = r;\n            for (const t in this.tx.txIns) {\n              const r = this.tx.txIns[t],\n                i = this.sigOperations.get(r.txHashBuf, r.txOutNum);\n              for (const s of i) {\n                const {\n                    nScriptChunk: i,\n                    type: n,\n                    addressStr: a,\n                    nHashType: o\n                  } = s,\n                  h = e[a];\n                if (!h) {\n                  s.log = `cannot find keyPair for addressStr ${a}`;\n                  continue;\n                }\n                const f = this.uTxOutMap.get(r.txHashBuf, r.txOutNum);\n                if (\"sig\" === n) this.signTxIn(t, h, f, i, o), s.log = \"successfully inserted signature\";else {\n                  if (\"pubKey\" !== n) {\n                    s.log = `cannot perform operation of type ${n}`;\n                    continue;\n                  }\n                  r.script.chunks[i] = new q().writeBuffer(h.pubKey.toBuffer()).chunks[0], r.setScript(r.script), s.log = \"successfully inserted public key\";\n                }\n              }\n            }\n            return this;\n          }\n        }\n        class dt extends S {\n          constructor(t, e, r, i) {\n            super({\n              tx: t,\n              txOutMap: e,\n              errStr: r,\n              interp: i\n            });\n          }\n          verify(t = ot.SCRIPT_ENABLE_SIGHASH_FORKID) {\n            return !this.checkStr() && !this.verifyStr(t);\n          }\n          async asyncVerify(t) {\n            const e = await this.asyncVerifyStr(t);\n            return !this.checkStr() && !e;\n          }\n          static verify(t, e, r) {\n            return new dt(t, e).verify(r);\n          }\n          static asyncVerify(t, e, r) {\n            return new dt(t, e).asyncVerify(r);\n          }\n          checkStr() {\n            if (0 === this.tx.txIns.length || 0 === this.tx.txInsVi.toNumber()) return this.errStr = \"transaction txIns empty\", this.errStr;\n            if (0 === this.tx.txOuts.length || 0 === this.tx.txOutsVi.toNumber()) return this.errStr = \"transaction txOuts empty\", this.errStr;\n            if (this.tx.toBuffer().length > at.MAX_BLOCK_SIZE) return this.errStr = \"transaction over the maximum block size\", this.errStr;\n            let t = new p(0);\n            for (let e = 0; e < this.tx.txOuts.length; e++) {\n              const r = this.tx.txOuts[e];\n              if (r.valueBn.lt(0)) return this.errStr = \"transaction txOut \" + e + \" negative\", this.errStr;\n              if (r.valueBn.gt(nt.MAX_MONEY)) return this.errStr = \"transaction txOut \" + e + \" greater than MAX_MONEY\", this.errStr;\n              if (t = t.add(r.valueBn), t.gt(nt.MAX_MONEY)) return this.errStr = \"transaction txOut \" + e + \" total output greater than MAX_MONEY\", this.errStr;\n            }\n            const e = {};\n            for (let t = 0; t < this.tx.txIns.length; t++) {\n              const r = this.tx.txIns[t],\n                i = r.txHashBuf.toString(\"hex\") + \":\" + r.txOutNum;\n              if (void 0 !== e[i]) return this.errStr = \"transaction input \" + t + \" duplicate input\", this.errStr;\n              e[i] = !0;\n            }\n            if (this.tx.isCoinbase()) {\n              const t = this.tx.txIns[0].script.toBuffer();\n              if (t.length < 2 || t.length > 100) return this.errStr = \"coinbase trasaction script size invalid\", this.errStr;\n            } else for (let t = 0; t < this.tx.txIns.length; t++) if (this.tx.txIns[t].hasNullInput()) return this.errStr = \"transaction input \" + t + \" has null input\", this.errStr;\n            return !1;\n          }\n          verifyStr(t) {\n            for (let e = 0; e < this.tx.txIns.length; e++) if (!this.verifyNIn(e, t)) return this.errStr = \"input \" + e + \" failed script verify\", this.errStr;\n            return !1;\n          }\n          async asyncVerifyStr(t) {\n            for (let e = 0; e < this.tx.txIns.length; e++) if (!(await this.asyncVerifyNIn(e, t))) return this.errStr = \"input \" + e + \" failed script verify\", this.errStr;\n            return !1;\n          }\n          verifyNIn(t, e) {\n            const r = this.tx.txIns[t],\n              i = r.script,\n              s = this.txOutMap.get(r.txHashBuf, r.txOutNum);\n            if (!s) return console.log(\"output \" + r.txOutNum + \" not found\"), !1;\n            const n = s.script,\n              a = s.valueBn;\n            return this.interp = new ot(), this.interp.verify(i, n, this.tx, t, e, a);\n          }\n          async asyncVerifyNIn(t, e) {\n            const r = this.tx.txIns[t],\n              i = r.script,\n              s = this.txOutMap.get(r.txHashBuf, r.txOutNum);\n            if (!s) return console.log(\"output \" + r.txOutNum + \" not found\"), !1;\n            const n = s.script,\n              a = s.valueBn;\n            this.interp = new ot();\n            const o = await E.asyncObjectMethod(this.interp, \"verify\", [i, n, this.tx, t, e, a]);\n            return JSON.parse(o.resbuf.toString());\n          }\n          getDebugObject() {\n            return {\n              errStr: this.errStr,\n              interpFailure: this.interp ? this.interp.getDebugObject() : void 0\n            };\n          }\n          getDebugString() {\n            return JSON.stringify(this.getDebugObject(), null, 2);\n          }\n        }\n        class lt {}\n        lt.encrypt = function (t, e) {\n          const r = lt.buf2Words(e),\n            i = lt.buf2Words(t),\n            n = new (s())(r).encrypt(i);\n          return lt.words2Buf(n);\n        }, lt.decrypt = function (t, e) {\n          const r = lt.buf2Words(t),\n            i = lt.buf2Words(e),\n            n = new (s())(i).decrypt(r);\n          return lt.words2Buf(n);\n        }, lt.buf2Words = function (t) {\n          if (t.length % 4) throw new Error(\"buf length must be a multiple of 4\");\n          const e = [];\n          for (let r = 0; r < t.length / 4; r++) e.push(t.readUInt32BE(4 * r));\n          return e;\n        }, lt.words2Buf = function (t) {\n          const e = Buffer.alloc(4 * t.length);\n          for (let r = 0; r < t.length; r++) e.writeUInt32BE(t[r], 4 * r);\n          return e;\n        };\n        class pt {}\n        pt.buf2BlocksBuf = function (t, e) {\n          const r = e / 8,\n            i = [];\n          for (let s = 0; s <= t.length / r; s++) {\n            let n = t.slice(s * r, s * r + r);\n            n.length < e && (n = pt.pkcs7Pad(n, e)), i.push(n);\n          }\n          return i;\n        }, pt.blockBufs2Buf = function (t) {\n          let e = t[t.length - 1];\n          return e = pt.pkcs7Unpad(e), t[t.length - 1] = e, Buffer.concat(t);\n        }, pt.encrypt = function (t, e, r, i) {\n          const s = 8 * e.length,\n            n = pt.buf2BlocksBuf(t, s),\n            a = pt.encryptBlocks(n, e, r, i);\n          return Buffer.concat(a);\n        }, pt.decrypt = function (t, e, r, i) {\n          const s = e.length,\n            n = [];\n          for (let e = 0; e < t.length / s; e++) n.push(t.slice(e * s, e * s + s));\n          const a = pt.decryptBlocks(n, e, r, i);\n          return pt.blockBufs2Buf(a);\n        }, pt.encryptBlock = function (t, e, r, i) {\n          const s = pt.xorBufs(t, e);\n          return r.encrypt(s, i);\n        }, pt.decryptBlock = function (t, e, r, i) {\n          const s = r.decrypt(t, i);\n          return pt.xorBufs(s, e);\n        }, pt.encryptBlocks = function (t, e, r, i) {\n          const s = [];\n          for (let n = 0; n < t.length; n++) {\n            const a = t[n],\n              o = pt.encryptBlock(a, e, r, i);\n            s.push(o), e = o;\n          }\n          return s;\n        }, pt.decryptBlocks = function (t, e, r, i) {\n          const s = [];\n          for (let n = 0; n < t.length; n++) {\n            const a = t[n],\n              o = pt.decryptBlock(a, e, r, i);\n            s.push(o), e = a;\n          }\n          return s;\n        }, pt.pkcs7Pad = function (t, e) {\n          const r = e / 8 - t.length,\n            i = Buffer.alloc(r);\n          return i.fill(r), Buffer.concat([t, i]);\n        }, pt.pkcs7Unpad = function (t) {\n          const e = t[t.length - 1],\n            r = t.slice(t.length - e, t.length),\n            i = Buffer.alloc(e);\n          if (i.fill(e), !B(r, i)) throw new Error(\"invalid padding\");\n          return t.slice(0, t.length - e);\n        }, pt.xorBufs = function (t, e) {\n          if (t.length !== e.length) throw new Error(\"bufs must have the same length\");\n          const r = Buffer.alloc(t.length);\n          for (let i = 0; i < t.length; i++) r[i] = t[i] ^ e[i];\n          return r;\n        };\n        class bt {}\n        bt.encrypt = function (t, e, r, i = !0) {\n          r = r || D.getRandomBuffer(16);\n          const s = pt.encrypt(t, r, lt, e);\n          return i ? Buffer.concat([r, s]) : s;\n        }, bt.decrypt = function (t, e, r = !1) {\n          if (r) {\n            const i = t;\n            return pt.decrypt(i, r, lt, e);\n          }\n          {\n            const r = t.slice(0, 16),\n              i = t.slice(16);\n            return pt.decrypt(i, r, lt, e);\n          }\n        };\n        class mt {}\n        mt.encrypt = function (t, e, r) {\n          const i = bt.encrypt(t, e, r),\n            s = P.sha256Hmac(i, e);\n          return Buffer.concat([s, i]);\n        }, mt.asyncEncrypt = async function (t, e, r) {\n          r || (r = D.getRandomBuffer(16));\n          const i = [t, e, r];\n          return (await E.asyncClassMethod(mt, \"encrypt\", i)).resbuf;\n        }, mt.decrypt = function (t, e) {\n          if (t.length < 64) throw new Error(\"The encrypted data must be at least 256+128+128 bits, which is the length of the Hmac plus the iv plus the smallest encrypted data size\");\n          const r = t.slice(0, 32);\n          t = t.slice(32, t.length);\n          const i = P.sha256Hmac(t, e);\n          if (!B(r, i)) throw new Error(\"Message authentication failed - Hmacs are not equivalent\");\n          return bt.decrypt(t, e);\n        }, mt.asyncDecrypt = async function (t, e) {\n          const r = [t, e];\n          return (await E.asyncClassMethod(mt, \"decrypt\", r)).resbuf;\n        };\n        class gt {}\n        gt.ivkEkM = function (t, e) {\n          const r = t.bn,\n            i = e.point.mul(r),\n            s = new K(i).toBuffer(),\n            n = P.sha512(s);\n          return {\n            iv: n.slice(0, 16),\n            kE: n.slice(16, 32),\n            kM: n.slice(32, 64)\n          };\n        }, gt.electrumEncrypt = function (t, e, r, i = !1) {\n          if (!Buffer.isBuffer(t)) throw new Error(\"messageBuf must be a buffer\");\n          let s;\n          null === r && (r = Q.fromRandom()), i || (s = r.pubKey.toDer(!0));\n          const {\n              iv: n,\n              kE: a,\n              kM: o\n            } = gt.ivkEkM(r.privKey, e),\n            h = bt.encrypt(t, a, n, !1),\n            f = Buffer.from(\"BIE1\");\n          let c;\n          c = s ? Buffer.concat([f, s, h]) : Buffer.concat([f, h]);\n          const u = P.sha256Hmac(c, o);\n          return Buffer.concat([c, u]);\n        }, gt.electrumDecrypt = function (t, e, r = null) {\n          if (!Buffer.isBuffer(t)) throw new Error(\"encBuf must be a buffer\");\n          if (!t.slice(0, 4).equals(Buffer.from(\"BIE1\"))) throw new Error(\"Invalid Magic\");\n          let i = 4;\n          if (null === r) {\n            const e = t.slice(4, 37);\n            r = K.fromDer(e), i = 37;\n          }\n          const {\n              iv: s,\n              kE: n,\n              kM: a\n            } = gt.ivkEkM(e, r),\n            o = t.slice(i, t.length - 32),\n            h = t.slice(t.length - 32, t.length),\n            f = P.sha256Hmac(t.slice(0, t.length - 32), a);\n          if (!h.equals(f)) throw new Error(\"Invalid checksum\");\n          return bt.decrypt(o, n, s);\n        }, gt.bitcoreEncrypt = function (t, e, r, i) {\n          r || (r = Q.fromRandom());\n          const s = r.privKey.bn,\n            n = r.pubKey.toDer(!0),\n            a = e.point.mul(s).getX().toBuffer({\n              size: 32\n            }),\n            o = P.sha512(a),\n            h = o.slice(0, 32),\n            f = o.slice(32, 64),\n            c = bt.encrypt(t, h, i),\n            u = P.sha256Hmac(c, f);\n          return Buffer.concat([n, c, u]);\n        }, gt.asyncBitcoreEncrypt = async function (t, e, r, i) {\n          r || (r = await Q.asyncFromRandom()), i || (i = D.getRandomBuffer(16));\n          const s = [t, e, r, i];\n          return (await E.asyncClassMethod(gt, \"bitcoreEncrypt\", s)).resbuf;\n        }, gt.bitcoreDecrypt = function (t, e) {\n          const r = e.bn,\n            i = K.fromDer(t.slice(0, 33)).point.mul(r);\n          if (i.eq(new L())) throw new Error(\"P equals 0\");\n          const s = i.getX().toBuffer({\n              size: 32\n            }),\n            n = P.sha512(s),\n            a = n.slice(0, 32),\n            o = n.slice(32, 64),\n            h = t.slice(33, t.length - 32),\n            f = t.slice(t.length - 32, t.length),\n            c = P.sha256Hmac(h, o);\n          if (!B(f, c)) throw new Error(\"Invalid checksum\");\n          return bt.decrypt(h, a);\n        }, gt.asyncBitcoreDecrypt = async function (t, e) {\n          const r = [t, e];\n          return (await E.asyncClassMethod(gt, \"bitcoreDecrypt\", r)).resbuf;\n        };\n        const yt = {\n            aes: s(),\n            bnjs: a(),\n            bs58: h(),\n            elliptic: c(),\n            hashjs: d(),\n            pbkdf2: l,\n            Buffer\n          },\n          wt = \"2.0.10\";\n      },\n      297: t => {\n        function e(t) {\n          var e, r, i;\n          this._tables[0][0][0] || this._precompute();\n          var s = this._tables[0][4],\n            n = this._tables[1],\n            a = t.length,\n            o = 1;\n          if (4 !== a && 6 !== a && 8 !== a) throw new Error(\"invalid aes key size\");\n          this._key = [r = t.slice(0), i = []];\n          for (var h = a; h < 4 * a + 28; h++) e = r[h - 1], (h % a == 0 || 8 === a && h % a == 4) && (e = s[e >>> 24] << 24 ^ s[e >> 16 & 255] << 16 ^ s[e >> 8 & 255] << 8 ^ s[255 & e], h % a == 0 && (e = e << 8 ^ e >>> 24 ^ o << 24, o = o << 1 ^ 283 * (o >> 7))), r[h] = r[h - a] ^ e;\n          for (var f = 0; h; f++, h--) e = r[3 & f ? h : h - 4], i[f] = h <= 4 || f < 4 ? e : n[0][s[e >>> 24]] ^ n[1][s[e >> 16 & 255]] ^ n[2][s[e >> 8 & 255]] ^ n[3][s[255 & e]];\n        }\n        t.exports = e, e.prototype = {\n          encrypt: function (t) {\n            return this._crypt(t, 0);\n          },\n          decrypt: function (t) {\n            return this._crypt(t, 1);\n          },\n          _tables: [[new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)]],\n          _precompute: function () {\n            var t,\n              e,\n              r,\n              i,\n              s,\n              n,\n              a,\n              o,\n              h = this._tables[0],\n              f = this._tables[1],\n              c = h[4],\n              u = f[4],\n              d = new Uint8Array(256),\n              l = new Uint8Array(256);\n            for (t = 0; t < 256; t++) l[(d[t] = t << 1 ^ 283 * (t >> 7)) ^ t] = t;\n            for (e = r = 0; !c[e]; e ^= i || 1, r = l[r] || 1) for (n = (n = r ^ r << 1 ^ r << 2 ^ r << 3 ^ r << 4) >> 8 ^ 255 & n ^ 99, c[e] = n, u[n] = e, o = 16843009 * d[s = d[i = d[e]]] ^ 65537 * s ^ 257 * i ^ 16843008 * e, a = 257 * d[n] ^ 16843008 * n, t = 0; t < 4; t++) h[t][e] = a = a << 24 ^ a >>> 8, f[t][n] = o = o << 24 ^ o >>> 8;\n          },\n          _crypt: function (t, e) {\n            if (4 !== t.length) throw new Error(\"invalid aes block size\");\n            var r,\n              i,\n              s,\n              n,\n              a = this._key[e],\n              o = t[0] ^ a[0],\n              h = t[e ? 3 : 1] ^ a[1],\n              f = t[2] ^ a[2],\n              c = t[e ? 1 : 3] ^ a[3],\n              u = a.length / 4 - 2,\n              d = 4,\n              l = new Uint32Array(4),\n              p = this._tables[e],\n              b = p[0],\n              m = p[1],\n              g = p[2],\n              y = p[3],\n              w = p[4];\n            for (n = 0; n < u; n++) r = b[o >>> 24] ^ m[h >> 16 & 255] ^ g[f >> 8 & 255] ^ y[255 & c] ^ a[d], i = b[h >>> 24] ^ m[f >> 16 & 255] ^ g[c >> 8 & 255] ^ y[255 & o] ^ a[d + 1], s = b[f >>> 24] ^ m[c >> 16 & 255] ^ g[o >> 8 & 255] ^ y[255 & h] ^ a[d + 2], c = b[c >>> 24] ^ m[o >> 16 & 255] ^ g[h >> 8 & 255] ^ y[255 & f] ^ a[d + 3], d += 4, o = r, h = i, f = s;\n            for (n = 0; n < 4; n++) l[e ? 3 & -n : n] = w[o >>> 24] << 24 ^ w[h >> 16 & 255] << 16 ^ w[f >> 8 & 255] << 8 ^ w[255 & c] ^ a[d++], r = o, o = h, h = f, f = c, c = r;\n            return l;\n          }\n        };\n      },\n      162: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(509).Buffer;\n        t.exports = function (t) {\n          if (t.length >= 255) throw new TypeError(\"Alphabet too long\");\n          for (var e = new Uint8Array(256), r = 0; r < e.length; r++) e[r] = 255;\n          for (var s = 0; s < t.length; s++) {\n            var n = t.charAt(s),\n              a = n.charCodeAt(0);\n            if (255 !== e[a]) throw new TypeError(n + \" is ambiguous\");\n            e[a] = s;\n          }\n          var o = t.length,\n            h = t.charAt(0),\n            f = Math.log(o) / Math.log(256),\n            c = Math.log(256) / Math.log(o);\n          function u(t) {\n            if (\"string\" != typeof t) throw new TypeError(\"Expected String\");\n            if (0 === t.length) return i.alloc(0);\n            var r = 0;\n            if (\" \" !== t[r]) {\n              for (var s = 0, n = 0; t[r] === h;) s++, r++;\n              for (var a = (t.length - r) * f + 1 >>> 0, c = new Uint8Array(a); t[r];) {\n                var u = e[t.charCodeAt(r)];\n                if (255 === u) return;\n                for (var d = 0, l = a - 1; (0 !== u || d < n) && -1 !== l; l--, d++) u += o * c[l] >>> 0, c[l] = u % 256 >>> 0, u = u / 256 >>> 0;\n                if (0 !== u) throw new Error(\"Non-zero carry\");\n                n = d, r++;\n              }\n              if (\" \" !== t[r]) {\n                for (var p = a - n; p !== a && 0 === c[p];) p++;\n                var b = i.allocUnsafe(s + (a - p));\n                b.fill(0, 0, s);\n                for (var m = s; p !== a;) b[m++] = c[p++];\n                return b;\n              }\n            }\n          }\n          return {\n            encode: function (e) {\n              if ((Array.isArray(e) || e instanceof Uint8Array) && (e = i.from(e)), !i.isBuffer(e)) throw new TypeError(\"Expected Buffer\");\n              if (0 === e.length) return \"\";\n              for (var r = 0, s = 0, n = 0, a = e.length; n !== a && 0 === e[n];) n++, r++;\n              for (var f = (a - n) * c + 1 >>> 0, u = new Uint8Array(f); n !== a;) {\n                for (var d = e[n], l = 0, p = f - 1; (0 !== d || l < s) && -1 !== p; p--, l++) d += 256 * u[p] >>> 0, u[p] = d % o >>> 0, d = d / o >>> 0;\n                if (0 !== d) throw new Error(\"Non-zero carry\");\n                s = l, n++;\n              }\n              for (var b = f - s; b !== f && 0 === u[b];) b++;\n              for (var m = h.repeat(r); b < f; ++b) m += t.charAt(u[b]);\n              return m;\n            },\n            decodeUnsafe: u,\n            decode: function (t) {\n              var e = u(t);\n              if (e) return e;\n              throw new Error(\"Non-base\" + o + \" character\");\n            }\n          };\n        };\n      },\n      666: (t, e, r) => {\n        \"use strict\";\n\n        var i = e;\n        i.version = r(60).i8, i.utils = r(359), i.rand = r(931), i.curve = r(104), i.curves = r(626), i.ec = r(630);\n      },\n      15: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(550),\n          s = r(359),\n          n = s.getNAF,\n          a = s.getJSF,\n          o = s.assert;\n        function h(t, e) {\n          this.type = t, this.p = new i(e.p, 16), this.red = e.prime ? i.red(e.prime) : i.mont(this.p), this.zero = new i(0).toRed(this.red), this.one = new i(1).toRed(this.red), this.two = new i(2).toRed(this.red), this.n = e.n && new i(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;\n          var r = this.n && this.p.div(this.n);\n          !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));\n        }\n        function f(t, e) {\n          this.curve = t, this.type = e, this.precomputed = null;\n        }\n        t.exports = h, h.prototype.point = function () {\n          throw new Error(\"Not implemented\");\n        }, h.prototype.validate = function () {\n          throw new Error(\"Not implemented\");\n        }, h.prototype._fixedNafMul = function (t, e) {\n          o(t.precomputed);\n          var r = t._getDoubles(),\n            i = n(e, 1, this._bitLength),\n            s = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);\n          s /= 3;\n          for (var a = [], h = 0; h < i.length; h += r.step) {\n            var f = 0;\n            for (e = h + r.step - 1; e >= h; e--) f = (f << 1) + i[e];\n            a.push(f);\n          }\n          for (var c = this.jpoint(null, null, null), u = this.jpoint(null, null, null), d = s; d > 0; d--) {\n            for (h = 0; h < a.length; h++) (f = a[h]) === d ? u = u.mixedAdd(r.points[h]) : f === -d && (u = u.mixedAdd(r.points[h].neg()));\n            c = c.add(u);\n          }\n          return c.toP();\n        }, h.prototype._wnafMul = function (t, e) {\n          var r = 4,\n            i = t._getNAFPoints(r);\n          r = i.wnd;\n          for (var s = i.points, a = n(e, r, this._bitLength), h = this.jpoint(null, null, null), f = a.length - 1; f >= 0; f--) {\n            for (e = 0; f >= 0 && 0 === a[f]; f--) e++;\n            if (f >= 0 && e++, h = h.dblp(e), f < 0) break;\n            var c = a[f];\n            o(0 !== c), h = \"affine\" === t.type ? c > 0 ? h.mixedAdd(s[c - 1 >> 1]) : h.mixedAdd(s[-c - 1 >> 1].neg()) : c > 0 ? h.add(s[c - 1 >> 1]) : h.add(s[-c - 1 >> 1].neg());\n          }\n          return \"affine\" === t.type ? h.toP() : h;\n        }, h.prototype._wnafMulAdd = function (t, e, r, i, s) {\n          for (var o = this._wnafT1, h = this._wnafT2, f = this._wnafT3, c = 0, u = 0; u < i; u++) {\n            var d = (O = e[u])._getNAFPoints(t);\n            o[u] = d.wnd, h[u] = d.points;\n          }\n          for (u = i - 1; u >= 1; u -= 2) {\n            var l = u - 1,\n              p = u;\n            if (1 === o[l] && 1 === o[p]) {\n              var b = [e[l], null, null, e[p]];\n              0 === e[l].y.cmp(e[p].y) ? (b[1] = e[l].add(e[p]), b[2] = e[l].toJ().mixedAdd(e[p].neg())) : 0 === e[l].y.cmp(e[p].y.redNeg()) ? (b[1] = e[l].toJ().mixedAdd(e[p]), b[2] = e[l].add(e[p].neg())) : (b[1] = e[l].toJ().mixedAdd(e[p]), b[2] = e[l].toJ().mixedAdd(e[p].neg()));\n              var m = [-3, -1, -5, -7, 0, 7, 5, 1, 3],\n                g = a(r[l], r[p]);\n              c = Math.max(g[0].length, c), f[l] = new Array(c), f[p] = new Array(c);\n              for (var y = 0; y < c; y++) {\n                var w = 0 | g[0][y],\n                  v = 0 | g[1][y];\n                f[l][y] = m[3 * (w + 1) + (v + 1)], f[p][y] = 0, h[l] = b;\n              }\n            } else f[l] = n(r[l], o[l], this._bitLength), f[p] = n(r[p], o[p], this._bitLength), c = Math.max(f[l].length, c), c = Math.max(f[p].length, c);\n          }\n          var S = this.jpoint(null, null, null),\n            _ = this._wnafT4;\n          for (u = c; u >= 0; u--) {\n            for (var B = 0; u >= 0;) {\n              var I = !0;\n              for (y = 0; y < i; y++) _[y] = 0 | f[y][u], 0 !== _[y] && (I = !1);\n              if (!I) break;\n              B++, u--;\n            }\n            if (u >= 0 && B++, S = S.dblp(B), u < 0) break;\n            for (y = 0; y < i; y++) {\n              var O,\n                E = _[y];\n              0 !== E && (E > 0 ? O = h[y][E - 1 >> 1] : E < 0 && (O = h[y][-E - 1 >> 1].neg()), S = \"affine\" === O.type ? S.mixedAdd(O) : S.add(O));\n            }\n          }\n          for (u = 0; u < i; u++) h[u] = null;\n          return s ? S : S.toP();\n        }, h.BasePoint = f, f.prototype.eq = function () {\n          throw new Error(\"Not implemented\");\n        }, f.prototype.validate = function () {\n          return this.curve.validate(this);\n        }, h.prototype.decodePoint = function (t, e) {\n          t = s.toArray(t, e);\n          var r = this.p.byteLength();\n          if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * r) return 6 === t[0] ? o(t[t.length - 1] % 2 == 0) : 7 === t[0] && o(t[t.length - 1] % 2 == 1), this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));\n          if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);\n          throw new Error(\"Unknown point format\");\n        }, f.prototype.encodeCompressed = function (t) {\n          return this.encode(t, !0);\n        }, f.prototype._encode = function (t) {\n          var e = this.curve.p.byteLength(),\n            r = this.getX().toArray(\"be\", e);\n          return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray(\"be\", e));\n        }, f.prototype.encode = function (t, e) {\n          return s.encode(this._encode(e), t);\n        }, f.prototype.precompute = function (t) {\n          if (this.precomputed) return this;\n          var e = {\n            doubles: null,\n            naf: null,\n            beta: null\n          };\n          return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this;\n        }, f.prototype._hasDoubles = function (t) {\n          if (!this.precomputed) return !1;\n          var e = this.precomputed.doubles;\n          return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step);\n        }, f.prototype._getDoubles = function (t, e) {\n          if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n          for (var r = [this], i = this, s = 0; s < e; s += t) {\n            for (var n = 0; n < t; n++) i = i.dbl();\n            r.push(i);\n          }\n          return {\n            step: t,\n            points: r\n          };\n        }, f.prototype._getNAFPoints = function (t) {\n          if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n          for (var e = [this], r = (1 << t) - 1, i = 1 === r ? null : this.dbl(), s = 1; s < r; s++) e[s] = e[s - 1].add(i);\n          return {\n            wnd: t,\n            points: e\n          };\n        }, f.prototype._getBeta = function () {\n          return null;\n        }, f.prototype.dblp = function (t) {\n          for (var e = this, r = 0; r < t; r++) e = e.dbl();\n          return e;\n        };\n      },\n      104: (t, e, r) => {\n        \"use strict\";\n\n        var i = e;\n        i.base = r(15), i.short = r(505);\n      },\n      505: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(359),\n          s = r(550),\n          n = r(378),\n          a = r(15),\n          o = i.assert;\n        function h(t) {\n          a.call(this, \"short\", t), this.a = new s(t.a, 16).toRed(this.red), this.b = new s(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);\n        }\n        function f(t, e, r, i) {\n          a.BasePoint.call(this, t, \"affine\"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new s(e, 16), this.y = new s(r, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);\n        }\n        function c(t, e, r, i) {\n          a.BasePoint.call(this, t, \"jacobian\"), null === e && null === r && null === i ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new s(0)) : (this.x = new s(e, 16), this.y = new s(r, 16), this.z = new s(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;\n        }\n        n(h, a), t.exports = h, h.prototype._getEndomorphism = function (t) {\n          if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {\n            var e, r;\n            if (t.beta) e = new s(t.beta, 16).toRed(this.red);else {\n              var i = this._getEndoRoots(this.p);\n              e = (e = i[0].cmp(i[1]) < 0 ? i[0] : i[1]).toRed(this.red);\n            }\n            if (t.lambda) r = new s(t.lambda, 16);else {\n              var n = this._getEndoRoots(this.n);\n              0 === this.g.mul(n[0]).x.cmp(this.g.x.redMul(e)) ? r = n[0] : (r = n[1], o(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))));\n            }\n            return {\n              beta: e,\n              lambda: r,\n              basis: t.basis ? t.basis.map(function (t) {\n                return {\n                  a: new s(t.a, 16),\n                  b: new s(t.b, 16)\n                };\n              }) : this._getEndoBasis(r)\n            };\n          }\n        }, h.prototype._getEndoRoots = function (t) {\n          var e = t === this.p ? this.red : s.mont(t),\n            r = new s(2).toRed(e).redInvm(),\n            i = r.redNeg(),\n            n = new s(3).toRed(e).redNeg().redSqrt().redMul(r);\n          return [i.redAdd(n).fromRed(), i.redSub(n).fromRed()];\n        }, h.prototype._getEndoBasis = function (t) {\n          for (var e, r, i, n, a, o, h, f, c, u = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), d = t, l = this.n.clone(), p = new s(1), b = new s(0), m = new s(0), g = new s(1), y = 0; 0 !== d.cmpn(0);) {\n            var w = l.div(d);\n            f = l.sub(w.mul(d)), c = m.sub(w.mul(p));\n            var v = g.sub(w.mul(b));\n            if (!i && f.cmp(u) < 0) e = h.neg(), r = p, i = f.neg(), n = c;else if (i && 2 == ++y) break;\n            h = f, l = d, d = f, m = p, p = c, g = b, b = v;\n          }\n          a = f.neg(), o = c;\n          var S = i.sqr().add(n.sqr());\n          return a.sqr().add(o.sqr()).cmp(S) >= 0 && (a = e, o = r), i.negative && (i = i.neg(), n = n.neg()), a.negative && (a = a.neg(), o = o.neg()), [{\n            a: i,\n            b: n\n          }, {\n            a,\n            b: o\n          }];\n        }, h.prototype._endoSplit = function (t) {\n          var e = this.endo.basis,\n            r = e[0],\n            i = e[1],\n            s = i.b.mul(t).divRound(this.n),\n            n = r.b.neg().mul(t).divRound(this.n),\n            a = s.mul(r.a),\n            o = n.mul(i.a),\n            h = s.mul(r.b),\n            f = n.mul(i.b);\n          return {\n            k1: t.sub(a).sub(o),\n            k2: h.add(f).neg()\n          };\n        }, h.prototype.pointFromX = function (t, e) {\n          (t = new s(t, 16)).red || (t = t.toRed(this.red));\n          var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),\n            i = r.redSqrt();\n          if (0 !== i.redSqr().redSub(r).cmp(this.zero)) throw new Error(\"invalid point\");\n          var n = i.fromRed().isOdd();\n          return (e && !n || !e && n) && (i = i.redNeg()), this.point(t, i);\n        }, h.prototype.validate = function (t) {\n          if (t.inf) return !0;\n          var e = t.x,\n            r = t.y,\n            i = this.a.redMul(e),\n            s = e.redSqr().redMul(e).redIAdd(i).redIAdd(this.b);\n          return 0 === r.redSqr().redISub(s).cmpn(0);\n        }, h.prototype._endoWnafMulAdd = function (t, e, r) {\n          for (var i = this._endoWnafT1, s = this._endoWnafT2, n = 0; n < t.length; n++) {\n            var a = this._endoSplit(e[n]),\n              o = t[n],\n              h = o._getBeta();\n            a.k1.negative && (a.k1.ineg(), o = o.neg(!0)), a.k2.negative && (a.k2.ineg(), h = h.neg(!0)), i[2 * n] = o, i[2 * n + 1] = h, s[2 * n] = a.k1, s[2 * n + 1] = a.k2;\n          }\n          for (var f = this._wnafMulAdd(1, i, s, 2 * n, r), c = 0; c < 2 * n; c++) i[c] = null, s[c] = null;\n          return f;\n        }, n(f, a.BasePoint), h.prototype.point = function (t, e, r) {\n          return new f(this, t, e, r);\n        }, h.prototype.pointFromJSON = function (t, e) {\n          return f.fromJSON(this, t, e);\n        }, f.prototype._getBeta = function () {\n          if (this.curve.endo) {\n            var t = this.precomputed;\n            if (t && t.beta) return t.beta;\n            var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n            if (t) {\n              var r = this.curve,\n                i = function (t) {\n                  return r.point(t.x.redMul(r.endo.beta), t.y);\n                };\n              t.beta = e, e.precomputed = {\n                beta: null,\n                naf: t.naf && {\n                  wnd: t.naf.wnd,\n                  points: t.naf.points.map(i)\n                },\n                doubles: t.doubles && {\n                  step: t.doubles.step,\n                  points: t.doubles.points.map(i)\n                }\n              };\n            }\n            return e;\n          }\n        }, f.prototype.toJSON = function () {\n          return this.precomputed ? [this.x, this.y, this.precomputed && {\n            doubles: this.precomputed.doubles && {\n              step: this.precomputed.doubles.step,\n              points: this.precomputed.doubles.points.slice(1)\n            },\n            naf: this.precomputed.naf && {\n              wnd: this.precomputed.naf.wnd,\n              points: this.precomputed.naf.points.slice(1)\n            }\n          }] : [this.x, this.y];\n        }, f.fromJSON = function (t, e, r) {\n          \"string\" == typeof e && (e = JSON.parse(e));\n          var i = t.point(e[0], e[1], r);\n          if (!e[2]) return i;\n          function s(e) {\n            return t.point(e[0], e[1], r);\n          }\n          var n = e[2];\n          return i.precomputed = {\n            beta: null,\n            doubles: n.doubles && {\n              step: n.doubles.step,\n              points: [i].concat(n.doubles.points.map(s))\n            },\n            naf: n.naf && {\n              wnd: n.naf.wnd,\n              points: [i].concat(n.naf.points.map(s))\n            }\n          }, i;\n        }, f.prototype.inspect = function () {\n          return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n        }, f.prototype.isInfinity = function () {\n          return this.inf;\n        }, f.prototype.add = function (t) {\n          if (this.inf) return t;\n          if (t.inf) return this;\n          if (this.eq(t)) return this.dbl();\n          if (this.neg().eq(t)) return this.curve.point(null, null);\n          if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);\n          var e = this.y.redSub(t.y);\n          0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));\n          var r = e.redSqr().redISub(this.x).redISub(t.x),\n            i = e.redMul(this.x.redSub(r)).redISub(this.y);\n          return this.curve.point(r, i);\n        }, f.prototype.dbl = function () {\n          if (this.inf) return this;\n          var t = this.y.redAdd(this.y);\n          if (0 === t.cmpn(0)) return this.curve.point(null, null);\n          var e = this.curve.a,\n            r = this.x.redSqr(),\n            i = t.redInvm(),\n            s = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(i),\n            n = s.redSqr().redISub(this.x.redAdd(this.x)),\n            a = s.redMul(this.x.redSub(n)).redISub(this.y);\n          return this.curve.point(n, a);\n        }, f.prototype.getX = function () {\n          return this.x.fromRed();\n        }, f.prototype.getY = function () {\n          return this.y.fromRed();\n        }, f.prototype.mul = function (t) {\n          return t = new s(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);\n        }, f.prototype.mulAdd = function (t, e, r) {\n          var i = [this, e],\n            s = [t, r];\n          return this.curve.endo ? this.curve._endoWnafMulAdd(i, s) : this.curve._wnafMulAdd(1, i, s, 2);\n        }, f.prototype.jmulAdd = function (t, e, r) {\n          var i = [this, e],\n            s = [t, r];\n          return this.curve.endo ? this.curve._endoWnafMulAdd(i, s, !0) : this.curve._wnafMulAdd(1, i, s, 2, !0);\n        }, f.prototype.eq = function (t) {\n          return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y));\n        }, f.prototype.neg = function (t) {\n          if (this.inf) return this;\n          var e = this.curve.point(this.x, this.y.redNeg());\n          if (t && this.precomputed) {\n            var r = this.precomputed,\n              i = function (t) {\n                return t.neg();\n              };\n            e.precomputed = {\n              naf: r.naf && {\n                wnd: r.naf.wnd,\n                points: r.naf.points.map(i)\n              },\n              doubles: r.doubles && {\n                step: r.doubles.step,\n                points: r.doubles.points.map(i)\n              }\n            };\n          }\n          return e;\n        }, f.prototype.toJ = function () {\n          return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);\n        }, n(c, a.BasePoint), h.prototype.jpoint = function (t, e, r) {\n          return new c(this, t, e, r);\n        }, c.prototype.toP = function () {\n          if (this.isInfinity()) return this.curve.point(null, null);\n          var t = this.z.redInvm(),\n            e = t.redSqr(),\n            r = this.x.redMul(e),\n            i = this.y.redMul(e).redMul(t);\n          return this.curve.point(r, i);\n        }, c.prototype.neg = function () {\n          return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n        }, c.prototype.add = function (t) {\n          if (this.isInfinity()) return t;\n          if (t.isInfinity()) return this;\n          var e = t.z.redSqr(),\n            r = this.z.redSqr(),\n            i = this.x.redMul(e),\n            s = t.x.redMul(r),\n            n = this.y.redMul(e.redMul(t.z)),\n            a = t.y.redMul(r.redMul(this.z)),\n            o = i.redSub(s),\n            h = n.redSub(a);\n          if (0 === o.cmpn(0)) return 0 !== h.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();\n          var f = o.redSqr(),\n            c = f.redMul(o),\n            u = i.redMul(f),\n            d = h.redSqr().redIAdd(c).redISub(u).redISub(u),\n            l = h.redMul(u.redISub(d)).redISub(n.redMul(c)),\n            p = this.z.redMul(t.z).redMul(o);\n          return this.curve.jpoint(d, l, p);\n        }, c.prototype.mixedAdd = function (t) {\n          if (this.isInfinity()) return t.toJ();\n          if (t.isInfinity()) return this;\n          var e = this.z.redSqr(),\n            r = this.x,\n            i = t.x.redMul(e),\n            s = this.y,\n            n = t.y.redMul(e).redMul(this.z),\n            a = r.redSub(i),\n            o = s.redSub(n);\n          if (0 === a.cmpn(0)) return 0 !== o.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();\n          var h = a.redSqr(),\n            f = h.redMul(a),\n            c = r.redMul(h),\n            u = o.redSqr().redIAdd(f).redISub(c).redISub(c),\n            d = o.redMul(c.redISub(u)).redISub(s.redMul(f)),\n            l = this.z.redMul(a);\n          return this.curve.jpoint(u, d, l);\n        }, c.prototype.dblp = function (t) {\n          if (0 === t) return this;\n          if (this.isInfinity()) return this;\n          if (!t) return this.dbl();\n          if (this.curve.zeroA || this.curve.threeA) {\n            for (var e = this, r = 0; r < t; r++) e = e.dbl();\n            return e;\n          }\n          var i = this.curve.a,\n            s = this.curve.tinv,\n            n = this.x,\n            a = this.y,\n            o = this.z,\n            h = o.redSqr().redSqr(),\n            f = a.redAdd(a);\n          for (r = 0; r < t; r++) {\n            var c = n.redSqr(),\n              u = f.redSqr(),\n              d = u.redSqr(),\n              l = c.redAdd(c).redIAdd(c).redIAdd(i.redMul(h)),\n              p = n.redMul(u),\n              b = l.redSqr().redISub(p.redAdd(p)),\n              m = p.redISub(b),\n              g = l.redMul(m);\n            g = g.redIAdd(g).redISub(d);\n            var y = f.redMul(o);\n            r + 1 < t && (h = h.redMul(d)), n = b, o = y, f = g;\n          }\n          return this.curve.jpoint(n, f.redMul(s), o);\n        }, c.prototype.dbl = function () {\n          return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();\n        }, c.prototype._zeroDbl = function () {\n          var t, e, r;\n          if (this.zOne) {\n            var i = this.x.redSqr(),\n              s = this.y.redSqr(),\n              n = s.redSqr(),\n              a = this.x.redAdd(s).redSqr().redISub(i).redISub(n);\n            a = a.redIAdd(a);\n            var o = i.redAdd(i).redIAdd(i),\n              h = o.redSqr().redISub(a).redISub(a),\n              f = n.redIAdd(n);\n            f = (f = f.redIAdd(f)).redIAdd(f), t = h, e = o.redMul(a.redISub(h)).redISub(f), r = this.y.redAdd(this.y);\n          } else {\n            var c = this.x.redSqr(),\n              u = this.y.redSqr(),\n              d = u.redSqr(),\n              l = this.x.redAdd(u).redSqr().redISub(c).redISub(d);\n            l = l.redIAdd(l);\n            var p = c.redAdd(c).redIAdd(c),\n              b = p.redSqr(),\n              m = d.redIAdd(d);\n            m = (m = m.redIAdd(m)).redIAdd(m), t = b.redISub(l).redISub(l), e = p.redMul(l.redISub(t)).redISub(m), r = (r = this.y.redMul(this.z)).redIAdd(r);\n          }\n          return this.curve.jpoint(t, e, r);\n        }, c.prototype._threeDbl = function () {\n          var t, e, r;\n          if (this.zOne) {\n            var i = this.x.redSqr(),\n              s = this.y.redSqr(),\n              n = s.redSqr(),\n              a = this.x.redAdd(s).redSqr().redISub(i).redISub(n);\n            a = a.redIAdd(a);\n            var o = i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),\n              h = o.redSqr().redISub(a).redISub(a);\n            t = h;\n            var f = n.redIAdd(n);\n            f = (f = f.redIAdd(f)).redIAdd(f), e = o.redMul(a.redISub(h)).redISub(f), r = this.y.redAdd(this.y);\n          } else {\n            var c = this.z.redSqr(),\n              u = this.y.redSqr(),\n              d = this.x.redMul(u),\n              l = this.x.redSub(c).redMul(this.x.redAdd(c));\n            l = l.redAdd(l).redIAdd(l);\n            var p = d.redIAdd(d),\n              b = (p = p.redIAdd(p)).redAdd(p);\n            t = l.redSqr().redISub(b), r = this.y.redAdd(this.z).redSqr().redISub(u).redISub(c);\n            var m = u.redSqr();\n            m = (m = (m = m.redIAdd(m)).redIAdd(m)).redIAdd(m), e = l.redMul(p.redISub(t)).redISub(m);\n          }\n          return this.curve.jpoint(t, e, r);\n        }, c.prototype._dbl = function () {\n          var t = this.curve.a,\n            e = this.x,\n            r = this.y,\n            i = this.z,\n            s = i.redSqr().redSqr(),\n            n = e.redSqr(),\n            a = r.redSqr(),\n            o = n.redAdd(n).redIAdd(n).redIAdd(t.redMul(s)),\n            h = e.redAdd(e),\n            f = (h = h.redIAdd(h)).redMul(a),\n            c = o.redSqr().redISub(f.redAdd(f)),\n            u = f.redISub(c),\n            d = a.redSqr();\n          d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);\n          var l = o.redMul(u).redISub(d),\n            p = r.redAdd(r).redMul(i);\n          return this.curve.jpoint(c, l, p);\n        }, c.prototype.trpl = function () {\n          if (!this.curve.zeroA) return this.dbl().add(this);\n          var t = this.x.redSqr(),\n            e = this.y.redSqr(),\n            r = this.z.redSqr(),\n            i = e.redSqr(),\n            s = t.redAdd(t).redIAdd(t),\n            n = s.redSqr(),\n            a = this.x.redAdd(e).redSqr().redISub(t).redISub(i),\n            o = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(n)).redSqr(),\n            h = i.redIAdd(i);\n          h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);\n          var f = s.redIAdd(a).redSqr().redISub(n).redISub(o).redISub(h),\n            c = e.redMul(f);\n          c = (c = c.redIAdd(c)).redIAdd(c);\n          var u = this.x.redMul(o).redISub(c);\n          u = (u = u.redIAdd(u)).redIAdd(u);\n          var d = this.y.redMul(f.redMul(h.redISub(f)).redISub(a.redMul(o)));\n          d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);\n          var l = this.z.redAdd(a).redSqr().redISub(r).redISub(o);\n          return this.curve.jpoint(u, d, l);\n        }, c.prototype.mul = function (t, e) {\n          return t = new s(t, e), this.curve._wnafMul(this, t);\n        }, c.prototype.eq = function (t) {\n          if (\"affine\" === t.type) return this.eq(t.toJ());\n          if (this === t) return !0;\n          var e = this.z.redSqr(),\n            r = t.z.redSqr();\n          if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;\n          var i = e.redMul(this.z),\n            s = r.redMul(t.z);\n          return 0 === this.y.redMul(s).redISub(t.y.redMul(i)).cmpn(0);\n        }, c.prototype.eqXToP = function (t) {\n          var e = this.z.redSqr(),\n            r = t.toRed(this.curve.red).redMul(e);\n          if (0 === this.x.cmp(r)) return !0;\n          for (var i = t.clone(), s = this.curve.redN.redMul(e);;) {\n            if (i.iadd(this.curve.n), i.cmp(this.curve.p) >= 0) return !1;\n            if (r.redIAdd(s), 0 === this.x.cmp(r)) return !0;\n          }\n        }, c.prototype.inspect = function () {\n          return this.isInfinity() ? \"<EC JPoint Infinity>\" : \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n        }, c.prototype.isInfinity = function () {\n          return 0 === this.z.cmpn(0);\n        };\n      },\n      626: (t, e, r) => {\n        \"use strict\";\n\n        var i,\n          s,\n          n,\n          a = e,\n          o = r(715),\n          h = r(104),\n          f = r(359).assert;\n        function c(t) {\n          if (\"short\" !== t.type) throw new Error(\"invalid curve type\");\n          this.curve = new h.short(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, f(this.g.validate(), \"Invalid curve\"), f(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n        }\n        a.PresetCurve = c;\n        try {\n          i = r(59);\n        } catch (t) {\n          i = void 0;\n        }\n        s = \"secp256k1\", n = {\n          type: \"short\",\n          prime: \"k256\",\n          p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n          a: \"0\",\n          b: \"7\",\n          n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n          h: \"1\",\n          hash: o.sha256,\n          beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n          lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n          basis: [{\n            a: \"3086d221a7d46bcde86c90e49284eb15\",\n            b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n          }, {\n            a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n            b: \"3086d221a7d46bcde86c90e49284eb15\"\n          }],\n          gRed: !1,\n          g: [\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\", \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\", i]\n        }, Object.defineProperty(a, s, {\n          configurable: !0,\n          enumerable: !0,\n          get: function () {\n            var t = new c(n);\n            return Object.defineProperty(a, s, {\n              configurable: !0,\n              enumerable: !0,\n              value: t\n            }), t;\n          }\n        });\n      },\n      630: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(550),\n          s = r(156),\n          n = r(359),\n          a = r(626),\n          o = r(931),\n          h = n.assert,\n          f = r(119),\n          c = r(911);\n        function u(t) {\n          if (!(this instanceof u)) return new u(t);\n          \"string\" == typeof t && (h(a.hasOwnProperty(t), \"Unknown curve \" + t), t = a[t]), t instanceof a.PresetCurve && (t = {\n            curve: t\n          }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash;\n        }\n        t.exports = u, u.prototype.keyPair = function (t) {\n          return new f(this, t);\n        }, u.prototype.keyFromPrivate = function (t, e) {\n          return f.fromPrivate(this, t, e);\n        }, u.prototype.keyFromPublic = function (t, e) {\n          return f.fromPublic(this, t, e);\n        }, u.prototype.genKeyPair = function (t) {\n          t || (t = {});\n          for (var e = new s({\n              hash: this.hash,\n              pers: t.pers,\n              persEnc: t.persEnc || \"utf8\",\n              entropy: t.entropy || o(this.hash.hmacStrength),\n              entropyEnc: t.entropy && t.entropyEnc || \"utf8\",\n              nonce: this.n.toArray()\n            }), r = this.n.byteLength(), n = this.n.sub(new i(2));;) {\n            var a = new i(e.generate(r));\n            if (!(a.cmp(n) > 0)) return a.iaddn(1), this.keyFromPrivate(a);\n          }\n        }, u.prototype._truncateToN = function (t, e) {\n          var r = 8 * t.byteLength() - this.n.bitLength();\n          return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;\n        }, u.prototype.sign = function (t, e, r, n) {\n          \"object\" == typeof r && (n = r, r = null), n || (n = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new i(t, 16));\n          for (var a = this.n.byteLength(), o = e.getPrivate().toArray(\"be\", a), h = t.toArray(\"be\", a), f = new s({\n              hash: this.hash,\n              entropy: o,\n              nonce: h,\n              pers: n.pers,\n              persEnc: n.persEnc || \"utf8\"\n            }), u = this.n.sub(new i(1)), d = 0;; d++) {\n            var l = n.k ? n.k(d) : new i(f.generate(this.n.byteLength()));\n            if (!((l = this._truncateToN(l, !0)).cmpn(1) <= 0 || l.cmp(u) >= 0)) {\n              var p = this.g.mul(l);\n              if (!p.isInfinity()) {\n                var b = p.getX(),\n                  m = b.umod(this.n);\n                if (0 !== m.cmpn(0)) {\n                  var g = l.invm(this.n).mul(m.mul(e.getPrivate()).iadd(t));\n                  if (0 !== (g = g.umod(this.n)).cmpn(0)) {\n                    var y = (p.getY().isOdd() ? 1 : 0) | (0 !== b.cmp(m) ? 2 : 0);\n                    return n.canonical && g.cmp(this.nh) > 0 && (g = this.n.sub(g), y ^= 1), new c({\n                      r: m,\n                      s: g,\n                      recoveryParam: y\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }, u.prototype.verify = function (t, e, r, s) {\n          t = this._truncateToN(new i(t, 16)), r = this.keyFromPublic(r, s);\n          var n = (e = new c(e, \"hex\")).r,\n            a = e.s;\n          if (n.cmpn(1) < 0 || n.cmp(this.n) >= 0) return !1;\n          if (a.cmpn(1) < 0 || a.cmp(this.n) >= 0) return !1;\n          var o,\n            h = a.invm(this.n),\n            f = h.mul(t).umod(this.n),\n            u = h.mul(n).umod(this.n);\n          return this.curve._maxwellTrick ? !(o = this.g.jmulAdd(f, r.getPublic(), u)).isInfinity() && o.eqXToP(n) : !(o = this.g.mulAdd(f, r.getPublic(), u)).isInfinity() && 0 === o.getX().umod(this.n).cmp(n);\n        }, u.prototype.recoverPubKey = function (t, e, r, s) {\n          h((3 & r) === r, \"The recovery param is more than two bits\"), e = new c(e, s);\n          var n = this.n,\n            a = new i(t),\n            o = e.r,\n            f = e.s,\n            u = 1 & r,\n            d = r >> 1;\n          if (o.cmp(this.curve.p.umod(this.curve.n)) >= 0 && d) throw new Error(\"Unable to find sencond key candinate\");\n          o = d ? this.curve.pointFromX(o.add(this.curve.n), u) : this.curve.pointFromX(o, u);\n          var l = e.r.invm(n),\n            p = n.sub(a).mul(l).umod(n),\n            b = f.mul(l).umod(n);\n          return this.g.mulAdd(p, o, b);\n        }, u.prototype.getKeyRecoveryParam = function (t, e, r, i) {\n          if (null !== (e = new c(e, i)).recoveryParam) return e.recoveryParam;\n          for (var s = 0; s < 4; s++) {\n            var n;\n            try {\n              n = this.recoverPubKey(t, e, s);\n            } catch (t) {\n              continue;\n            }\n            if (n.eq(r)) return s;\n          }\n          throw new Error(\"Unable to find valid recovery factor\");\n        };\n      },\n      119: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(550),\n          s = r(359).assert;\n        function n(t, e) {\n          this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc);\n        }\n        t.exports = n, n.fromPublic = function (t, e, r) {\n          return e instanceof n ? e : new n(t, {\n            pub: e,\n            pubEnc: r\n          });\n        }, n.fromPrivate = function (t, e, r) {\n          return e instanceof n ? e : new n(t, {\n            priv: e,\n            privEnc: r\n          });\n        }, n.prototype.validate = function () {\n          var t = this.getPublic();\n          return t.isInfinity() ? {\n            result: !1,\n            reason: \"Invalid public key\"\n          } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {\n            result: !0,\n            reason: null\n          } : {\n            result: !1,\n            reason: \"Public key * N != O\"\n          } : {\n            result: !1,\n            reason: \"Public key is not a point\"\n          };\n        }, n.prototype.getPublic = function (t, e) {\n          return \"string\" == typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub;\n        }, n.prototype.getPrivate = function (t) {\n          return \"hex\" === t ? this.priv.toString(16, 2) : this.priv;\n        }, n.prototype._importPrivate = function (t, e) {\n          this.priv = new i(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n);\n        }, n.prototype._importPublic = function (t, e) {\n          if (t.x || t.y) return \"mont\" === this.ec.curve.type ? s(t.x, \"Need x coordinate\") : \"short\" !== this.ec.curve.type && \"edwards\" !== this.ec.curve.type || s(t.x && t.y, \"Need both x and y coordinate\"), void (this.pub = this.ec.curve.point(t.x, t.y));\n          this.pub = this.ec.curve.decodePoint(t, e);\n        }, n.prototype.derive = function (t) {\n          return t.mul(this.priv).getX();\n        }, n.prototype.sign = function (t, e, r) {\n          return this.ec.sign(t, this, e, r);\n        }, n.prototype.verify = function (t, e) {\n          return this.ec.verify(t, e, this);\n        }, n.prototype.inspect = function () {\n          return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n        };\n      },\n      911: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(550),\n          s = r(359),\n          n = s.assert;\n        function a(t, e) {\n          if (t instanceof a) return t;\n          this._importDER(t, e) || (n(t.r && t.s, \"Signature without r or s\"), this.r = new i(t.r, 16), this.s = new i(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam);\n        }\n        function o() {\n          this.place = 0;\n        }\n        function h(t, e) {\n          var r = t[e.place++];\n          if (!(128 & r)) return r;\n          for (var i = 15 & r, s = 0, n = 0, a = e.place; n < i; n++, a++) s <<= 8, s |= t[a];\n          return e.place = a, s;\n        }\n        function f(t) {\n          for (var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;) e++;\n          return 0 === e ? t : t.slice(e);\n        }\n        function c(t, e) {\n          if (e < 128) t.push(e);else {\n            var r = 1 + (Math.log(e) / Math.LN2 >>> 3);\n            for (t.push(128 | r); --r;) t.push(e >>> (r << 3) & 255);\n            t.push(e);\n          }\n        }\n        t.exports = a, a.prototype._importDER = function (t, e) {\n          t = s.toArray(t, e);\n          var r = new o();\n          if (48 !== t[r.place++]) return !1;\n          if (h(t, r) + r.place !== t.length) return !1;\n          if (2 !== t[r.place++]) return !1;\n          var n = h(t, r),\n            a = t.slice(r.place, n + r.place);\n          if (r.place += n, 2 !== t[r.place++]) return !1;\n          var f = h(t, r);\n          if (t.length !== f + r.place) return !1;\n          var c = t.slice(r.place, f + r.place);\n          return 0 === a[0] && 128 & a[1] && (a = a.slice(1)), 0 === c[0] && 128 & c[1] && (c = c.slice(1)), this.r = new i(a), this.s = new i(c), this.recoveryParam = null, !0;\n        }, a.prototype.toDER = function (t) {\n          var e = this.r.toArray(),\n            r = this.s.toArray();\n          for (128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = f(e), r = f(r); !(r[0] || 128 & r[1]);) r = r.slice(1);\n          var i = [2];\n          c(i, e.length), (i = i.concat(e)).push(2), c(i, r.length);\n          var n = i.concat(r),\n            a = [48];\n          return c(a, n.length), a = a.concat(n), s.encode(a, t);\n        };\n      },\n      59: t => {\n        t.exports = {\n          doubles: {\n            step: 4,\n            points: [[\"e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a\", \"f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821\"], [\"8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508\", \"11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf\"], [\"175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739\", \"d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695\"], [\"363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640\", \"4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9\"], [\"8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c\", \"4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36\"], [\"723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda\", \"96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f\"], [\"eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa\", \"5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999\"], [\"100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0\", \"cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09\"], [\"e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d\", \"9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d\"], [\"feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d\", \"e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088\"], [\"da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1\", \"9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d\"], [\"53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0\", \"5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8\"], [\"8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047\", \"10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a\"], [\"385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862\", \"283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453\"], [\"6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7\", \"7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160\"], [\"3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd\", \"56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0\"], [\"85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83\", \"7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6\"], [\"948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a\", \"53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589\"], [\"6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8\", \"bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17\"], [\"e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d\", \"4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda\"], [\"e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725\", \"7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd\"], [\"213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754\", \"4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2\"], [\"4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c\", \"17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6\"], [\"fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6\", \"6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f\"], [\"76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39\", \"c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01\"], [\"c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891\", \"893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3\"], [\"d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b\", \"febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f\"], [\"b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03\", \"2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7\"], [\"e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d\", \"eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78\"], [\"a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070\", \"7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1\"], [\"90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4\", \"e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150\"], [\"8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da\", \"662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82\"], [\"e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11\", \"1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc\"], [\"8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e\", \"efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b\"], [\"e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41\", \"2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51\"], [\"b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef\", \"67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45\"], [\"d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8\", \"db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120\"], [\"324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d\", \"648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84\"], [\"4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96\", \"35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d\"], [\"9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd\", \"ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d\"], [\"6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5\", \"9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8\"], [\"a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266\", \"40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8\"], [\"7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71\", \"34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac\"], [\"928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac\", \"c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f\"], [\"85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751\", \"1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962\"], [\"ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e\", \"493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907\"], [\"827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241\", \"c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec\"], [\"eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3\", \"be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d\"], [\"e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f\", \"4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414\"], [\"1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19\", \"aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd\"], [\"146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be\", \"b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0\"], [\"fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9\", \"6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811\"], [\"da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2\", \"8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1\"], [\"a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13\", \"7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c\"], [\"174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c\", \"ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73\"], [\"959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba\", \"2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd\"], [\"d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151\", \"e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405\"], [\"64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073\", \"d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589\"], [\"8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458\", \"38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e\"], [\"13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b\", \"69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27\"], [\"bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366\", \"d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1\"], [\"8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa\", \"40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482\"], [\"8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0\", \"620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945\"], [\"dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787\", \"7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573\"], [\"f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e\", \"ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82\"]]\n          },\n          naf: {\n            wnd: 7,\n            points: [[\"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\", \"388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672\"], [\"2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4\", \"d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6\"], [\"5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc\", \"6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da\"], [\"acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe\", \"cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37\"], [\"774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb\", \"d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b\"], [\"f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8\", \"ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81\"], [\"d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e\", \"581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58\"], [\"defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34\", \"4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77\"], [\"2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c\", \"85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a\"], [\"352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5\", \"321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c\"], [\"2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f\", \"2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67\"], [\"9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714\", \"73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402\"], [\"daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729\", \"a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55\"], [\"c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db\", \"2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482\"], [\"6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4\", \"e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82\"], [\"1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5\", \"b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396\"], [\"605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479\", \"2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49\"], [\"62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d\", \"80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf\"], [\"80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f\", \"1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a\"], [\"7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb\", \"d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7\"], [\"d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9\", \"eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933\"], [\"49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963\", \"758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a\"], [\"77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74\", \"958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6\"], [\"f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530\", \"e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37\"], [\"463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b\", \"5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e\"], [\"f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247\", \"cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6\"], [\"caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1\", \"cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476\"], [\"2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120\", \"4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40\"], [\"7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435\", \"91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61\"], [\"754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18\", \"673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683\"], [\"e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8\", \"59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5\"], [\"186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb\", \"3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b\"], [\"df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f\", \"55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417\"], [\"5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143\", \"efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868\"], [\"290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba\", \"e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a\"], [\"af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45\", \"f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6\"], [\"766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a\", \"744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996\"], [\"59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e\", \"c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e\"], [\"f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8\", \"e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d\"], [\"7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c\", \"30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2\"], [\"948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519\", \"e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e\"], [\"7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab\", \"100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437\"], [\"3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca\", \"ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311\"], [\"d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf\", \"8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4\"], [\"1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610\", \"68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575\"], [\"733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4\", \"f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d\"], [\"15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c\", \"d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d\"], [\"a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940\", \"edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629\"], [\"e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980\", \"a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06\"], [\"311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3\", \"66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374\"], [\"34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf\", \"9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee\"], [\"f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63\", \"4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1\"], [\"d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448\", \"fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b\"], [\"32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf\", \"5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661\"], [\"7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5\", \"8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6\"], [\"ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6\", \"8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e\"], [\"16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5\", \"5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d\"], [\"eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99\", \"f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc\"], [\"78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51\", \"f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4\"], [\"494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5\", \"42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c\"], [\"a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5\", \"204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b\"], [\"c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997\", \"4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913\"], [\"841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881\", \"73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154\"], [\"5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5\", \"39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865\"], [\"36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66\", \"d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc\"], [\"336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726\", \"ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224\"], [\"8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede\", \"6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e\"], [\"1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94\", \"60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6\"], [\"85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31\", \"3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511\"], [\"29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51\", \"b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b\"], [\"a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252\", \"ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2\"], [\"4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5\", \"cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c\"], [\"d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b\", \"6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3\"], [\"ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4\", \"322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d\"], [\"af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f\", \"6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700\"], [\"e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889\", \"2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4\"], [\"591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246\", \"b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196\"], [\"11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984\", \"998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4\"], [\"3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a\", \"b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257\"], [\"cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030\", \"bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13\"], [\"c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197\", \"6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096\"], [\"c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593\", \"c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38\"], [\"a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef\", \"21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f\"], [\"347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38\", \"60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448\"], [\"da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a\", \"49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a\"], [\"c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111\", \"5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4\"], [\"4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502\", \"7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437\"], [\"3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea\", \"be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7\"], [\"cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26\", \"8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d\"], [\"b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986\", \"39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a\"], [\"d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e\", \"62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54\"], [\"48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4\", \"25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77\"], [\"dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda\", \"ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517\"], [\"6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859\", \"cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10\"], [\"e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f\", \"f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125\"], [\"eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c\", \"6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e\"], [\"13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942\", \"fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1\"], [\"ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a\", \"1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2\"], [\"b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80\", \"5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423\"], [\"ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d\", \"438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8\"], [\"8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1\", \"cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758\"], [\"52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63\", \"c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375\"], [\"e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352\", \"6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d\"], [\"7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193\", \"ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec\"], [\"5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00\", \"9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0\"], [\"32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58\", \"ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c\"], [\"e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7\", \"d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4\"], [\"8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8\", \"c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f\"], [\"4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e\", \"67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649\"], [\"3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d\", \"cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826\"], [\"674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b\", \"299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5\"], [\"d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f\", \"f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87\"], [\"30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6\", \"462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b\"], [\"be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297\", \"62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc\"], [\"93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a\", \"7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c\"], [\"b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c\", \"ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f\"], [\"d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52\", \"4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a\"], [\"d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb\", \"bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46\"], [\"463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065\", \"bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f\"], [\"7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917\", \"603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03\"], [\"74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9\", \"cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08\"], [\"30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3\", \"553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8\"], [\"9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57\", \"712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373\"], [\"176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66\", \"ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3\"], [\"75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8\", \"9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8\"], [\"809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721\", \"9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1\"], [\"1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180\", \"4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9\"]]\n          }\n        };\n      },\n      359: (t, e, r) => {\n        \"use strict\";\n\n        var i = e,\n          s = r(550),\n          n = r(746),\n          a = r(504);\n        i.assert = n, i.toArray = a.toArray, i.zero2 = a.zero2, i.toHex = a.toHex, i.encode = a.encode, i.getNAF = function (t, e, r) {\n          var i = new Array(Math.max(t.bitLength(), r) + 1);\n          i.fill(0);\n          for (var s = 1 << e + 1, n = t.clone(), a = 0; a < i.length; a++) {\n            var o,\n              h = n.andln(s - 1);\n            n.isOdd() ? (o = h > (s >> 1) - 1 ? (s >> 1) - h : h, n.isubn(o)) : o = 0, i[a] = o, n.iushrn(1);\n          }\n          return i;\n        }, i.getJSF = function (t, e) {\n          var r = [[], []];\n          t = t.clone(), e = e.clone();\n          for (var i = 0, s = 0; t.cmpn(-i) > 0 || e.cmpn(-s) > 0;) {\n            var n,\n              a,\n              o,\n              h = t.andln(3) + i & 3,\n              f = e.andln(3) + s & 3;\n            3 === h && (h = -1), 3 === f && (f = -1), n = 0 == (1 & h) ? 0 : 3 != (o = t.andln(7) + i & 7) && 5 !== o || 2 !== f ? h : -h, r[0].push(n), a = 0 == (1 & f) ? 0 : 3 != (o = e.andln(7) + s & 7) && 5 !== o || 2 !== h ? f : -f, r[1].push(a), 2 * i === n + 1 && (i = 1 - i), 2 * s === a + 1 && (s = 1 - s), t.iushrn(1), e.iushrn(1);\n          }\n          return r;\n        }, i.cachedProperty = function (t, e, r) {\n          var i = \"_\" + e;\n          t.prototype[e] = function () {\n            return void 0 !== this[i] ? this[i] : this[i] = r.call(this);\n          };\n        }, i.parseBytes = function (t) {\n          return \"string\" == typeof t ? i.toArray(t, \"hex\") : t;\n        }, i.intFromLE = function (t) {\n          return new s(t, \"hex\", \"le\");\n        };\n      },\n      60: t => {\n        \"use strict\";\n\n        t.exports = {\n          i8: \"7.0.1\"\n        };\n      },\n      550: function (t, e, r) {\n        !function (t, e) {\n          \"use strict\";\n\n          function i(t, e) {\n            if (!t) throw new Error(e || \"Assertion failed\");\n          }\n          function s(t, e) {\n            t.super_ = e;\n            var r = function () {};\n            r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;\n          }\n          function n(t, e, r) {\n            if (n.isBN(t)) return t;\n            this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && (\"le\" !== e && \"be\" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || \"be\"));\n          }\n          var a;\n          \"object\" == typeof t ? t.exports = n : e.BN = n, n.BN = n, n.wordSize = 26;\n          try {\n            a = \"undefined\" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(293).Buffer;\n          } catch (t) {}\n          function o(t, e) {\n            var r = t.charCodeAt(e);\n            return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void i(!1, \"Invalid character in \" + t);\n          }\n          function h(t, e, r) {\n            var i = o(t, r);\n            return r - 1 >= e && (i |= o(t, r - 1) << 4), i;\n          }\n          function f(t, e, r, s) {\n            for (var n = 0, a = 0, o = Math.min(t.length, r), h = e; h < o; h++) {\n              var f = t.charCodeAt(h) - 48;\n              n *= s, a = f >= 49 ? f - 49 + 10 : f >= 17 ? f - 17 + 10 : f, i(f >= 0 && a < s, \"Invalid character\"), n += a;\n            }\n            return n;\n          }\n          function c(t, e) {\n            t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red;\n          }\n          if (n.isBN = function (t) {\n            return t instanceof n || null !== t && \"object\" == typeof t && t.constructor.wordSize === n.wordSize && Array.isArray(t.words);\n          }, n.max = function (t, e) {\n            return t.cmp(e) > 0 ? t : e;\n          }, n.min = function (t, e) {\n            return t.cmp(e) < 0 ? t : e;\n          }, n.prototype._init = function (t, e, r) {\n            if (\"number\" == typeof t) return this._initNumber(t, e, r);\n            if (\"object\" == typeof t) return this._initArray(t, e, r);\n            \"hex\" === e && (e = 16), i(e === (0 | e) && e >= 2 && e <= 36);\n            var s = 0;\n            \"-\" === (t = t.toString().replace(/\\s+/g, \"\"))[0] && (s++, this.negative = 1), s < t.length && (16 === e ? this._parseHex(t, s, r) : (this._parseBase(t, e, s), \"le\" === r && this._initArray(this.toArray(), e, r)));\n          }, n.prototype._initNumber = function (t, e, r) {\n            t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), \"le\" === r && this._initArray(this.toArray(), e, r);\n          }, n.prototype._initArray = function (t, e, r) {\n            if (i(\"number\" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;\n            this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);\n            for (var s = 0; s < this.length; s++) this.words[s] = 0;\n            var n,\n              a,\n              o = 0;\n            if (\"be\" === r) for (s = t.length - 1, n = 0; s >= 0; s -= 3) a = t[s] | t[s - 1] << 8 | t[s - 2] << 16, this.words[n] |= a << o & 67108863, this.words[n + 1] = a >>> 26 - o & 67108863, (o += 24) >= 26 && (o -= 26, n++);else if (\"le\" === r) for (s = 0, n = 0; s < t.length; s += 3) a = t[s] | t[s + 1] << 8 | t[s + 2] << 16, this.words[n] |= a << o & 67108863, this.words[n + 1] = a >>> 26 - o & 67108863, (o += 24) >= 26 && (o -= 26, n++);\n            return this._strip();\n          }, n.prototype._parseHex = function (t, e, r) {\n            this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);\n            for (var i = 0; i < this.length; i++) this.words[i] = 0;\n            var s,\n              n = 0,\n              a = 0;\n            if (\"be\" === r) for (i = t.length - 1; i >= e; i -= 2) s = h(t, e, i) << n, this.words[a] |= 67108863 & s, n >= 18 ? (n -= 18, a += 1, this.words[a] |= s >>> 26) : n += 8;else for (i = (t.length - e) % 2 == 0 ? e + 1 : e; i < t.length; i += 2) s = h(t, e, i) << n, this.words[a] |= 67108863 & s, n >= 18 ? (n -= 18, a += 1, this.words[a] |= s >>> 26) : n += 8;\n            this._strip();\n          }, n.prototype._parseBase = function (t, e, r) {\n            this.words = [0], this.length = 1;\n            for (var i = 0, s = 1; s <= 67108863; s *= e) i++;\n            i--, s = s / e | 0;\n            for (var n = t.length - r, a = n % i, o = Math.min(n, n - a) + r, h = 0, c = r; c < o; c += i) h = f(t, c, c + i, e), this.imuln(s), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);\n            if (0 !== a) {\n              var u = 1;\n              for (h = f(t, c, t.length, e), c = 0; c < a; c++) u *= e;\n              this.imuln(u), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);\n            }\n            this._strip();\n          }, n.prototype.copy = function (t) {\n            t.words = new Array(this.length);\n            for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];\n            t.length = this.length, t.negative = this.negative, t.red = this.red;\n          }, n.prototype._move = function (t) {\n            c(t, this);\n          }, n.prototype.clone = function () {\n            var t = new n(null);\n            return this.copy(t), t;\n          }, n.prototype._expand = function (t) {\n            for (; this.length < t;) this.words[this.length++] = 0;\n            return this;\n          }, n.prototype._strip = function () {\n            for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;\n            return this._normSign();\n          }, n.prototype._normSign = function () {\n            return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;\n          }, \"undefined\" != typeof Symbol && \"function\" == typeof Symbol.for) try {\n            n.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = u;\n          } catch (t) {\n            n.prototype.inspect = u;\n          } else n.prototype.inspect = u;\n          function u() {\n            return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n          }\n          var d = [\"\", \"0\", \"00\", \"000\", \"0000\", \"00000\", \"000000\", \"0000000\", \"00000000\", \"000000000\", \"0000000000\", \"00000000000\", \"000000000000\", \"0000000000000\", \"00000000000000\", \"000000000000000\", \"0000000000000000\", \"00000000000000000\", \"000000000000000000\", \"0000000000000000000\", \"00000000000000000000\", \"000000000000000000000\", \"0000000000000000000000\", \"00000000000000000000000\", \"000000000000000000000000\", \"0000000000000000000000000\"],\n            l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],\n            p = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n          function b(t, e, r) {\n            r.negative = e.negative ^ t.negative;\n            var i = t.length + e.length | 0;\n            r.length = i, i = i - 1 | 0;\n            var s = 0 | t.words[0],\n              n = 0 | e.words[0],\n              a = s * n,\n              o = 67108863 & a,\n              h = a / 67108864 | 0;\n            r.words[0] = o;\n            for (var f = 1; f < i; f++) {\n              for (var c = h >>> 26, u = 67108863 & h, d = Math.min(f, e.length - 1), l = Math.max(0, f - t.length + 1); l <= d; l++) {\n                var p = f - l | 0;\n                c += (a = (s = 0 | t.words[p]) * (n = 0 | e.words[l]) + u) / 67108864 | 0, u = 67108863 & a;\n              }\n              r.words[f] = 0 | u, h = 0 | c;\n            }\n            return 0 !== h ? r.words[f] = 0 | h : r.length--, r._strip();\n          }\n          n.prototype.toString = function (t, e) {\n            var r;\n            if (e = 0 | e || 1, 16 === (t = t || 10) || \"hex\" === t) {\n              r = \"\";\n              for (var s = 0, n = 0, a = 0; a < this.length; a++) {\n                var o = this.words[a],\n                  h = (16777215 & (o << s | n)).toString(16);\n                r = 0 != (n = o >>> 24 - s & 16777215) || a !== this.length - 1 ? d[6 - h.length] + h + r : h + r, (s += 2) >= 26 && (s -= 26, a--);\n              }\n              for (0 !== n && (r = n.toString(16) + r); r.length % e != 0;) r = \"0\" + r;\n              return 0 !== this.negative && (r = \"-\" + r), r;\n            }\n            if (t === (0 | t) && t >= 2 && t <= 36) {\n              var f = l[t],\n                c = p[t];\n              r = \"\";\n              var u = this.clone();\n              for (u.negative = 0; !u.isZero();) {\n                var b = u.modrn(c).toString(t);\n                r = (u = u.idivn(c)).isZero() ? b + r : d[f - b.length] + b + r;\n              }\n              for (this.isZero() && (r = \"0\" + r); r.length % e != 0;) r = \"0\" + r;\n              return 0 !== this.negative && (r = \"-\" + r), r;\n            }\n            i(!1, \"Base should be between 2 and 36\");\n          }, n.prototype.toNumber = function () {\n            var t = this.words[0];\n            return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, \"Number can only safely store up to 53 bits\"), 0 !== this.negative ? -t : t;\n          }, n.prototype.toJSON = function () {\n            return this.toString(16, 2);\n          }, a && (n.prototype.toBuffer = function (t, e) {\n            return this.toArrayLike(a, t, e);\n          }), n.prototype.toArray = function (t, e) {\n            return this.toArrayLike(Array, t, e);\n          }, n.prototype.toArrayLike = function (t, e, r) {\n            this._strip();\n            var s = this.byteLength(),\n              n = r || Math.max(1, s);\n            i(s <= n, \"byte array longer than desired length\"), i(n > 0, \"Requested array length <= 0\");\n            var a = function (t, e) {\n              return t.allocUnsafe ? t.allocUnsafe(e) : new t(e);\n            }(t, n);\n            return this[\"_toArrayLike\" + (\"le\" === e ? \"LE\" : \"BE\")](a, s), a;\n          }, n.prototype._toArrayLikeLE = function (t, e) {\n            for (var r = 0, i = 0, s = 0, n = 0; s < this.length; s++) {\n              var a = this.words[s] << n | i;\n              t[r++] = 255 & a, r < t.length && (t[r++] = a >> 8 & 255), r < t.length && (t[r++] = a >> 16 & 255), 6 === n ? (r < t.length && (t[r++] = a >> 24 & 255), i = 0, n = 0) : (i = a >>> 24, n += 2);\n            }\n            if (r < t.length) for (t[r++] = i; r < t.length;) t[r++] = 0;\n          }, n.prototype._toArrayLikeBE = function (t, e) {\n            for (var r = t.length - 1, i = 0, s = 0, n = 0; s < this.length; s++) {\n              var a = this.words[s] << n | i;\n              t[r--] = 255 & a, r >= 0 && (t[r--] = a >> 8 & 255), r >= 0 && (t[r--] = a >> 16 & 255), 6 === n ? (r >= 0 && (t[r--] = a >> 24 & 255), i = 0, n = 0) : (i = a >>> 24, n += 2);\n            }\n            if (r >= 0) for (t[r--] = i; r >= 0;) t[r--] = 0;\n          }, Math.clz32 ? n.prototype._countBits = function (t) {\n            return 32 - Math.clz32(t);\n          } : n.prototype._countBits = function (t) {\n            var e = t,\n              r = 0;\n            return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;\n          }, n.prototype._zeroBits = function (t) {\n            if (0 === t) return 26;\n            var e = t,\n              r = 0;\n            return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;\n          }, n.prototype.bitLength = function () {\n            var t = this.words[this.length - 1],\n              e = this._countBits(t);\n            return 26 * (this.length - 1) + e;\n          }, n.prototype.zeroBits = function () {\n            if (this.isZero()) return 0;\n            for (var t = 0, e = 0; e < this.length; e++) {\n              var r = this._zeroBits(this.words[e]);\n              if (t += r, 26 !== r) break;\n            }\n            return t;\n          }, n.prototype.byteLength = function () {\n            return Math.ceil(this.bitLength() / 8);\n          }, n.prototype.toTwos = function (t) {\n            return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();\n          }, n.prototype.fromTwos = function (t) {\n            return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();\n          }, n.prototype.isNeg = function () {\n            return 0 !== this.negative;\n          }, n.prototype.neg = function () {\n            return this.clone().ineg();\n          }, n.prototype.ineg = function () {\n            return this.isZero() || (this.negative ^= 1), this;\n          }, n.prototype.iuor = function (t) {\n            for (; this.length < t.length;) this.words[this.length++] = 0;\n            for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];\n            return this._strip();\n          }, n.prototype.ior = function (t) {\n            return i(0 == (this.negative | t.negative)), this.iuor(t);\n          }, n.prototype.or = function (t) {\n            return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);\n          }, n.prototype.uor = function (t) {\n            return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);\n          }, n.prototype.iuand = function (t) {\n            var e;\n            e = this.length > t.length ? t : this;\n            for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];\n            return this.length = e.length, this._strip();\n          }, n.prototype.iand = function (t) {\n            return i(0 == (this.negative | t.negative)), this.iuand(t);\n          }, n.prototype.and = function (t) {\n            return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);\n          }, n.prototype.uand = function (t) {\n            return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);\n          }, n.prototype.iuxor = function (t) {\n            var e, r;\n            this.length > t.length ? (e = this, r = t) : (e = t, r = this);\n            for (var i = 0; i < r.length; i++) this.words[i] = e.words[i] ^ r.words[i];\n            if (this !== e) for (; i < e.length; i++) this.words[i] = e.words[i];\n            return this.length = e.length, this._strip();\n          }, n.prototype.ixor = function (t) {\n            return i(0 == (this.negative | t.negative)), this.iuxor(t);\n          }, n.prototype.xor = function (t) {\n            return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);\n          }, n.prototype.uxor = function (t) {\n            return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);\n          }, n.prototype.inotn = function (t) {\n            i(\"number\" == typeof t && t >= 0);\n            var e = 0 | Math.ceil(t / 26),\n              r = t % 26;\n            this._expand(e), r > 0 && e--;\n            for (var s = 0; s < e; s++) this.words[s] = 67108863 & ~this.words[s];\n            return r > 0 && (this.words[s] = ~this.words[s] & 67108863 >> 26 - r), this._strip();\n          }, n.prototype.notn = function (t) {\n            return this.clone().inotn(t);\n          }, n.prototype.setn = function (t, e) {\n            i(\"number\" == typeof t && t >= 0);\n            var r = t / 26 | 0,\n              s = t % 26;\n            return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << s : this.words[r] & ~(1 << s), this._strip();\n          }, n.prototype.iadd = function (t) {\n            var e, r, i;\n            if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();\n            if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();\n            this.length > t.length ? (r = this, i = t) : (r = t, i = this);\n            for (var s = 0, n = 0; n < i.length; n++) e = (0 | r.words[n]) + (0 | i.words[n]) + s, this.words[n] = 67108863 & e, s = e >>> 26;\n            for (; 0 !== s && n < r.length; n++) e = (0 | r.words[n]) + s, this.words[n] = 67108863 & e, s = e >>> 26;\n            if (this.length = r.length, 0 !== s) this.words[this.length] = s, this.length++;else if (r !== this) for (; n < r.length; n++) this.words[n] = r.words[n];\n            return this;\n          }, n.prototype.add = function (t) {\n            var e;\n            return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);\n          }, n.prototype.isub = function (t) {\n            if (0 !== t.negative) {\n              t.negative = 0;\n              var e = this.iadd(t);\n              return t.negative = 1, e._normSign();\n            }\n            if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();\n            var r,\n              i,\n              s = this.cmp(t);\n            if (0 === s) return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n            s > 0 ? (r = this, i = t) : (r = t, i = this);\n            for (var n = 0, a = 0; a < i.length; a++) n = (e = (0 | r.words[a]) - (0 | i.words[a]) + n) >> 26, this.words[a] = 67108863 & e;\n            for (; 0 !== n && a < r.length; a++) n = (e = (0 | r.words[a]) + n) >> 26, this.words[a] = 67108863 & e;\n            if (0 === n && a < r.length && r !== this) for (; a < r.length; a++) this.words[a] = r.words[a];\n            return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this._strip();\n          }, n.prototype.sub = function (t) {\n            return this.clone().isub(t);\n          };\n          var m = function (t, e, r) {\n            var i,\n              s,\n              n,\n              a = t.words,\n              o = e.words,\n              h = r.words,\n              f = 0,\n              c = 0 | a[0],\n              u = 8191 & c,\n              d = c >>> 13,\n              l = 0 | a[1],\n              p = 8191 & l,\n              b = l >>> 13,\n              m = 0 | a[2],\n              g = 8191 & m,\n              y = m >>> 13,\n              w = 0 | a[3],\n              v = 8191 & w,\n              S = w >>> 13,\n              _ = 0 | a[4],\n              B = 8191 & _,\n              I = _ >>> 13,\n              O = 0 | a[5],\n              E = 8191 & O,\n              P = O >>> 13,\n              k = 0 | a[6],\n              N = 8191 & k,\n              A = k >>> 13,\n              x = 0 | a[7],\n              R = 8191 & x,\n              M = x >>> 13,\n              T = 0 | a[8],\n              C = 8191 & T,\n              H = T >>> 13,\n              L = 0 | a[9],\n              K = 8191 & L,\n              F = L >>> 13,\n              U = 0 | o[0],\n              D = 8191 & U,\n              V = U >>> 13,\n              j = 0 | o[1],\n              q = 8191 & j,\n              z = j >>> 13,\n              G = 0 | o[2],\n              J = 8191 & G,\n              Y = G >>> 13,\n              W = 0 | o[3],\n              Q = 8191 & W,\n              X = W >>> 13,\n              Z = 0 | o[4],\n              $ = 8191 & Z,\n              tt = Z >>> 13,\n              et = 0 | o[5],\n              rt = 8191 & et,\n              it = et >>> 13,\n              st = 0 | o[6],\n              nt = 8191 & st,\n              at = st >>> 13,\n              ot = 0 | o[7],\n              ht = 8191 & ot,\n              ft = ot >>> 13,\n              ct = 0 | o[8],\n              ut = 8191 & ct,\n              dt = ct >>> 13,\n              lt = 0 | o[9],\n              pt = 8191 & lt,\n              bt = lt >>> 13;\n            r.negative = t.negative ^ e.negative, r.length = 19;\n            var mt = (f + (i = Math.imul(u, D)) | 0) + ((8191 & (s = (s = Math.imul(u, V)) + Math.imul(d, D) | 0)) << 13) | 0;\n            f = ((n = Math.imul(d, V)) + (s >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, i = Math.imul(p, D), s = (s = Math.imul(p, V)) + Math.imul(b, D) | 0, n = Math.imul(b, V);\n            var gt = (f + (i = i + Math.imul(u, q) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, z) | 0) + Math.imul(d, q) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, z) | 0) + (s >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, i = Math.imul(g, D), s = (s = Math.imul(g, V)) + Math.imul(y, D) | 0, n = Math.imul(y, V), i = i + Math.imul(p, q) | 0, s = (s = s + Math.imul(p, z) | 0) + Math.imul(b, q) | 0, n = n + Math.imul(b, z) | 0;\n            var yt = (f + (i = i + Math.imul(u, J) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, Y) | 0) + Math.imul(d, J) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, Y) | 0) + (s >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, i = Math.imul(v, D), s = (s = Math.imul(v, V)) + Math.imul(S, D) | 0, n = Math.imul(S, V), i = i + Math.imul(g, q) | 0, s = (s = s + Math.imul(g, z) | 0) + Math.imul(y, q) | 0, n = n + Math.imul(y, z) | 0, i = i + Math.imul(p, J) | 0, s = (s = s + Math.imul(p, Y) | 0) + Math.imul(b, J) | 0, n = n + Math.imul(b, Y) | 0;\n            var wt = (f + (i = i + Math.imul(u, Q) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, X) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, X) | 0) + (s >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, i = Math.imul(B, D), s = (s = Math.imul(B, V)) + Math.imul(I, D) | 0, n = Math.imul(I, V), i = i + Math.imul(v, q) | 0, s = (s = s + Math.imul(v, z) | 0) + Math.imul(S, q) | 0, n = n + Math.imul(S, z) | 0, i = i + Math.imul(g, J) | 0, s = (s = s + Math.imul(g, Y) | 0) + Math.imul(y, J) | 0, n = n + Math.imul(y, Y) | 0, i = i + Math.imul(p, Q) | 0, s = (s = s + Math.imul(p, X) | 0) + Math.imul(b, Q) | 0, n = n + Math.imul(b, X) | 0;\n            var vt = (f + (i = i + Math.imul(u, $) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, tt) | 0) + Math.imul(d, $) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, tt) | 0) + (s >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, i = Math.imul(E, D), s = (s = Math.imul(E, V)) + Math.imul(P, D) | 0, n = Math.imul(P, V), i = i + Math.imul(B, q) | 0, s = (s = s + Math.imul(B, z) | 0) + Math.imul(I, q) | 0, n = n + Math.imul(I, z) | 0, i = i + Math.imul(v, J) | 0, s = (s = s + Math.imul(v, Y) | 0) + Math.imul(S, J) | 0, n = n + Math.imul(S, Y) | 0, i = i + Math.imul(g, Q) | 0, s = (s = s + Math.imul(g, X) | 0) + Math.imul(y, Q) | 0, n = n + Math.imul(y, X) | 0, i = i + Math.imul(p, $) | 0, s = (s = s + Math.imul(p, tt) | 0) + Math.imul(b, $) | 0, n = n + Math.imul(b, tt) | 0;\n            var St = (f + (i = i + Math.imul(u, rt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, it) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, it) | 0) + (s >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, i = Math.imul(N, D), s = (s = Math.imul(N, V)) + Math.imul(A, D) | 0, n = Math.imul(A, V), i = i + Math.imul(E, q) | 0, s = (s = s + Math.imul(E, z) | 0) + Math.imul(P, q) | 0, n = n + Math.imul(P, z) | 0, i = i + Math.imul(B, J) | 0, s = (s = s + Math.imul(B, Y) | 0) + Math.imul(I, J) | 0, n = n + Math.imul(I, Y) | 0, i = i + Math.imul(v, Q) | 0, s = (s = s + Math.imul(v, X) | 0) + Math.imul(S, Q) | 0, n = n + Math.imul(S, X) | 0, i = i + Math.imul(g, $) | 0, s = (s = s + Math.imul(g, tt) | 0) + Math.imul(y, $) | 0, n = n + Math.imul(y, tt) | 0, i = i + Math.imul(p, rt) | 0, s = (s = s + Math.imul(p, it) | 0) + Math.imul(b, rt) | 0, n = n + Math.imul(b, it) | 0;\n            var _t = (f + (i = i + Math.imul(u, nt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, at) | 0) + Math.imul(d, nt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, at) | 0) + (s >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, i = Math.imul(R, D), s = (s = Math.imul(R, V)) + Math.imul(M, D) | 0, n = Math.imul(M, V), i = i + Math.imul(N, q) | 0, s = (s = s + Math.imul(N, z) | 0) + Math.imul(A, q) | 0, n = n + Math.imul(A, z) | 0, i = i + Math.imul(E, J) | 0, s = (s = s + Math.imul(E, Y) | 0) + Math.imul(P, J) | 0, n = n + Math.imul(P, Y) | 0, i = i + Math.imul(B, Q) | 0, s = (s = s + Math.imul(B, X) | 0) + Math.imul(I, Q) | 0, n = n + Math.imul(I, X) | 0, i = i + Math.imul(v, $) | 0, s = (s = s + Math.imul(v, tt) | 0) + Math.imul(S, $) | 0, n = n + Math.imul(S, tt) | 0, i = i + Math.imul(g, rt) | 0, s = (s = s + Math.imul(g, it) | 0) + Math.imul(y, rt) | 0, n = n + Math.imul(y, it) | 0, i = i + Math.imul(p, nt) | 0, s = (s = s + Math.imul(p, at) | 0) + Math.imul(b, nt) | 0, n = n + Math.imul(b, at) | 0;\n            var Bt = (f + (i = i + Math.imul(u, ht) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, ft) | 0) + Math.imul(d, ht) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, ft) | 0) + (s >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863, i = Math.imul(C, D), s = (s = Math.imul(C, V)) + Math.imul(H, D) | 0, n = Math.imul(H, V), i = i + Math.imul(R, q) | 0, s = (s = s + Math.imul(R, z) | 0) + Math.imul(M, q) | 0, n = n + Math.imul(M, z) | 0, i = i + Math.imul(N, J) | 0, s = (s = s + Math.imul(N, Y) | 0) + Math.imul(A, J) | 0, n = n + Math.imul(A, Y) | 0, i = i + Math.imul(E, Q) | 0, s = (s = s + Math.imul(E, X) | 0) + Math.imul(P, Q) | 0, n = n + Math.imul(P, X) | 0, i = i + Math.imul(B, $) | 0, s = (s = s + Math.imul(B, tt) | 0) + Math.imul(I, $) | 0, n = n + Math.imul(I, tt) | 0, i = i + Math.imul(v, rt) | 0, s = (s = s + Math.imul(v, it) | 0) + Math.imul(S, rt) | 0, n = n + Math.imul(S, it) | 0, i = i + Math.imul(g, nt) | 0, s = (s = s + Math.imul(g, at) | 0) + Math.imul(y, nt) | 0, n = n + Math.imul(y, at) | 0, i = i + Math.imul(p, ht) | 0, s = (s = s + Math.imul(p, ft) | 0) + Math.imul(b, ht) | 0, n = n + Math.imul(b, ft) | 0;\n            var It = (f + (i = i + Math.imul(u, ut) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, dt) | 0) + Math.imul(d, ut) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, dt) | 0) + (s >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, i = Math.imul(K, D), s = (s = Math.imul(K, V)) + Math.imul(F, D) | 0, n = Math.imul(F, V), i = i + Math.imul(C, q) | 0, s = (s = s + Math.imul(C, z) | 0) + Math.imul(H, q) | 0, n = n + Math.imul(H, z) | 0, i = i + Math.imul(R, J) | 0, s = (s = s + Math.imul(R, Y) | 0) + Math.imul(M, J) | 0, n = n + Math.imul(M, Y) | 0, i = i + Math.imul(N, Q) | 0, s = (s = s + Math.imul(N, X) | 0) + Math.imul(A, Q) | 0, n = n + Math.imul(A, X) | 0, i = i + Math.imul(E, $) | 0, s = (s = s + Math.imul(E, tt) | 0) + Math.imul(P, $) | 0, n = n + Math.imul(P, tt) | 0, i = i + Math.imul(B, rt) | 0, s = (s = s + Math.imul(B, it) | 0) + Math.imul(I, rt) | 0, n = n + Math.imul(I, it) | 0, i = i + Math.imul(v, nt) | 0, s = (s = s + Math.imul(v, at) | 0) + Math.imul(S, nt) | 0, n = n + Math.imul(S, at) | 0, i = i + Math.imul(g, ht) | 0, s = (s = s + Math.imul(g, ft) | 0) + Math.imul(y, ht) | 0, n = n + Math.imul(y, ft) | 0, i = i + Math.imul(p, ut) | 0, s = (s = s + Math.imul(p, dt) | 0) + Math.imul(b, ut) | 0, n = n + Math.imul(b, dt) | 0;\n            var Ot = (f + (i = i + Math.imul(u, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(u, bt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(d, bt) | 0) + (s >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, i = Math.imul(K, q), s = (s = Math.imul(K, z)) + Math.imul(F, q) | 0, n = Math.imul(F, z), i = i + Math.imul(C, J) | 0, s = (s = s + Math.imul(C, Y) | 0) + Math.imul(H, J) | 0, n = n + Math.imul(H, Y) | 0, i = i + Math.imul(R, Q) | 0, s = (s = s + Math.imul(R, X) | 0) + Math.imul(M, Q) | 0, n = n + Math.imul(M, X) | 0, i = i + Math.imul(N, $) | 0, s = (s = s + Math.imul(N, tt) | 0) + Math.imul(A, $) | 0, n = n + Math.imul(A, tt) | 0, i = i + Math.imul(E, rt) | 0, s = (s = s + Math.imul(E, it) | 0) + Math.imul(P, rt) | 0, n = n + Math.imul(P, it) | 0, i = i + Math.imul(B, nt) | 0, s = (s = s + Math.imul(B, at) | 0) + Math.imul(I, nt) | 0, n = n + Math.imul(I, at) | 0, i = i + Math.imul(v, ht) | 0, s = (s = s + Math.imul(v, ft) | 0) + Math.imul(S, ht) | 0, n = n + Math.imul(S, ft) | 0, i = i + Math.imul(g, ut) | 0, s = (s = s + Math.imul(g, dt) | 0) + Math.imul(y, ut) | 0, n = n + Math.imul(y, dt) | 0;\n            var Et = (f + (i = i + Math.imul(p, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(p, bt) | 0) + Math.imul(b, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(b, bt) | 0) + (s >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, i = Math.imul(K, J), s = (s = Math.imul(K, Y)) + Math.imul(F, J) | 0, n = Math.imul(F, Y), i = i + Math.imul(C, Q) | 0, s = (s = s + Math.imul(C, X) | 0) + Math.imul(H, Q) | 0, n = n + Math.imul(H, X) | 0, i = i + Math.imul(R, $) | 0, s = (s = s + Math.imul(R, tt) | 0) + Math.imul(M, $) | 0, n = n + Math.imul(M, tt) | 0, i = i + Math.imul(N, rt) | 0, s = (s = s + Math.imul(N, it) | 0) + Math.imul(A, rt) | 0, n = n + Math.imul(A, it) | 0, i = i + Math.imul(E, nt) | 0, s = (s = s + Math.imul(E, at) | 0) + Math.imul(P, nt) | 0, n = n + Math.imul(P, at) | 0, i = i + Math.imul(B, ht) | 0, s = (s = s + Math.imul(B, ft) | 0) + Math.imul(I, ht) | 0, n = n + Math.imul(I, ft) | 0, i = i + Math.imul(v, ut) | 0, s = (s = s + Math.imul(v, dt) | 0) + Math.imul(S, ut) | 0, n = n + Math.imul(S, dt) | 0;\n            var Pt = (f + (i = i + Math.imul(g, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(g, bt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(y, bt) | 0) + (s >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, i = Math.imul(K, Q), s = (s = Math.imul(K, X)) + Math.imul(F, Q) | 0, n = Math.imul(F, X), i = i + Math.imul(C, $) | 0, s = (s = s + Math.imul(C, tt) | 0) + Math.imul(H, $) | 0, n = n + Math.imul(H, tt) | 0, i = i + Math.imul(R, rt) | 0, s = (s = s + Math.imul(R, it) | 0) + Math.imul(M, rt) | 0, n = n + Math.imul(M, it) | 0, i = i + Math.imul(N, nt) | 0, s = (s = s + Math.imul(N, at) | 0) + Math.imul(A, nt) | 0, n = n + Math.imul(A, at) | 0, i = i + Math.imul(E, ht) | 0, s = (s = s + Math.imul(E, ft) | 0) + Math.imul(P, ht) | 0, n = n + Math.imul(P, ft) | 0, i = i + Math.imul(B, ut) | 0, s = (s = s + Math.imul(B, dt) | 0) + Math.imul(I, ut) | 0, n = n + Math.imul(I, dt) | 0;\n            var kt = (f + (i = i + Math.imul(v, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(v, bt) | 0) + Math.imul(S, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(S, bt) | 0) + (s >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, i = Math.imul(K, $), s = (s = Math.imul(K, tt)) + Math.imul(F, $) | 0, n = Math.imul(F, tt), i = i + Math.imul(C, rt) | 0, s = (s = s + Math.imul(C, it) | 0) + Math.imul(H, rt) | 0, n = n + Math.imul(H, it) | 0, i = i + Math.imul(R, nt) | 0, s = (s = s + Math.imul(R, at) | 0) + Math.imul(M, nt) | 0, n = n + Math.imul(M, at) | 0, i = i + Math.imul(N, ht) | 0, s = (s = s + Math.imul(N, ft) | 0) + Math.imul(A, ht) | 0, n = n + Math.imul(A, ft) | 0, i = i + Math.imul(E, ut) | 0, s = (s = s + Math.imul(E, dt) | 0) + Math.imul(P, ut) | 0, n = n + Math.imul(P, dt) | 0;\n            var Nt = (f + (i = i + Math.imul(B, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(B, bt) | 0) + Math.imul(I, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(I, bt) | 0) + (s >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, i = Math.imul(K, rt), s = (s = Math.imul(K, it)) + Math.imul(F, rt) | 0, n = Math.imul(F, it), i = i + Math.imul(C, nt) | 0, s = (s = s + Math.imul(C, at) | 0) + Math.imul(H, nt) | 0, n = n + Math.imul(H, at) | 0, i = i + Math.imul(R, ht) | 0, s = (s = s + Math.imul(R, ft) | 0) + Math.imul(M, ht) | 0, n = n + Math.imul(M, ft) | 0, i = i + Math.imul(N, ut) | 0, s = (s = s + Math.imul(N, dt) | 0) + Math.imul(A, ut) | 0, n = n + Math.imul(A, dt) | 0;\n            var At = (f + (i = i + Math.imul(E, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(E, bt) | 0) + Math.imul(P, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(P, bt) | 0) + (s >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, i = Math.imul(K, nt), s = (s = Math.imul(K, at)) + Math.imul(F, nt) | 0, n = Math.imul(F, at), i = i + Math.imul(C, ht) | 0, s = (s = s + Math.imul(C, ft) | 0) + Math.imul(H, ht) | 0, n = n + Math.imul(H, ft) | 0, i = i + Math.imul(R, ut) | 0, s = (s = s + Math.imul(R, dt) | 0) + Math.imul(M, ut) | 0, n = n + Math.imul(M, dt) | 0;\n            var xt = (f + (i = i + Math.imul(N, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(N, bt) | 0) + Math.imul(A, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(A, bt) | 0) + (s >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, i = Math.imul(K, ht), s = (s = Math.imul(K, ft)) + Math.imul(F, ht) | 0, n = Math.imul(F, ft), i = i + Math.imul(C, ut) | 0, s = (s = s + Math.imul(C, dt) | 0) + Math.imul(H, ut) | 0, n = n + Math.imul(H, dt) | 0;\n            var Rt = (f + (i = i + Math.imul(R, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(R, bt) | 0) + Math.imul(M, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(M, bt) | 0) + (s >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, i = Math.imul(K, ut), s = (s = Math.imul(K, dt)) + Math.imul(F, ut) | 0, n = Math.imul(F, dt);\n            var Mt = (f + (i = i + Math.imul(C, pt) | 0) | 0) + ((8191 & (s = (s = s + Math.imul(C, bt) | 0) + Math.imul(H, pt) | 0)) << 13) | 0;\n            f = ((n = n + Math.imul(H, bt) | 0) + (s >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863;\n            var Tt = (f + (i = Math.imul(K, pt)) | 0) + ((8191 & (s = (s = Math.imul(K, bt)) + Math.imul(F, pt) | 0)) << 13) | 0;\n            return f = ((n = Math.imul(F, bt)) + (s >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, h[0] = mt, h[1] = gt, h[2] = yt, h[3] = wt, h[4] = vt, h[5] = St, h[6] = _t, h[7] = Bt, h[8] = It, h[9] = Ot, h[10] = Et, h[11] = Pt, h[12] = kt, h[13] = Nt, h[14] = At, h[15] = xt, h[16] = Rt, h[17] = Mt, h[18] = Tt, 0 !== f && (h[19] = f, r.length++), r;\n          };\n          function g(t, e, r) {\n            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;\n            for (var i = 0, s = 0, n = 0; n < r.length - 1; n++) {\n              var a = s;\n              s = 0;\n              for (var o = 67108863 & i, h = Math.min(n, e.length - 1), f = Math.max(0, n - t.length + 1); f <= h; f++) {\n                var c = n - f,\n                  u = (0 | t.words[c]) * (0 | e.words[f]),\n                  d = 67108863 & u;\n                o = 67108863 & (d = d + o | 0), s += (a = (a = a + (u / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863;\n              }\n              r.words[n] = o, i = a, a = s;\n            }\n            return 0 !== i ? r.words[n] = i : r.length--, r._strip();\n          }\n          function y(t, e, r) {\n            return g(t, e, r);\n          }\n          function w(t, e) {\n            this.x = t, this.y = e;\n          }\n          Math.imul || (m = b), n.prototype.mulTo = function (t, e) {\n            var r = this.length + t.length;\n            return 10 === this.length && 10 === t.length ? m(this, t, e) : r < 63 ? b(this, t, e) : r < 1024 ? g(this, t, e) : y(this, t, e);\n          }, w.prototype.makeRBT = function (t) {\n            for (var e = new Array(t), r = n.prototype._countBits(t) - 1, i = 0; i < t; i++) e[i] = this.revBin(i, r, t);\n            return e;\n          }, w.prototype.revBin = function (t, e, r) {\n            if (0 === t || t === r - 1) return t;\n            for (var i = 0, s = 0; s < e; s++) i |= (1 & t) << e - s - 1, t >>= 1;\n            return i;\n          }, w.prototype.permute = function (t, e, r, i, s, n) {\n            for (var a = 0; a < n; a++) i[a] = e[t[a]], s[a] = r[t[a]];\n          }, w.prototype.transform = function (t, e, r, i, s, n) {\n            this.permute(n, t, e, r, i, s);\n            for (var a = 1; a < s; a <<= 1) for (var o = a << 1, h = Math.cos(2 * Math.PI / o), f = Math.sin(2 * Math.PI / o), c = 0; c < s; c += o) for (var u = h, d = f, l = 0; l < a; l++) {\n              var p = r[c + l],\n                b = i[c + l],\n                m = r[c + l + a],\n                g = i[c + l + a],\n                y = u * m - d * g;\n              g = u * g + d * m, m = y, r[c + l] = p + m, i[c + l] = b + g, r[c + l + a] = p - m, i[c + l + a] = b - g, l !== o && (y = h * u - f * d, d = h * d + f * u, u = y);\n            }\n          }, w.prototype.guessLen13b = function (t, e) {\n            var r = 1 | Math.max(e, t),\n              i = 1 & r,\n              s = 0;\n            for (r = r / 2 | 0; r; r >>>= 1) s++;\n            return 1 << s + 1 + i;\n          }, w.prototype.conjugate = function (t, e, r) {\n            if (!(r <= 1)) for (var i = 0; i < r / 2; i++) {\n              var s = t[i];\n              t[i] = t[r - i - 1], t[r - i - 1] = s, s = e[i], e[i] = -e[r - i - 1], e[r - i - 1] = -s;\n            }\n          }, w.prototype.normalize13b = function (t, e) {\n            for (var r = 0, i = 0; i < e / 2; i++) {\n              var s = 8192 * Math.round(t[2 * i + 1] / e) + Math.round(t[2 * i] / e) + r;\n              t[i] = 67108863 & s, r = s < 67108864 ? 0 : s / 67108864 | 0;\n            }\n            return t;\n          }, w.prototype.convert13b = function (t, e, r, s) {\n            for (var n = 0, a = 0; a < e; a++) n += 0 | t[a], r[2 * a] = 8191 & n, n >>>= 13, r[2 * a + 1] = 8191 & n, n >>>= 13;\n            for (a = 2 * e; a < s; ++a) r[a] = 0;\n            i(0 === n), i(0 == (-8192 & n));\n          }, w.prototype.stub = function (t) {\n            for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;\n            return e;\n          }, w.prototype.mulp = function (t, e, r) {\n            var i = 2 * this.guessLen13b(t.length, e.length),\n              s = this.makeRBT(i),\n              n = this.stub(i),\n              a = new Array(i),\n              o = new Array(i),\n              h = new Array(i),\n              f = new Array(i),\n              c = new Array(i),\n              u = new Array(i),\n              d = r.words;\n            d.length = i, this.convert13b(t.words, t.length, a, i), this.convert13b(e.words, e.length, f, i), this.transform(a, n, o, h, i, s), this.transform(f, n, c, u, i, s);\n            for (var l = 0; l < i; l++) {\n              var p = o[l] * c[l] - h[l] * u[l];\n              h[l] = o[l] * u[l] + h[l] * c[l], o[l] = p;\n            }\n            return this.conjugate(o, h, i), this.transform(o, h, d, n, i, s), this.conjugate(d, n, i), this.normalize13b(d, i), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip();\n          }, n.prototype.mul = function (t) {\n            var e = new n(null);\n            return e.words = new Array(this.length + t.length), this.mulTo(t, e);\n          }, n.prototype.mulf = function (t) {\n            var e = new n(null);\n            return e.words = new Array(this.length + t.length), y(this, t, e);\n          }, n.prototype.imul = function (t) {\n            return this.clone().mulTo(t, this);\n          }, n.prototype.imuln = function (t) {\n            var e = t < 0;\n            e && (t = -t), i(\"number\" == typeof t), i(t < 67108864);\n            for (var r = 0, s = 0; s < this.length; s++) {\n              var n = (0 | this.words[s]) * t,\n                a = (67108863 & n) + (67108863 & r);\n              r >>= 26, r += n / 67108864 | 0, r += a >>> 26, this.words[s] = 67108863 & a;\n            }\n            return 0 !== r && (this.words[s] = r, this.length++), e ? this.ineg() : this;\n          }, n.prototype.muln = function (t) {\n            return this.clone().imuln(t);\n          }, n.prototype.sqr = function () {\n            return this.mul(this);\n          }, n.prototype.isqr = function () {\n            return this.imul(this.clone());\n          }, n.prototype.pow = function (t) {\n            var e = function (t) {\n              for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {\n                var i = r / 26 | 0,\n                  s = r % 26;\n                e[r] = t.words[i] >>> s & 1;\n              }\n              return e;\n            }(t);\n            if (0 === e.length) return new n(1);\n            for (var r = this, i = 0; i < e.length && 0 === e[i]; i++, r = r.sqr());\n            if (++i < e.length) for (var s = r.sqr(); i < e.length; i++, s = s.sqr()) 0 !== e[i] && (r = r.mul(s));\n            return r;\n          }, n.prototype.iushln = function (t) {\n            i(\"number\" == typeof t && t >= 0);\n            var e,\n              r = t % 26,\n              s = (t - r) / 26,\n              n = 67108863 >>> 26 - r << 26 - r;\n            if (0 !== r) {\n              var a = 0;\n              for (e = 0; e < this.length; e++) {\n                var o = this.words[e] & n,\n                  h = (0 | this.words[e]) - o << r;\n                this.words[e] = h | a, a = o >>> 26 - r;\n              }\n              a && (this.words[e] = a, this.length++);\n            }\n            if (0 !== s) {\n              for (e = this.length - 1; e >= 0; e--) this.words[e + s] = this.words[e];\n              for (e = 0; e < s; e++) this.words[e] = 0;\n              this.length += s;\n            }\n            return this._strip();\n          }, n.prototype.ishln = function (t) {\n            return i(0 === this.negative), this.iushln(t);\n          }, n.prototype.iushrn = function (t, e, r) {\n            var s;\n            i(\"number\" == typeof t && t >= 0), s = e ? (e - e % 26) / 26 : 0;\n            var n = t % 26,\n              a = Math.min((t - n) / 26, this.length),\n              o = 67108863 ^ 67108863 >>> n << n,\n              h = r;\n            if (s -= a, s = Math.max(0, s), h) {\n              for (var f = 0; f < a; f++) h.words[f] = this.words[f];\n              h.length = a;\n            }\n            if (0 === a) ;else if (this.length > a) for (this.length -= a, f = 0; f < this.length; f++) this.words[f] = this.words[f + a];else this.words[0] = 0, this.length = 1;\n            var c = 0;\n            for (f = this.length - 1; f >= 0 && (0 !== c || f >= s); f--) {\n              var u = 0 | this.words[f];\n              this.words[f] = c << 26 - n | u >>> n, c = u & o;\n            }\n            return h && 0 !== c && (h.words[h.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();\n          }, n.prototype.ishrn = function (t, e, r) {\n            return i(0 === this.negative), this.iushrn(t, e, r);\n          }, n.prototype.shln = function (t) {\n            return this.clone().ishln(t);\n          }, n.prototype.ushln = function (t) {\n            return this.clone().iushln(t);\n          }, n.prototype.shrn = function (t) {\n            return this.clone().ishrn(t);\n          }, n.prototype.ushrn = function (t) {\n            return this.clone().iushrn(t);\n          }, n.prototype.testn = function (t) {\n            i(\"number\" == typeof t && t >= 0);\n            var e = t % 26,\n              r = (t - e) / 26,\n              s = 1 << e;\n            return !(this.length <= r || !(this.words[r] & s));\n          }, n.prototype.imaskn = function (t) {\n            i(\"number\" == typeof t && t >= 0);\n            var e = t % 26,\n              r = (t - e) / 26;\n            if (i(0 === this.negative, \"imaskn works only with positive numbers\"), this.length <= r) return this;\n            if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {\n              var s = 67108863 ^ 67108863 >>> e << e;\n              this.words[this.length - 1] &= s;\n            }\n            return this._strip();\n          }, n.prototype.maskn = function (t) {\n            return this.clone().imaskn(t);\n          }, n.prototype.iaddn = function (t) {\n            return i(\"number\" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);\n          }, n.prototype._iaddn = function (t) {\n            this.words[0] += t;\n            for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;\n            return this.length = Math.max(this.length, e + 1), this;\n          }, n.prototype.isubn = function (t) {\n            if (i(\"number\" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);\n            if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;\n            if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;\n            return this._strip();\n          }, n.prototype.addn = function (t) {\n            return this.clone().iaddn(t);\n          }, n.prototype.subn = function (t) {\n            return this.clone().isubn(t);\n          }, n.prototype.iabs = function () {\n            return this.negative = 0, this;\n          }, n.prototype.abs = function () {\n            return this.clone().iabs();\n          }, n.prototype._ishlnsubmul = function (t, e, r) {\n            var s,\n              n,\n              a = t.length + r;\n            this._expand(a);\n            var o = 0;\n            for (s = 0; s < t.length; s++) {\n              n = (0 | this.words[s + r]) + o;\n              var h = (0 | t.words[s]) * e;\n              o = ((n -= 67108863 & h) >> 26) - (h / 67108864 | 0), this.words[s + r] = 67108863 & n;\n            }\n            for (; s < this.length - r; s++) o = (n = (0 | this.words[s + r]) + o) >> 26, this.words[s + r] = 67108863 & n;\n            if (0 === o) return this._strip();\n            for (i(-1 === o), o = 0, s = 0; s < this.length; s++) o = (n = -(0 | this.words[s]) + o) >> 26, this.words[s] = 67108863 & n;\n            return this.negative = 1, this._strip();\n          }, n.prototype._wordDiv = function (t, e) {\n            var r = (this.length, t.length),\n              i = this.clone(),\n              s = t,\n              a = 0 | s.words[s.length - 1];\n            0 != (r = 26 - this._countBits(a)) && (s = s.ushln(r), i.iushln(r), a = 0 | s.words[s.length - 1]);\n            var o,\n              h = i.length - s.length;\n            if (\"mod\" !== e) {\n              (o = new n(null)).length = h + 1, o.words = new Array(o.length);\n              for (var f = 0; f < o.length; f++) o.words[f] = 0;\n            }\n            var c = i.clone()._ishlnsubmul(s, 1, h);\n            0 === c.negative && (i = c, o && (o.words[h] = 1));\n            for (var u = h - 1; u >= 0; u--) {\n              var d = 67108864 * (0 | i.words[s.length + u]) + (0 | i.words[s.length + u - 1]);\n              for (d = Math.min(d / a | 0, 67108863), i._ishlnsubmul(s, d, u); 0 !== i.negative;) d--, i.negative = 0, i._ishlnsubmul(s, 1, u), i.isZero() || (i.negative ^= 1);\n              o && (o.words[u] = d);\n            }\n            return o && o._strip(), i._strip(), \"div\" !== e && 0 !== r && i.iushrn(r), {\n              div: o || null,\n              mod: i\n            };\n          }, n.prototype.divmod = function (t, e, r) {\n            return i(!t.isZero()), this.isZero() ? {\n              div: new n(0),\n              mod: new n(0)\n            } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), \"mod\" !== e && (s = o.div.neg()), \"div\" !== e && (a = o.mod.neg(), r && 0 !== a.negative && a.iadd(t)), {\n              div: s,\n              mod: a\n            }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), \"mod\" !== e && (s = o.div.neg()), {\n              div: s,\n              mod: o.mod\n            }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), \"div\" !== e && (a = o.mod.neg(), r && 0 !== a.negative && a.isub(t)), {\n              div: o.div,\n              mod: a\n            }) : t.length > this.length || this.cmp(t) < 0 ? {\n              div: new n(0),\n              mod: this\n            } : 1 === t.length ? \"div\" === e ? {\n              div: this.divn(t.words[0]),\n              mod: null\n            } : \"mod\" === e ? {\n              div: null,\n              mod: new n(this.modrn(t.words[0]))\n            } : {\n              div: this.divn(t.words[0]),\n              mod: new n(this.modrn(t.words[0]))\n            } : this._wordDiv(t, e);\n            var s, a, o;\n          }, n.prototype.div = function (t) {\n            return this.divmod(t, \"div\", !1).div;\n          }, n.prototype.mod = function (t) {\n            return this.divmod(t, \"mod\", !1).mod;\n          }, n.prototype.umod = function (t) {\n            return this.divmod(t, \"mod\", !0).mod;\n          }, n.prototype.divRound = function (t) {\n            var e = this.divmod(t);\n            if (e.mod.isZero()) return e.div;\n            var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,\n              i = t.ushrn(1),\n              s = t.andln(1),\n              n = r.cmp(i);\n            return n < 0 || 1 === s && 0 === n ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);\n          }, n.prototype.modrn = function (t) {\n            var e = t < 0;\n            e && (t = -t), i(t <= 67108863);\n            for (var r = (1 << 26) % t, s = 0, n = this.length - 1; n >= 0; n--) s = (r * s + (0 | this.words[n])) % t;\n            return e ? -s : s;\n          }, n.prototype.modn = function (t) {\n            return this.modrn(t);\n          }, n.prototype.idivn = function (t) {\n            var e = t < 0;\n            e && (t = -t), i(t <= 67108863);\n            for (var r = 0, s = this.length - 1; s >= 0; s--) {\n              var n = (0 | this.words[s]) + 67108864 * r;\n              this.words[s] = n / t | 0, r = n % t;\n            }\n            return this._strip(), e ? this.ineg() : this;\n          }, n.prototype.divn = function (t) {\n            return this.clone().idivn(t);\n          }, n.prototype.egcd = function (t) {\n            i(0 === t.negative), i(!t.isZero());\n            var e = this,\n              r = t.clone();\n            e = 0 !== e.negative ? e.umod(t) : e.clone();\n            for (var s = new n(1), a = new n(0), o = new n(0), h = new n(1), f = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++f;\n            for (var c = r.clone(), u = e.clone(); !e.isZero();) {\n              for (var d = 0, l = 1; 0 == (e.words[0] & l) && d < 26; ++d, l <<= 1);\n              if (d > 0) for (e.iushrn(d); d-- > 0;) (s.isOdd() || a.isOdd()) && (s.iadd(c), a.isub(u)), s.iushrn(1), a.iushrn(1);\n              for (var p = 0, b = 1; 0 == (r.words[0] & b) && p < 26; ++p, b <<= 1);\n              if (p > 0) for (r.iushrn(p); p-- > 0;) (o.isOdd() || h.isOdd()) && (o.iadd(c), h.isub(u)), o.iushrn(1), h.iushrn(1);\n              e.cmp(r) >= 0 ? (e.isub(r), s.isub(o), a.isub(h)) : (r.isub(e), o.isub(s), h.isub(a));\n            }\n            return {\n              a: o,\n              b: h,\n              gcd: r.iushln(f)\n            };\n          }, n.prototype._invmp = function (t) {\n            i(0 === t.negative), i(!t.isZero());\n            var e = this,\n              r = t.clone();\n            e = 0 !== e.negative ? e.umod(t) : e.clone();\n            for (var s, a = new n(1), o = new n(0), h = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {\n              for (var f = 0, c = 1; 0 == (e.words[0] & c) && f < 26; ++f, c <<= 1);\n              if (f > 0) for (e.iushrn(f); f-- > 0;) a.isOdd() && a.iadd(h), a.iushrn(1);\n              for (var u = 0, d = 1; 0 == (r.words[0] & d) && u < 26; ++u, d <<= 1);\n              if (u > 0) for (r.iushrn(u); u-- > 0;) o.isOdd() && o.iadd(h), o.iushrn(1);\n              e.cmp(r) >= 0 ? (e.isub(r), a.isub(o)) : (r.isub(e), o.isub(a));\n            }\n            return (s = 0 === e.cmpn(1) ? a : o).cmpn(0) < 0 && s.iadd(t), s;\n          }, n.prototype.gcd = function (t) {\n            if (this.isZero()) return t.abs();\n            if (t.isZero()) return this.abs();\n            var e = this.clone(),\n              r = t.clone();\n            e.negative = 0, r.negative = 0;\n            for (var i = 0; e.isEven() && r.isEven(); i++) e.iushrn(1), r.iushrn(1);\n            for (;;) {\n              for (; e.isEven();) e.iushrn(1);\n              for (; r.isEven();) r.iushrn(1);\n              var s = e.cmp(r);\n              if (s < 0) {\n                var n = e;\n                e = r, r = n;\n              } else if (0 === s || 0 === r.cmpn(1)) break;\n              e.isub(r);\n            }\n            return r.iushln(i);\n          }, n.prototype.invm = function (t) {\n            return this.egcd(t).a.umod(t);\n          }, n.prototype.isEven = function () {\n            return 0 == (1 & this.words[0]);\n          }, n.prototype.isOdd = function () {\n            return 1 == (1 & this.words[0]);\n          }, n.prototype.andln = function (t) {\n            return this.words[0] & t;\n          }, n.prototype.bincn = function (t) {\n            i(\"number\" == typeof t);\n            var e = t % 26,\n              r = (t - e) / 26,\n              s = 1 << e;\n            if (this.length <= r) return this._expand(r + 1), this.words[r] |= s, this;\n            for (var n = s, a = r; 0 !== n && a < this.length; a++) {\n              var o = 0 | this.words[a];\n              n = (o += n) >>> 26, o &= 67108863, this.words[a] = o;\n            }\n            return 0 !== n && (this.words[a] = n, this.length++), this;\n          }, n.prototype.isZero = function () {\n            return 1 === this.length && 0 === this.words[0];\n          }, n.prototype.cmpn = function (t) {\n            var e,\n              r = t < 0;\n            if (0 !== this.negative && !r) return -1;\n            if (0 === this.negative && r) return 1;\n            if (this._strip(), this.length > 1) e = 1;else {\n              r && (t = -t), i(t <= 67108863, \"Number is too big\");\n              var s = 0 | this.words[0];\n              e = s === t ? 0 : s < t ? -1 : 1;\n            }\n            return 0 !== this.negative ? 0 | -e : e;\n          }, n.prototype.cmp = function (t) {\n            if (0 !== this.negative && 0 === t.negative) return -1;\n            if (0 === this.negative && 0 !== t.negative) return 1;\n            var e = this.ucmp(t);\n            return 0 !== this.negative ? 0 | -e : e;\n          }, n.prototype.ucmp = function (t) {\n            if (this.length > t.length) return 1;\n            if (this.length < t.length) return -1;\n            for (var e = 0, r = this.length - 1; r >= 0; r--) {\n              var i = 0 | this.words[r],\n                s = 0 | t.words[r];\n              if (i !== s) {\n                i < s ? e = -1 : i > s && (e = 1);\n                break;\n              }\n            }\n            return e;\n          }, n.prototype.gtn = function (t) {\n            return 1 === this.cmpn(t);\n          }, n.prototype.gt = function (t) {\n            return 1 === this.cmp(t);\n          }, n.prototype.gten = function (t) {\n            return this.cmpn(t) >= 0;\n          }, n.prototype.gte = function (t) {\n            return this.cmp(t) >= 0;\n          }, n.prototype.ltn = function (t) {\n            return -1 === this.cmpn(t);\n          }, n.prototype.lt = function (t) {\n            return -1 === this.cmp(t);\n          }, n.prototype.lten = function (t) {\n            return this.cmpn(t) <= 0;\n          }, n.prototype.lte = function (t) {\n            return this.cmp(t) <= 0;\n          }, n.prototype.eqn = function (t) {\n            return 0 === this.cmpn(t);\n          }, n.prototype.eq = function (t) {\n            return 0 === this.cmp(t);\n          }, n.red = function (t) {\n            return new E(t);\n          }, n.prototype.toRed = function (t) {\n            return i(!this.red, \"Already a number in reduction context\"), i(0 === this.negative, \"red works only with positives\"), t.convertTo(this)._forceRed(t);\n          }, n.prototype.fromRed = function () {\n            return i(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n          }, n.prototype._forceRed = function (t) {\n            return this.red = t, this;\n          }, n.prototype.forceRed = function (t) {\n            return i(!this.red, \"Already a number in reduction context\"), this._forceRed(t);\n          }, n.prototype.redAdd = function (t) {\n            return i(this.red, \"redAdd works only with red numbers\"), this.red.add(this, t);\n          }, n.prototype.redIAdd = function (t) {\n            return i(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, t);\n          }, n.prototype.redSub = function (t) {\n            return i(this.red, \"redSub works only with red numbers\"), this.red.sub(this, t);\n          }, n.prototype.redISub = function (t) {\n            return i(this.red, \"redISub works only with red numbers\"), this.red.isub(this, t);\n          }, n.prototype.redShl = function (t) {\n            return i(this.red, \"redShl works only with red numbers\"), this.red.shl(this, t);\n          }, n.prototype.redMul = function (t) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, t), this.red.mul(this, t);\n          }, n.prototype.redIMul = function (t) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, t), this.red.imul(this, t);\n          }, n.prototype.redSqr = function () {\n            return i(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n          }, n.prototype.redISqr = function () {\n            return i(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n          }, n.prototype.redSqrt = function () {\n            return i(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n          }, n.prototype.redInvm = function () {\n            return i(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n          }, n.prototype.redNeg = function () {\n            return i(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n          }, n.prototype.redPow = function (t) {\n            return i(this.red && !t.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, t);\n          };\n          var v = {\n            k256: null,\n            p224: null,\n            p192: null,\n            p25519: null\n          };\n          function S(t, e) {\n            this.name = t, this.p = new n(e, 16), this.n = this.p.bitLength(), this.k = new n(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n          }\n          function _() {\n            S.call(this, \"k256\", \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\");\n          }\n          function B() {\n            S.call(this, \"p224\", \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\");\n          }\n          function I() {\n            S.call(this, \"p192\", \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\");\n          }\n          function O() {\n            S.call(this, \"25519\", \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\");\n          }\n          function E(t) {\n            if (\"string\" == typeof t) {\n              var e = n._prime(t);\n              this.m = e.p, this.prime = e;\n            } else i(t.gtn(1), \"modulus must be greater than 1\"), this.m = t, this.prime = null;\n          }\n          function P(t) {\n            E.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new n(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n          }\n          S.prototype._tmp = function () {\n            var t = new n(null);\n            return t.words = new Array(Math.ceil(this.n / 13)), t;\n          }, S.prototype.ireduce = function (t) {\n            var e,\n              r = t;\n            do {\n              this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();\n            } while (e > this.n);\n            var i = e < this.n ? -1 : r.ucmp(this.p);\n            return 0 === i ? (r.words[0] = 0, r.length = 1) : i > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;\n          }, S.prototype.split = function (t, e) {\n            t.iushrn(this.n, 0, e);\n          }, S.prototype.imulK = function (t) {\n            return t.imul(this.k);\n          }, s(_, S), _.prototype.split = function (t, e) {\n            for (var r = 4194303, i = Math.min(t.length, 9), s = 0; s < i; s++) e.words[s] = t.words[s];\n            if (e.length = i, t.length <= 9) return t.words[0] = 0, void (t.length = 1);\n            var n = t.words[9];\n            for (e.words[e.length++] = n & r, s = 10; s < t.length; s++) {\n              var a = 0 | t.words[s];\n              t.words[s - 10] = (a & r) << 4 | n >>> 22, n = a;\n            }\n            n >>>= 22, t.words[s - 10] = n, 0 === n && t.length > 10 ? t.length -= 10 : t.length -= 9;\n          }, _.prototype.imulK = function (t) {\n            t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;\n            for (var e = 0, r = 0; r < t.length; r++) {\n              var i = 0 | t.words[r];\n              e += 977 * i, t.words[r] = 67108863 & e, e = 64 * i + (e / 67108864 | 0);\n            }\n            return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;\n          }, s(B, S), s(I, S), s(O, S), O.prototype.imulK = function (t) {\n            for (var e = 0, r = 0; r < t.length; r++) {\n              var i = 19 * (0 | t.words[r]) + e,\n                s = 67108863 & i;\n              i >>>= 26, t.words[r] = s, e = i;\n            }\n            return 0 !== e && (t.words[t.length++] = e), t;\n          }, n._prime = function (t) {\n            if (v[t]) return v[t];\n            var e;\n            if (\"k256\" === t) e = new _();else if (\"p224\" === t) e = new B();else if (\"p192\" === t) e = new I();else {\n              if (\"p25519\" !== t) throw new Error(\"Unknown prime \" + t);\n              e = new O();\n            }\n            return v[t] = e, e;\n          }, E.prototype._verify1 = function (t) {\n            i(0 === t.negative, \"red works only with positives\"), i(t.red, \"red works only with red numbers\");\n          }, E.prototype._verify2 = function (t, e) {\n            i(0 == (t.negative | e.negative), \"red works only with positives\"), i(t.red && t.red === e.red, \"red works only with red numbers\");\n          }, E.prototype.imod = function (t) {\n            return this.prime ? this.prime.ireduce(t)._forceRed(this) : (c(t, t.umod(this.m)._forceRed(this)), t);\n          }, E.prototype.neg = function (t) {\n            return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);\n          }, E.prototype.add = function (t, e) {\n            this._verify2(t, e);\n            var r = t.add(e);\n            return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);\n          }, E.prototype.iadd = function (t, e) {\n            this._verify2(t, e);\n            var r = t.iadd(e);\n            return r.cmp(this.m) >= 0 && r.isub(this.m), r;\n          }, E.prototype.sub = function (t, e) {\n            this._verify2(t, e);\n            var r = t.sub(e);\n            return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);\n          }, E.prototype.isub = function (t, e) {\n            this._verify2(t, e);\n            var r = t.isub(e);\n            return r.cmpn(0) < 0 && r.iadd(this.m), r;\n          }, E.prototype.shl = function (t, e) {\n            return this._verify1(t), this.imod(t.ushln(e));\n          }, E.prototype.imul = function (t, e) {\n            return this._verify2(t, e), this.imod(t.imul(e));\n          }, E.prototype.mul = function (t, e) {\n            return this._verify2(t, e), this.imod(t.mul(e));\n          }, E.prototype.isqr = function (t) {\n            return this.imul(t, t.clone());\n          }, E.prototype.sqr = function (t) {\n            return this.mul(t, t);\n          }, E.prototype.sqrt = function (t) {\n            if (t.isZero()) return t.clone();\n            var e = this.m.andln(3);\n            if (i(e % 2 == 1), 3 === e) {\n              var r = this.m.add(new n(1)).iushrn(2);\n              return this.pow(t, r);\n            }\n            for (var s = this.m.subn(1), a = 0; !s.isZero() && 0 === s.andln(1);) a++, s.iushrn(1);\n            i(!s.isZero());\n            var o = new n(1).toRed(this),\n              h = o.redNeg(),\n              f = this.m.subn(1).iushrn(1),\n              c = this.m.bitLength();\n            for (c = new n(2 * c * c).toRed(this); 0 !== this.pow(c, f).cmp(h);) c.redIAdd(h);\n            for (var u = this.pow(c, s), d = this.pow(t, s.addn(1).iushrn(1)), l = this.pow(t, s), p = a; 0 !== l.cmp(o);) {\n              for (var b = l, m = 0; 0 !== b.cmp(o); m++) b = b.redSqr();\n              i(m < p);\n              var g = this.pow(u, new n(1).iushln(p - m - 1));\n              d = d.redMul(g), u = g.redSqr(), l = l.redMul(u), p = m;\n            }\n            return d;\n          }, E.prototype.invm = function (t) {\n            var e = t._invmp(this.m);\n            return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);\n          }, E.prototype.pow = function (t, e) {\n            if (e.isZero()) return new n(1).toRed(this);\n            if (0 === e.cmpn(1)) return t.clone();\n            var r = new Array(16);\n            r[0] = new n(1).toRed(this), r[1] = t;\n            for (var i = 2; i < r.length; i++) r[i] = this.mul(r[i - 1], t);\n            var s = r[0],\n              a = 0,\n              o = 0,\n              h = e.bitLength() % 26;\n            for (0 === h && (h = 26), i = e.length - 1; i >= 0; i--) {\n              for (var f = e.words[i], c = h - 1; c >= 0; c--) {\n                var u = f >> c & 1;\n                s !== r[0] && (s = this.sqr(s)), 0 !== u || 0 !== a ? (a <<= 1, a |= u, (4 == ++o || 0 === i && 0 === c) && (s = this.mul(s, r[a]), o = 0, a = 0)) : o = 0;\n              }\n              h = 26;\n            }\n            return s;\n          }, E.prototype.convertTo = function (t) {\n            var e = t.umod(this.m);\n            return e === t ? e.clone() : e;\n          }, E.prototype.convertFrom = function (t) {\n            var e = t.clone();\n            return e.red = null, e;\n          }, n.mont = function (t) {\n            return new P(t);\n          }, s(P, E), P.prototype.convertTo = function (t) {\n            return this.imod(t.ushln(this.shift));\n          }, P.prototype.convertFrom = function (t) {\n            var e = this.imod(t.mul(this.rinv));\n            return e.red = null, e;\n          }, P.prototype.imul = function (t, e) {\n            if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;\n            var r = t.imul(e),\n              i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),\n              s = r.isub(i).iushrn(this.shift),\n              n = s;\n            return s.cmp(this.m) >= 0 ? n = s.isub(this.m) : s.cmpn(0) < 0 && (n = s.iadd(this.m)), n._forceRed(this);\n          }, P.prototype.mul = function (t, e) {\n            if (t.isZero() || e.isZero()) return new n(0)._forceRed(this);\n            var r = t.mul(e),\n              i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),\n              s = r.isub(i).iushrn(this.shift),\n              a = s;\n            return s.cmp(this.m) >= 0 ? a = s.isub(this.m) : s.cmpn(0) < 0 && (a = s.iadd(this.m)), a._forceRed(this);\n          }, P.prototype.invm = function (t) {\n            return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);\n          };\n        }(t = r.nmd(t), this);\n      },\n      931: (t, e, r) => {\n        var i;\n        function s(t) {\n          this.rand = t;\n        }\n        if (t.exports = function (t) {\n          return i || (i = new s(null)), i.generate(t);\n        }, t.exports.Rand = s, s.prototype.generate = function (t) {\n          return this._rand(t);\n        }, s.prototype._rand = function (t) {\n          if (this.rand.getBytes) return this.rand.getBytes(t);\n          for (var e = new Uint8Array(t), r = 0; r < e.length; r++) e[r] = this.rand.getByte();\n          return e;\n        }, \"object\" == typeof self) self.crypto && self.crypto.getRandomValues ? s.prototype._rand = function (t) {\n          var e = new Uint8Array(t);\n          return self.crypto.getRandomValues(e), e;\n        } : self.msCrypto && self.msCrypto.getRandomValues ? s.prototype._rand = function (t) {\n          var e = new Uint8Array(t);\n          return self.msCrypto.getRandomValues(e), e;\n        } : \"object\" == typeof window && (s.prototype._rand = function () {\n          throw new Error(\"Not implemented yet\");\n        });else try {\n          var n = r(417);\n          if (\"function\" != typeof n.randomBytes) throw new Error(\"Not supported\");\n          s.prototype._rand = function (t) {\n            return n.randomBytes(t);\n          };\n        } catch (t) {}\n      },\n      191: (t, e, r) => {\n        var i = r(162);\n        t.exports = i(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n      },\n      555: (t, e, r) => {\n        t.exports = r(417).createHmac;\n      },\n      715: (t, e, r) => {\n        var i = e;\n        i.utils = r(436), i.common = r(772), i.sha = r(41), i.ripemd = r(949), i.hmac = r(326), i.sha1 = i.sha.sha1, i.sha256 = i.sha.sha256, i.sha224 = i.sha.sha224, i.sha384 = i.sha.sha384, i.sha512 = i.sha.sha512, i.ripemd160 = i.ripemd.ripemd160;\n      },\n      772: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(746);\n        function n() {\n          this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = \"big\", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;\n        }\n        e.BlockHash = n, n.prototype.update = function (t, e) {\n          if (t = i.toArray(t, e), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {\n            var r = (t = this.pending).length % this._delta8;\n            this.pending = t.slice(t.length - r, t.length), 0 === this.pending.length && (this.pending = null), t = i.join32(t, 0, t.length - r, this.endian);\n            for (var s = 0; s < t.length; s += this._delta32) this._update(t, s, s + this._delta32);\n          }\n          return this;\n        }, n.prototype.digest = function (t) {\n          return this.update(this._pad()), s(null === this.pending), this._digest(t);\n        }, n.prototype._pad = function () {\n          var t = this.pendingTotal,\n            e = this._delta8,\n            r = e - (t + this.padLength) % e,\n            i = new Array(r + this.padLength);\n          i[0] = 128;\n          for (var s = 1; s < r; s++) i[s] = 0;\n          if (t <<= 3, \"big\" === this.endian) {\n            for (var n = 8; n < this.padLength; n++) i[s++] = 0;\n            i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = t >>> 24 & 255, i[s++] = t >>> 16 & 255, i[s++] = t >>> 8 & 255, i[s++] = 255 & t;\n          } else for (i[s++] = 255 & t, i[s++] = t >>> 8 & 255, i[s++] = t >>> 16 & 255, i[s++] = t >>> 24 & 255, i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = 0, n = 8; n < this.padLength; n++) i[s++] = 0;\n          return i;\n        };\n      },\n      326: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(746);\n        function n(t, e, r) {\n          if (!(this instanceof n)) return new n(t, e, r);\n          this.Hash = t, this.blockSize = t.blockSize / 8, this.outSize = t.outSize / 8, this.inner = null, this.outer = null, this._init(i.toArray(e, r));\n        }\n        t.exports = n, n.prototype._init = function (t) {\n          t.length > this.blockSize && (t = new this.Hash().update(t).digest()), s(t.length <= this.blockSize);\n          for (var e = t.length; e < this.blockSize; e++) t.push(0);\n          for (e = 0; e < t.length; e++) t[e] ^= 54;\n          for (this.inner = new this.Hash().update(t), e = 0; e < t.length; e++) t[e] ^= 106;\n          this.outer = new this.Hash().update(t);\n        }, n.prototype.update = function (t, e) {\n          return this.inner.update(t, e), this;\n        }, n.prototype.digest = function (t) {\n          return this.outer.update(this.inner.digest()), this.outer.digest(t);\n        };\n      },\n      949: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(772),\n          n = i.rotl32,\n          a = i.sum32,\n          o = i.sum32_3,\n          h = i.sum32_4,\n          f = s.BlockHash;\n        function c() {\n          if (!(this instanceof c)) return new c();\n          f.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = \"little\";\n        }\n        function u(t, e, r, i) {\n          return t <= 15 ? e ^ r ^ i : t <= 31 ? e & r | ~e & i : t <= 47 ? (e | ~r) ^ i : t <= 63 ? e & i | r & ~i : e ^ (r | ~i);\n        }\n        function d(t) {\n          return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838;\n        }\n        function l(t) {\n          return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0;\n        }\n        i.inherits(c, f), e.ripemd160 = c, c.blockSize = 512, c.outSize = 160, c.hmacStrength = 192, c.padLength = 64, c.prototype._update = function (t, e) {\n          for (var r = this.h[0], i = this.h[1], s = this.h[2], f = this.h[3], c = this.h[4], y = r, w = i, v = s, S = f, _ = c, B = 0; B < 80; B++) {\n            var I = a(n(h(r, u(B, i, s, f), t[p[B] + e], d(B)), m[B]), c);\n            r = c, c = f, f = n(s, 10), s = i, i = I, I = a(n(h(y, u(79 - B, w, v, S), t[b[B] + e], l(B)), g[B]), _), y = _, _ = S, S = n(v, 10), v = w, w = I;\n          }\n          I = o(this.h[1], s, S), this.h[1] = o(this.h[2], f, _), this.h[2] = o(this.h[3], c, y), this.h[3] = o(this.h[4], r, w), this.h[4] = o(this.h[0], i, v), this.h[0] = I;\n        }, c.prototype._digest = function (t) {\n          return \"hex\" === t ? i.toHex32(this.h, \"little\") : i.split32(this.h, \"little\");\n        };\n        var p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],\n          b = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],\n          m = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],\n          g = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\n      },\n      41: (t, e, r) => {\n        \"use strict\";\n\n        e.sha1 = r(761), e.sha224 = r(799), e.sha256 = r(344), e.sha384 = r(978), e.sha512 = r(900);\n      },\n      761: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(772),\n          n = r(38),\n          a = i.rotl32,\n          o = i.sum32,\n          h = i.sum32_5,\n          f = n.ft_1,\n          c = s.BlockHash,\n          u = [1518500249, 1859775393, 2400959708, 3395469782];\n        function d() {\n          if (!(this instanceof d)) return new d();\n          c.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);\n        }\n        i.inherits(d, c), t.exports = d, d.blockSize = 512, d.outSize = 160, d.hmacStrength = 80, d.padLength = 64, d.prototype._update = function (t, e) {\n          for (var r = this.W, i = 0; i < 16; i++) r[i] = t[e + i];\n          for (; i < r.length; i++) r[i] = a(r[i - 3] ^ r[i - 8] ^ r[i - 14] ^ r[i - 16], 1);\n          var s = this.h[0],\n            n = this.h[1],\n            c = this.h[2],\n            d = this.h[3],\n            l = this.h[4];\n          for (i = 0; i < r.length; i++) {\n            var p = ~~(i / 20),\n              b = h(a(s, 5), f(p, n, c, d), l, r[i], u[p]);\n            l = d, d = c, c = a(n, 30), n = s, s = b;\n          }\n          this.h[0] = o(this.h[0], s), this.h[1] = o(this.h[1], n), this.h[2] = o(this.h[2], c), this.h[3] = o(this.h[3], d), this.h[4] = o(this.h[4], l);\n        }, d.prototype._digest = function (t) {\n          return \"hex\" === t ? i.toHex32(this.h, \"big\") : i.split32(this.h, \"big\");\n        };\n      },\n      799: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(344);\n        function n() {\n          if (!(this instanceof n)) return new n();\n          s.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];\n        }\n        i.inherits(n, s), t.exports = n, n.blockSize = 512, n.outSize = 224, n.hmacStrength = 192, n.padLength = 64, n.prototype._digest = function (t) {\n          return \"hex\" === t ? i.toHex32(this.h.slice(0, 7), \"big\") : i.split32(this.h.slice(0, 7), \"big\");\n        };\n      },\n      344: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(772),\n          n = r(38),\n          a = r(746),\n          o = i.sum32,\n          h = i.sum32_4,\n          f = i.sum32_5,\n          c = n.ch32,\n          u = n.maj32,\n          d = n.s0_256,\n          l = n.s1_256,\n          p = n.g0_256,\n          b = n.g1_256,\n          m = s.BlockHash,\n          g = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];\n        function y() {\n          if (!(this instanceof y)) return new y();\n          m.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = g, this.W = new Array(64);\n        }\n        i.inherits(y, m), t.exports = y, y.blockSize = 512, y.outSize = 256, y.hmacStrength = 192, y.padLength = 64, y.prototype._update = function (t, e) {\n          for (var r = this.W, i = 0; i < 16; i++) r[i] = t[e + i];\n          for (; i < r.length; i++) r[i] = h(b(r[i - 2]), r[i - 7], p(r[i - 15]), r[i - 16]);\n          var s = this.h[0],\n            n = this.h[1],\n            m = this.h[2],\n            g = this.h[3],\n            y = this.h[4],\n            w = this.h[5],\n            v = this.h[6],\n            S = this.h[7];\n          for (a(this.k.length === r.length), i = 0; i < r.length; i++) {\n            var _ = f(S, l(y), c(y, w, v), this.k[i], r[i]),\n              B = o(d(s), u(s, n, m));\n            S = v, v = w, w = y, y = o(g, _), g = m, m = n, n = s, s = o(_, B);\n          }\n          this.h[0] = o(this.h[0], s), this.h[1] = o(this.h[1], n), this.h[2] = o(this.h[2], m), this.h[3] = o(this.h[3], g), this.h[4] = o(this.h[4], y), this.h[5] = o(this.h[5], w), this.h[6] = o(this.h[6], v), this.h[7] = o(this.h[7], S);\n        }, y.prototype._digest = function (t) {\n          return \"hex\" === t ? i.toHex32(this.h, \"big\") : i.split32(this.h, \"big\");\n        };\n      },\n      978: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(900);\n        function n() {\n          if (!(this instanceof n)) return new n();\n          s.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];\n        }\n        i.inherits(n, s), t.exports = n, n.blockSize = 1024, n.outSize = 384, n.hmacStrength = 192, n.padLength = 128, n.prototype._digest = function (t) {\n          return \"hex\" === t ? i.toHex32(this.h.slice(0, 12), \"big\") : i.split32(this.h.slice(0, 12), \"big\");\n        };\n      },\n      900: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436),\n          s = r(772),\n          n = r(746),\n          a = i.rotr64_hi,\n          o = i.rotr64_lo,\n          h = i.shr64_hi,\n          f = i.shr64_lo,\n          c = i.sum64,\n          u = i.sum64_hi,\n          d = i.sum64_lo,\n          l = i.sum64_4_hi,\n          p = i.sum64_4_lo,\n          b = i.sum64_5_hi,\n          m = i.sum64_5_lo,\n          g = s.BlockHash,\n          y = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];\n        function w() {\n          if (!(this instanceof w)) return new w();\n          g.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = y, this.W = new Array(160);\n        }\n        function v(t, e, r, i, s) {\n          var n = t & r ^ ~t & s;\n          return n < 0 && (n += 4294967296), n;\n        }\n        function S(t, e, r, i, s, n) {\n          var a = e & i ^ ~e & n;\n          return a < 0 && (a += 4294967296), a;\n        }\n        function _(t, e, r, i, s) {\n          var n = t & r ^ t & s ^ r & s;\n          return n < 0 && (n += 4294967296), n;\n        }\n        function B(t, e, r, i, s, n) {\n          var a = e & i ^ e & n ^ i & n;\n          return a < 0 && (a += 4294967296), a;\n        }\n        function I(t, e) {\n          var r = a(t, e, 28) ^ a(e, t, 2) ^ a(e, t, 7);\n          return r < 0 && (r += 4294967296), r;\n        }\n        function O(t, e) {\n          var r = o(t, e, 28) ^ o(e, t, 2) ^ o(e, t, 7);\n          return r < 0 && (r += 4294967296), r;\n        }\n        function E(t, e) {\n          var r = o(t, e, 14) ^ o(t, e, 18) ^ o(e, t, 9);\n          return r < 0 && (r += 4294967296), r;\n        }\n        function P(t, e) {\n          var r = a(t, e, 1) ^ a(t, e, 8) ^ h(t, e, 7);\n          return r < 0 && (r += 4294967296), r;\n        }\n        function k(t, e) {\n          var r = o(t, e, 1) ^ o(t, e, 8) ^ f(t, e, 7);\n          return r < 0 && (r += 4294967296), r;\n        }\n        function N(t, e) {\n          var r = o(t, e, 19) ^ o(e, t, 29) ^ f(t, e, 6);\n          return r < 0 && (r += 4294967296), r;\n        }\n        i.inherits(w, g), t.exports = w, w.blockSize = 1024, w.outSize = 512, w.hmacStrength = 192, w.padLength = 128, w.prototype._prepareBlock = function (t, e) {\n          for (var r = this.W, i = 0; i < 32; i++) r[i] = t[e + i];\n          for (; i < r.length; i += 2) {\n            var s = (m = r[i - 4], g = r[i - 3], y = void 0, (y = a(m, g, 19) ^ a(g, m, 29) ^ h(m, g, 6)) < 0 && (y += 4294967296), y),\n              n = N(r[i - 4], r[i - 3]),\n              o = r[i - 14],\n              f = r[i - 13],\n              c = P(r[i - 30], r[i - 29]),\n              u = k(r[i - 30], r[i - 29]),\n              d = r[i - 32],\n              b = r[i - 31];\n            r[i] = l(s, n, o, f, c, u, d, b), r[i + 1] = p(s, n, o, f, c, u, d, b);\n          }\n          var m, g, y;\n        }, w.prototype._update = function (t, e) {\n          this._prepareBlock(t, e);\n          var r,\n            i,\n            s,\n            o = this.W,\n            h = this.h[0],\n            f = this.h[1],\n            l = this.h[2],\n            p = this.h[3],\n            g = this.h[4],\n            y = this.h[5],\n            w = this.h[6],\n            P = this.h[7],\n            k = this.h[8],\n            N = this.h[9],\n            A = this.h[10],\n            x = this.h[11],\n            R = this.h[12],\n            M = this.h[13],\n            T = this.h[14],\n            C = this.h[15];\n          n(this.k.length === o.length);\n          for (var H = 0; H < o.length; H += 2) {\n            var L = T,\n              K = C,\n              F = (s = void 0, (s = a(r = k, i = N, 14) ^ a(r, i, 18) ^ a(i, r, 9)) < 0 && (s += 4294967296), s),\n              U = E(k, N),\n              D = v(k, 0, A, 0, R),\n              V = S(0, N, 0, x, 0, M),\n              j = this.k[H],\n              q = this.k[H + 1],\n              z = o[H],\n              G = o[H + 1],\n              J = b(L, K, F, U, D, V, j, q, z, G),\n              Y = m(L, K, F, U, D, V, j, q, z, G);\n            L = I(h, f), K = O(h, f), F = _(h, 0, l, 0, g), U = B(0, f, 0, p, 0, y);\n            var W = u(L, K, F, U),\n              Q = d(L, K, F, U);\n            T = R, C = M, R = A, M = x, A = k, x = N, k = u(w, P, J, Y), N = d(P, P, J, Y), w = g, P = y, g = l, y = p, l = h, p = f, h = u(J, Y, W, Q), f = d(J, Y, W, Q);\n          }\n          c(this.h, 0, h, f), c(this.h, 2, l, p), c(this.h, 4, g, y), c(this.h, 6, w, P), c(this.h, 8, k, N), c(this.h, 10, A, x), c(this.h, 12, R, M), c(this.h, 14, T, C);\n        }, w.prototype._digest = function (t) {\n          return \"hex\" === t ? i.toHex32(this.h, \"big\") : i.split32(this.h, \"big\");\n        };\n      },\n      38: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(436).rotr32;\n        function s(t, e, r) {\n          return t & e ^ ~t & r;\n        }\n        function n(t, e, r) {\n          return t & e ^ t & r ^ e & r;\n        }\n        function a(t, e, r) {\n          return t ^ e ^ r;\n        }\n        e.ft_1 = function (t, e, r, i) {\n          return 0 === t ? s(e, r, i) : 1 === t || 3 === t ? a(e, r, i) : 2 === t ? n(e, r, i) : void 0;\n        }, e.ch32 = s, e.maj32 = n, e.p32 = a, e.s0_256 = function (t) {\n          return i(t, 2) ^ i(t, 13) ^ i(t, 22);\n        }, e.s1_256 = function (t) {\n          return i(t, 6) ^ i(t, 11) ^ i(t, 25);\n        }, e.g0_256 = function (t) {\n          return i(t, 7) ^ i(t, 18) ^ t >>> 3;\n        }, e.g1_256 = function (t) {\n          return i(t, 17) ^ i(t, 19) ^ t >>> 10;\n        };\n      },\n      436: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(746),\n          s = r(378);\n        function n(t, e) {\n          return 55296 == (64512 & t.charCodeAt(e)) && !(e < 0 || e + 1 >= t.length) && 56320 == (64512 & t.charCodeAt(e + 1));\n        }\n        function a(t) {\n          return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0;\n        }\n        function o(t) {\n          return 1 === t.length ? \"0\" + t : t;\n        }\n        function h(t) {\n          return 7 === t.length ? \"0\" + t : 6 === t.length ? \"00\" + t : 5 === t.length ? \"000\" + t : 4 === t.length ? \"0000\" + t : 3 === t.length ? \"00000\" + t : 2 === t.length ? \"000000\" + t : 1 === t.length ? \"0000000\" + t : t;\n        }\n        e.inherits = s, e.toArray = function (t, e) {\n          if (Array.isArray(t)) return t.slice();\n          if (!t) return [];\n          var r = [];\n          if (\"string\" == typeof t) {\n            if (e) {\n              if (\"hex\" === e) for ((t = t.replace(/[^a-z0-9]+/gi, \"\")).length % 2 != 0 && (t = \"0\" + t), s = 0; s < t.length; s += 2) r.push(parseInt(t[s] + t[s + 1], 16));\n            } else for (var i = 0, s = 0; s < t.length; s++) {\n              var a = t.charCodeAt(s);\n              a < 128 ? r[i++] = a : a < 2048 ? (r[i++] = a >> 6 | 192, r[i++] = 63 & a | 128) : n(t, s) ? (a = 65536 + ((1023 & a) << 10) + (1023 & t.charCodeAt(++s)), r[i++] = a >> 18 | 240, r[i++] = a >> 12 & 63 | 128, r[i++] = a >> 6 & 63 | 128, r[i++] = 63 & a | 128) : (r[i++] = a >> 12 | 224, r[i++] = a >> 6 & 63 | 128, r[i++] = 63 & a | 128);\n            }\n          } else for (s = 0; s < t.length; s++) r[s] = 0 | t[s];\n          return r;\n        }, e.toHex = function (t) {\n          for (var e = \"\", r = 0; r < t.length; r++) e += o(t[r].toString(16));\n          return e;\n        }, e.htonl = a, e.toHex32 = function (t, e) {\n          for (var r = \"\", i = 0; i < t.length; i++) {\n            var s = t[i];\n            \"little\" === e && (s = a(s)), r += h(s.toString(16));\n          }\n          return r;\n        }, e.zero2 = o, e.zero8 = h, e.join32 = function (t, e, r, s) {\n          var n = r - e;\n          i(n % 4 == 0);\n          for (var a = new Array(n / 4), o = 0, h = e; o < a.length; o++, h += 4) {\n            var f;\n            f = \"big\" === s ? t[h] << 24 | t[h + 1] << 16 | t[h + 2] << 8 | t[h + 3] : t[h + 3] << 24 | t[h + 2] << 16 | t[h + 1] << 8 | t[h], a[o] = f >>> 0;\n          }\n          return a;\n        }, e.split32 = function (t, e) {\n          for (var r = new Array(4 * t.length), i = 0, s = 0; i < t.length; i++, s += 4) {\n            var n = t[i];\n            \"big\" === e ? (r[s] = n >>> 24, r[s + 1] = n >>> 16 & 255, r[s + 2] = n >>> 8 & 255, r[s + 3] = 255 & n) : (r[s + 3] = n >>> 24, r[s + 2] = n >>> 16 & 255, r[s + 1] = n >>> 8 & 255, r[s] = 255 & n);\n          }\n          return r;\n        }, e.rotr32 = function (t, e) {\n          return t >>> e | t << 32 - e;\n        }, e.rotl32 = function (t, e) {\n          return t << e | t >>> 32 - e;\n        }, e.sum32 = function (t, e) {\n          return t + e >>> 0;\n        }, e.sum32_3 = function (t, e, r) {\n          return t + e + r >>> 0;\n        }, e.sum32_4 = function (t, e, r, i) {\n          return t + e + r + i >>> 0;\n        }, e.sum32_5 = function (t, e, r, i, s) {\n          return t + e + r + i + s >>> 0;\n        }, e.sum64 = function (t, e, r, i) {\n          var s = t[e],\n            n = i + t[e + 1] >>> 0,\n            a = (n < i ? 1 : 0) + r + s;\n          t[e] = a >>> 0, t[e + 1] = n;\n        }, e.sum64_hi = function (t, e, r, i) {\n          return (e + i >>> 0 < e ? 1 : 0) + t + r >>> 0;\n        }, e.sum64_lo = function (t, e, r, i) {\n          return e + i >>> 0;\n        }, e.sum64_4_hi = function (t, e, r, i, s, n, a, o) {\n          var h = 0,\n            f = e;\n          return h += (f = f + i >>> 0) < e ? 1 : 0, h += (f = f + n >>> 0) < n ? 1 : 0, t + r + s + a + (h += (f = f + o >>> 0) < o ? 1 : 0) >>> 0;\n        }, e.sum64_4_lo = function (t, e, r, i, s, n, a, o) {\n          return e + i + n + o >>> 0;\n        }, e.sum64_5_hi = function (t, e, r, i, s, n, a, o, h, f) {\n          var c = 0,\n            u = e;\n          return c += (u = u + i >>> 0) < e ? 1 : 0, c += (u = u + n >>> 0) < n ? 1 : 0, c += (u = u + o >>> 0) < o ? 1 : 0, t + r + s + a + h + (c += (u = u + f >>> 0) < f ? 1 : 0) >>> 0;\n        }, e.sum64_5_lo = function (t, e, r, i, s, n, a, o, h, f) {\n          return e + i + n + o + f >>> 0;\n        }, e.rotr64_hi = function (t, e, r) {\n          return (e << 32 - r | t >>> r) >>> 0;\n        }, e.rotr64_lo = function (t, e, r) {\n          return (t << 32 - r | e >>> r) >>> 0;\n        }, e.shr64_hi = function (t, e, r) {\n          return t >>> r;\n        }, e.shr64_lo = function (t, e, r) {\n          return (t << 32 - r | e >>> r) >>> 0;\n        };\n      },\n      156: (t, e, r) => {\n        \"use strict\";\n\n        var i = r(715),\n          s = r(504),\n          n = r(746);\n        function a(t) {\n          if (!(this instanceof a)) return new a(t);\n          this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;\n          var e = s.toArray(t.entropy, t.entropyEnc || \"hex\"),\n            r = s.toArray(t.nonce, t.nonceEnc || \"hex\"),\n            i = s.toArray(t.pers, t.persEnc || \"hex\");\n          n(e.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._init(e, r, i);\n        }\n        t.exports = a, a.prototype._init = function (t, e, r) {\n          var i = t.concat(e).concat(r);\n          this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);\n          for (var s = 0; s < this.V.length; s++) this.K[s] = 0, this.V[s] = 1;\n          this._update(i), this._reseed = 1, this.reseedInterval = 281474976710656;\n        }, a.prototype._hmac = function () {\n          return new i.hmac(this.hash, this.K);\n        }, a.prototype._update = function (t) {\n          var e = this._hmac().update(this.V).update([0]);\n          t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest());\n        }, a.prototype.reseed = function (t, e, r, i) {\n          \"string\" != typeof e && (i = r, r = e, e = null), t = s.toArray(t, e), r = s.toArray(r, i), n(t.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._update(t.concat(r || [])), this._reseed = 1;\n        }, a.prototype.generate = function (t, e, r, i) {\n          if (this._reseed > this.reseedInterval) throw new Error(\"Reseed is required\");\n          \"string\" != typeof e && (i = r, r = e, e = null), r && (r = s.toArray(r, i || \"hex\"), this._update(r));\n          for (var n = []; n.length < t;) this.V = this._hmac().update(this.V).digest(), n = n.concat(this.V);\n          var a = n.slice(0, t);\n          return this._update(r), this._reseed++, s.encode(a, e);\n        };\n      },\n      378: (t, e, r) => {\n        try {\n          var i = r(669);\n          if (\"function\" != typeof i.inherits) throw \"\";\n          t.exports = i.inherits;\n        } catch (e) {\n          t.exports = r(717);\n        }\n      },\n      717: t => {\n        \"function\" == typeof Object.create ? t.exports = function (t, e) {\n          e && (t.super_ = e, t.prototype = Object.create(e.prototype, {\n            constructor: {\n              value: t,\n              enumerable: !1,\n              writable: !0,\n              configurable: !0\n            }\n          }));\n        } : t.exports = function (t, e) {\n          if (e) {\n            t.super_ = e;\n            var r = function () {};\n            r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;\n          }\n        };\n      },\n      484: t => {\n        \"use strict\";\n\n        var e = /([0-9]|[a-f])/gim;\n        t.exports = function (t) {\n          return \"string\" == typeof t && (t.match(e) || []).length === t.length;\n        };\n      },\n      746: t => {\n        function e(t, e) {\n          if (!t) throw new Error(e || \"Assertion failed\");\n        }\n        t.exports = e, e.equal = function (t, e, r) {\n          if (t != e) throw new Error(r || \"Assertion failed: \" + t + \" != \" + e);\n        };\n      },\n      504: (t, e) => {\n        \"use strict\";\n\n        var r = e;\n        function i(t) {\n          return 1 === t.length ? \"0\" + t : t;\n        }\n        function s(t) {\n          for (var e = \"\", r = 0; r < t.length; r++) e += i(t[r].toString(16));\n          return e;\n        }\n        r.toArray = function (t, e) {\n          if (Array.isArray(t)) return t.slice();\n          if (!t) return [];\n          var r = [];\n          if (\"string\" != typeof t) {\n            for (var i = 0; i < t.length; i++) r[i] = 0 | t[i];\n            return r;\n          }\n          if (\"hex\" === e) for ((t = t.replace(/[^a-z0-9]+/gi, \"\")).length % 2 != 0 && (t = \"0\" + t), i = 0; i < t.length; i += 2) r.push(parseInt(t[i] + t[i + 1], 16));else for (i = 0; i < t.length; i++) {\n            var s = t.charCodeAt(i),\n              n = s >> 8,\n              a = 255 & s;\n            n ? r.push(n, a) : r.push(a);\n          }\n          return r;\n        }, r.zero2 = i, r.toHex = s, r.encode = function (t, e) {\n          return \"hex\" === e ? s(t) : t;\n        };\n      },\n      601: (t, e, r) => {\n        var i = r(417),\n          s = r(357),\n          n = r(368),\n          a = r(777);\n        i.pbkdf2Sync && -1 !== i.pbkdf2Sync.toString().indexOf(\"keylen, digest\") ? (e.pbkdf2Sync = function (t, e, r, o, h) {\n          return s(r, o), t = a(t, n, \"Password\"), e = a(e, n, \"Salt\"), h = h || \"sha1\", i.pbkdf2Sync(t, e, r, o, h);\n        }, e.pbkdf2 = function (t, e, r, o, h, f) {\n          if (s(r, o), t = a(t, n, \"Password\"), e = a(e, n, \"Salt\"), \"function\" == typeof h && (f = h, h = \"sha1\"), \"function\" != typeof f) throw new Error(\"No callback provided to pbkdf2\");\n          return i.pbkdf2(t, e, r, o, h, f);\n        }) : (e.pbkdf2Sync = r(493), e.pbkdf2 = r(638));\n      },\n      638: (t, e, r) => {\n        var i,\n          s = r(509).Buffer,\n          n = r(357),\n          a = r(368),\n          o = r(493),\n          h = r(777),\n          f = global.crypto && global.crypto.subtle,\n          c = {\n            sha: \"SHA-1\",\n            \"sha-1\": \"SHA-1\",\n            sha1: \"SHA-1\",\n            sha256: \"SHA-256\",\n            \"sha-256\": \"SHA-256\",\n            sha384: \"SHA-384\",\n            \"sha-384\": \"SHA-384\",\n            \"sha-512\": \"SHA-512\",\n            sha512: \"SHA-512\"\n          },\n          u = [];\n        function d(t, e, r, i, n) {\n          return f.importKey(\"raw\", t, {\n            name: \"PBKDF2\"\n          }, !1, [\"deriveBits\"]).then(function (t) {\n            return f.deriveBits({\n              name: \"PBKDF2\",\n              salt: e,\n              iterations: r,\n              hash: {\n                name: n\n              }\n            }, t, i << 3);\n          }).then(function (t) {\n            return s.from(t);\n          });\n        }\n        t.exports = function (t, e, r, l, p, b) {\n          \"function\" == typeof p && (b = p, p = void 0);\n          var m = c[(p = p || \"sha1\").toLowerCase()];\n          if (!m || \"function\" != typeof global.Promise) return process.nextTick(function () {\n            var i;\n            try {\n              i = o(t, e, r, l, p);\n            } catch (t) {\n              return b(t);\n            }\n            b(null, i);\n          });\n          if (n(r, l), t = h(t, a, \"Password\"), e = h(e, a, \"Salt\"), \"function\" != typeof b) throw new Error(\"No callback provided to pbkdf2\");\n          !function (t, e) {\n            t.then(function (t) {\n              process.nextTick(function () {\n                e(null, t);\n              });\n            }, function (t) {\n              process.nextTick(function () {\n                e(t);\n              });\n            });\n          }(function (t) {\n            if (global.process && !global.process.browser) return Promise.resolve(!1);\n            if (!f || !f.importKey || !f.deriveBits) return Promise.resolve(!1);\n            if (void 0 !== u[t]) return u[t];\n            var e = d(i = i || s.alloc(8), i, 10, 128, t).then(function () {\n              return !0;\n            }).catch(function () {\n              return !1;\n            });\n            return u[t] = e, e;\n          }(m).then(function (i) {\n            return i ? d(t, e, r, l, m) : o(t, e, r, l, p);\n          }), b);\n        };\n      },\n      368: t => {\n        var e;\n        e = process.browser ? \"utf-8\" : process.version ? parseInt(process.version.split(\".\")[0].slice(1), 10) >= 6 ? \"utf-8\" : \"binary\" : \"utf-8\", t.exports = e;\n      },\n      357: t => {\n        var e = Math.pow(2, 30) - 1;\n        t.exports = function (t, r) {\n          if (\"number\" != typeof t) throw new TypeError(\"Iterations not a number\");\n          if (t < 0) throw new TypeError(\"Bad iterations\");\n          if (\"number\" != typeof r) throw new TypeError(\"Key length not a number\");\n          if (r < 0 || r > e || r != r) throw new TypeError(\"Bad key length\");\n        };\n      },\n      493: (t, e, r) => {\n        var i = {\n            md5: 16,\n            sha1: 20,\n            sha224: 28,\n            sha256: 32,\n            sha384: 48,\n            sha512: 64,\n            rmd160: 20,\n            ripemd160: 20\n          },\n          s = r(555),\n          n = r(509).Buffer,\n          a = r(357),\n          o = r(368),\n          h = r(777);\n        t.exports = function (t, e, r, f, c) {\n          a(r, f), t = h(t, o, \"Password\"), e = h(e, o, \"Salt\"), c = c || \"sha1\";\n          var u = n.allocUnsafe(f),\n            d = n.allocUnsafe(e.length + 4);\n          e.copy(d, 0, 0, e.length);\n          for (var l = 0, p = i[c], b = Math.ceil(f / p), m = 1; m <= b; m++) {\n            d.writeUInt32BE(m, e.length);\n            for (var g = s(c, t).update(d).digest(), y = g, w = 1; w < r; w++) {\n              y = s(c, t).update(y).digest();\n              for (var v = 0; v < p; v++) g[v] ^= y[v];\n            }\n            g.copy(u, l), l += p;\n          }\n          return u;\n        };\n      },\n      777: (t, e, r) => {\n        var i = r(509).Buffer;\n        t.exports = function (t, e, r) {\n          if (i.isBuffer(t)) return t;\n          if (\"string\" == typeof t) return i.from(t, e);\n          if (ArrayBuffer.isView(t)) return i.from(t.buffer);\n          throw new TypeError(r + \" must be a string, a Buffer, a typed array or a DataView\");\n        };\n      },\n      353: (t, e, r) => {\n        t.exports = r(417).randomBytes;\n      },\n      509: (t, e, r) => {\n        var i = r(293),\n          s = i.Buffer;\n        function n(t, e) {\n          for (var r in t) e[r] = t[r];\n        }\n        function a(t, e, r) {\n          return s(t, e, r);\n        }\n        s.from && s.alloc && s.allocUnsafe && s.allocUnsafeSlow ? t.exports = i : (n(i, e), e.Buffer = a), a.prototype = Object.create(s.prototype), n(s, a), a.from = function (t, e, r) {\n          if (\"number\" == typeof t) throw new TypeError(\"Argument must not be a number\");\n          return s(t, e, r);\n        }, a.alloc = function (t, e, r) {\n          if (\"number\" != typeof t) throw new TypeError(\"Argument must be a number\");\n          var i = s(t);\n          return void 0 !== e ? \"string\" == typeof r ? i.fill(e, r) : i.fill(e) : i.fill(0), i;\n        }, a.allocUnsafe = function (t) {\n          if (\"number\" != typeof t) throw new TypeError(\"Argument must be a number\");\n          return s(t);\n        }, a.allocUnsafeSlow = function (t) {\n          if (\"number\" != typeof t) throw new TypeError(\"Argument must be a number\");\n          return i.SlowBuffer(t);\n        };\n      },\n      293: t => {\n        \"use strict\";\n\n        t.exports = require(\"buffer\");\n      },\n      417: t => {\n        \"use strict\";\n\n        t.exports = require(\"crypto\");\n      },\n      669: t => {\n        \"use strict\";\n\n        t.exports = require(\"util\");\n      }\n    },\n    e = {};\n  function r(i) {\n    var s = e[i];\n    if (void 0 !== s) return s.exports;\n    var n = e[i] = {\n      id: i,\n      loaded: !1,\n      exports: {}\n    };\n    return t[i].call(n.exports, n, n.exports, r), n.loaded = !0, n.exports;\n  }\n  r.n = t => {\n    var e = t && t.__esModule ? () => t.default : () => t;\n    return r.d(e, {\n      a: e\n    }), e;\n  }, r.d = (t, e) => {\n    for (var i in e) r.o(e, i) && !r.o(t, i) && Object.defineProperty(t, i, {\n      enumerable: !0,\n      get: e[i]\n    });\n  }, r.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), r.r = t => {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n  }, r.nmd = t => (t.paths = [], t.children || (t.children = []), t);\n  var i = r(671);\n  module.exports = i;\n})();","map":{"version":3,"names":["p","t","e","r","a","call","b","Buffer","alloc","length","m","prototype","toString","Object","keys","forEach","create","constructor","fromHex","fromBuffer","from","toHex","toBuffer","toJSON","fromJSON","copy","fromNumber","toNumber","parseInt","fromString","endian","size","i","slice","compare","toFastBuffer","fromFastBuffer","fromSm","neg","toSm","cmp","concat","fromBits","strict","writeUInt32BE","readInt32BE","Error","s","writeInt32BE","fill","sub","toBits","lt","readUInt32BE","fromScriptNumBuffer","toScriptNumBuffer","add","mul","mod","umod","invm","div","ushln","ushrn","eq","neq","gt","geq","leq","g","fromObject","buf","pos","eof","read","readReverse","readUInt8","readInt8","readUInt16BE","readInt16BE","readUInt16LE","readInt16LE","readUInt32LE","readInt32LE","readUInt64BEBn","readUInt64LEBn","readVarIntNum","Math","pow","readVarIntBuf","readVarIntBn","y","bufs","getLength","write","push","writeReverse","writeUInt8","writeInt8","writeUInt16BE","writeInt16BE","writeUInt16LE","writeInt16LE","writeUInt32LE","writeInt32LE","writeUInt64BEBn","writeUInt64LEBn","writeVarIntNum","varIntBufNum","writeVarIntBn","varIntBufBn","floor","S","fromBr","asyncFromBr","toBw","asyncToBw","genFromBuffers","expect","n","remainderbuf","isBuffer","asyncFromBuffer","asyncToBuffer","then","v","asyncFromHex","fromFastHex","asyncToHex","toFastHex","asyncFromString","asyncToString","asyncFromJSON","Array","isArray","JSON","stringify","Map","asyncToJSON","clone","cloneByJSON","cloneByBuffer","cloneByFastBuffer","cloneByHex","cloneByString","_","encode","h","decode","B","I","resbuf","isError","id","fromResult","fromError","message","Number","Boolean","O","E","nativeWorkers","lastid","incompconsteRes","promisemap","asyncObjectMethod","asyncClassMethod","endGlobalWorkers","process","browser","P","sha1","d","update","digest","blockSize","asyncSha1","sha256","asyncSha256","sha256Sha256","asyncSha256Sha256","ripemd160","asyncRipemd160","sha256Ripemd160","asyncSha256Ripemd160","sha512","asyncSha512","hmac","sha1Hmac","asyncSha1Hmac","bitsize","sha256Hmac","asyncSha256Hmac","sha512Hmac","asyncSha512Hmac","k","N","keyDefined","getValue","get","A","variables","build","addValue","addValueWithDefault","env","NETWORK","x","Mainnet","MaxSize","Port","Address","pubKeyHash","payToScriptHash","Bip32","pubKey","privKey","Block","maxNBits","magicNum","Msg","versionBytesNum","PrivKey","versionByteNum","TxBuilder","dust","feePerKbNum","Workers","timeout","Testnet","assign","Regtest","STN","Default","R","M","OP_FALSE","OP_0","OP_PUSHDATA1","OP_PUSHDATA2","OP_PUSHDATA4","OP_1NEGATE","OP_RESERVED","OP_TRUE","OP_1","OP_2","OP_3","OP_4","OP_5","OP_6","OP_7","OP_8","OP_9","OP_10","OP_11","OP_12","OP_13","OP_14","OP_15","OP_16","OP_NOP","OP_VER","OP_IF","OP_NOTIF","OP_VERIF","OP_VERNOTIF","OP_ELSE","OP_ENDIF","OP_VERIFY","OP_RETURN","OP_TOALTSTACK","OP_FROMALTSTACK","OP_2DROP","OP_2DUP","OP_3DUP","OP_2OVER","OP_2ROT","OP_2SWAP","OP_IFDUP","OP_DEPTH","OP_DROP","OP_DUP","OP_NIP","OP_OVER","OP_PICK","OP_ROLL","OP_ROT","OP_SWAP","OP_TUCK","OP_CAT","OP_SUBSTR","OP_SPLIT","OP_LEFT","OP_NUM2BIN","OP_RIGHT","OP_BIN2NUM","OP_SIZE","OP_INVERT","OP_AND","OP_OR","OP_XOR","OP_EQUAL","OP_EQUALVERIFY","OP_RESERVED1","OP_RESERVED2","OP_1ADD","OP_1SUB","OP_2MUL","OP_2DIV","OP_NEGATE","OP_ABS","OP_NOT","OP_0NOTEQUAL","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_LSHIFT","OP_RSHIFT","OP_BOOLAND","OP_BOOLOR","OP_NUMEQUAL","OP_NUMEQUALVERIFY","OP_NUMNOTEQUAL","OP_LESSTHAN","OP_GREATERTHAN","OP_LESSTHANOREQUAL","OP_GREATERTHANOREQUAL","OP_MIN","OP_MAX","OP_WITHIN","OP_RIPEMD160","OP_SHA1","OP_SHA256","OP_HASH160","OP_HASH256","OP_CODESEPARATOR","OP_CHECKSIG","OP_CHECKSIGVERIFY","OP_CHECKMULTISIG","OP_CHECKMULTISIGVERIFY","OP_NOP1","OP_NOP2","OP_CHECKLOCKTIMEVERIFY","OP_NOP3","OP_CHECKSEQUENCEVERIFY","OP_NOP4","OP_NOP5","OP_NOP6","OP_NOP7","OP_NOP8","OP_NOP9","OP_NOP10","OP_SMALLDATA","OP_SMALLINTEGER","OP_PUBKEYS","OP_PUBKEYHASH","OP_PUBKEY","OP_INVALIDOPCODE","T","num","str","hasOwnProperty","C","c","curves","secp256k1","H","curve","point","L","fromX","pointFromX","copyFrom","bind","getN","mulAdd","getX","getY","parse","getG","toArray","validate","isOdd","K","compressed","fromPrivKey","bn","asyncFromPrivKey","fromDer","toDer","isCompressedOrUncompressed","isInfinity","D","getRandomBuffer","U","V","Constants","fromRandom","fromBn","toBn","toWif","fromWif","j","nHashType","recovery","fromCompact","fromTxFormat","toTxFormat","toCompact","fromRS","parseDer","o","f","u","l","header","rheader","rlength","rneg","rbuf","sheader","slength","sneg","sbuf","IsTxDer","hasLowS","hasDefinedHashType","SIGHASH_ALL","SIGHASH_SINGLE","toRS","SIGHASH_NONE","SIGHASH_FORKID","SIGHASH_ANYONECANPAY","q","chunks","len","opCodeNum","split","substr","fromBitcoindString","writeBuffer","isNaN","writeBn","toBitcoindString","fromAsmString","toAsmString","_chunkToString","fromOpReturnData","writeOpCode","fromSafeData","fromSafeDataArray","getData","isSafeDataOut","map","isOpReturn","fromPubKeyHash","sortPubKeys","sort","max","fromPubKeys","removeCodeseparators","isPushOnly","isNonSpendable","filter","isPubKeyHashOut","isPubKeyHashIn","isScriptHashOut","isScriptHashIn","isMultiSigOut","every","isMultiSigIn","findAndDelete","splice","writeScript","writeString","setChunkOpCode","writeNumber","setChunkBn","setChunkBuffer","checkMinimalPush","z","hashBuf","fromPubKeyHashBuf","fromPubKey","asyncFromPubKey","asyncFromRandom","isValid","toTxOutScript","fromTxInScript","repeat","fromTxOutScript","G","depth","parentFingerPrint","childIndex","chainCode","fromSeed","asyncFromSeed","derive","replace","deriveChild","asyncDerive","toPublic","isPrivate","J","space","Y","mnemonic","seed","Wordlist","entropy2Mnemonic","mnemonic2Seed","fromEntropy","asyncFromEntropy","toSeed","asyncToSeed","check","indexOf","normalize","pbkdf2Sync","W","Q","X","sig","keyPair","verified","calcrecovery","sig2PubKey","asyncCalcrecovery","randomK","deterministicK","asyncSig2PubKey","verifyStr","sign","asyncSign","signRandomK","verify","asyncVerify","Z","messageBuf","address","magicHash","magicBytes","asyncMagicHash","$","prevBlockHashBuf","merkleRootBuf","time","bits","nonce","tt","merkle1","merkle2","hash","fromBuffers","log2","isInteger","ceil","fromBufferArrays","leavesNum","et","prevoutsHashBuf","sequenceHashBuf","outputsHashBuf","rt","it","txHashBuf","txOutNum","scriptVi","script","nSequence","setScript","fromProperties","fromPubKeyHashTxOut","hasNullInput","setNullInput","LOCKTIME_VERIFY_SEQUENCE","SEQUENCE_FINAL","SEQUENCE_LOCKTIME_DISABLE_FLAG","SEQUENCE_LOCKTIME_TYPE_FLAG","SEQUENCE_LOCKTIME_MASK","SEQUENCE_LOCKTIME_GRANULARITY","st","valueBn","nt","txInsVi","txIns","txOutsVi","txOuts","nLockTime","hashPrevouts","hashSequence","hashOutputs","sighash","sighashPreimage","asyncSighash","SCRIPT_ENABLE_SIGHASH_FORKID","asyncSighashPreimage","asyncHash","asyncId","addTxIn","addTxOut","isCoinbase","MAX_MONEY","at","blockHeader","txsVi","txs","verifyMerkleRoot","iterateTxs","txsNum","Symbol","iterator","MAX_BLOCK_SIZE","ot","defaultFlags","tx","nIn","stack","altStack","pc","pBeginCodeHash","nOpCount","ifStack","errStr","flags","initialize","fromJSONNoTx","toJSONNoTx","getFlags","SCRIPT_VERIFY_NONE","SCRIPT_VERIFY_P2SH","SCRIPT_VERIFY_STRICTENC","SCRIPT_VERIFY_DERSIG","SCRIPT_VERIFY_LOW_S","SCRIPT_VERIFY_NULLDUMMY","SCRIPT_VERIFY_SIGPUSHONLY","SCRIPT_VERIFY_MINIMALDATA","SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS","SCRIPT_VERIFY_CLEANSTACK","SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY","SCRIPT_VERIFY_CHECKSEQUENCEVERIFY","castToBool","checkSigEncoding","checkPubKeyEncoding","checkLockTime","LOCKTIME_THRESHOLD","checkSequence","eval","step","MAX_SCRIPT_ELEMENT_SIZE","false","pop","true","results","getDebugObject","scriptStr","opCodeStr","getDebugString","ht","nScriptChunk","type","addressStr","log","set","setOne","setMany","addOne","ft","setTx","ct","ut","uTxOutMap","sigOperations","changeScript","changeAmountBn","feeAmountBn","sigsPerInput","dustChangeToFees","hashCache","setFeePerKbNum","setChangeAddress","setChangeScript","setNLocktime","setVersion","setDust","sendDustChangeToFees","importPartiallySignedTx","inputFromScript","addSigOperation","inputFromPubKeyHash","outputToAddress","outputToScript","buildOutputs","buildInputs","estimateSize","round","estimateFee","useAllInputs","includes","allSigsPresent","removeBlankSigs","fillSig","getSig","asyncGetSig","signTxIn","asyncSignTxIn","signWithKeyPairs","dt","txOutMap","interp","checkStr","asyncVerifyStr","verifyNIn","asyncVerifyNIn","console","interpFailure","encrypt","buf2Words","words2Buf","decrypt","pt","buf2BlocksBuf","pkcs7Pad","blockBufs2Buf","pkcs7Unpad","encryptBlocks","decryptBlocks","encryptBlock","xorBufs","decryptBlock","bt","mt","asyncEncrypt","asyncDecrypt","ivkEkM","iv","kE","kM","electrumEncrypt","electrumDecrypt","equals","bitcoreEncrypt","asyncBitcoreEncrypt","bitcoreDecrypt","asyncBitcoreDecrypt","yt","aes","bnjs","bs58","elliptic","hashjs","pbkdf2","wt","_tables","_precompute","_key","exports","_crypt","Uint32Array","Uint8Array","w","TypeError","charAt","charCodeAt","allocUnsafe","decodeUnsafe","version","i8","utils","rand","ec","getNAF","getJSF","assert","red","prime","mont","zero","toRed","one","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","bitLength","cmpn","redN","_maxwellTrick","precomputed","_fixedNafMul","_getDoubles","jpoint","mixedAdd","points","toP","_wnafMul","_getNAFPoints","wnd","dblp","_wnafMulAdd","toJ","redNeg","BasePoint","decodePoint","byteLength","encodeCompressed","_encode","isEven","precompute","doubles","naf","beta","_getBeta","_hasDoubles","dbl","base","short","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inf","forceRed","zOne","modn","_getEndoRoots","lambda","redMul","basis","_getEndoBasis","redSqrt","redAdd","redSub","sqr","negative","_endoSplit","divRound","k1","k2","redSqr","redIAdd","redISub","_endoWnafMulAdd","ineg","endoMul","inspect","jmulAdd","negate","_zeroDbl","_threeDbl","_dbl","trpl","eqXToP","iadd","PresetCurve","defineProperty","configurable","enumerable","value","nh","keyFromPrivate","fromPrivate","keyFromPublic","fromPublic","genKeyPair","pers","persEnc","entropy","hmacStrength","entropyEnc","generate","iaddn","_truncateToN","getPrivate","canonical","recoveryParam","getPublic","recoverPubKey","getKeyRecoveryParam","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","result","reason","_importDER","place","LN2","toDER","zero2","andln","isubn","iushrn","cachedProperty","parseBytes","intFromLE","super_","TempCtor","isBN","words","_init","BN","wordSize","window","min","_initNumber","_initArray","_parseHex","_parseBase","_strip","imuln","_iaddn","_move","_expand","_normSign","for","isZero","modrn","idivn","toArrayLike","_toArrayLikeLE","_toArrayLikeBE","clz32","_countBits","_zeroBits","zeroBits","toTwos","abs","inotn","fromTwos","testn","notn","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","setn","isub","comb10MulTo","F","imul","vt","St","_t","Bt","It","Ot","Et","Pt","kt","Nt","At","xt","Rt","Mt","Tt","mulTo","makeRBT","revBin","permute","transform","cos","PI","sin","guessLen13b","conjugate","normalize13b","convert13b","stub","mulp","mulf","muln","isqr","iushln","ishln","ishrn","shln","shrn","imaskn","maskn","addn","subn","iabs","_ishlnsubmul","_wordDiv","divmod","divn","egcd","gcd","_invmp","bincn","ucmp","gtn","gten","gte","ltn","lten","lte","eqn","convertTo","_forceRed","convertFrom","redShl","shl","_verify2","redIMul","_verify1","redISqr","sqrt","redPow","k256","p224","p192","p25519","name","tmp","_tmp","_prime","shift","r2","imod","rinv","minv","ireduce","imulK","strip","Rand","_rand","getBytes","getByte","self","crypto","getRandomValues","msCrypto","randomBytes","createHmac","common","sha","ripemd","sha224","sha384","pending","pendingTotal","outSize","padLength","_delta8","_delta32","BlockHash","join32","_update","_pad","_digest","Hash","inner","outer","rotl32","sum32","sum32_3","sum32_4","inherits","toHex32","split32","sum32_5","ft_1","ch32","maj32","s0_256","s1_256","g0_256","g1_256","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","_prepareBlock","rotr32","p32","htonl","zero8","predResist","outLen","minEntropy","_reseed","reseedInterval","nonceEnc","_hmac","reseed","writable","match","equal","global","subtle","importKey","deriveBits","salt","iterations","toLowerCase","Promise","nextTick","resolve","catch","md5","rmd160","ArrayBuffer","isView","buffer","allocUnsafeSlow","SlowBuffer","require","loaded","__esModule","default","toStringTag","nmd","paths","children"],"sources":["webpack://bsv/lib/bn.js","webpack://bsv/lib/br.js","webpack://bsv/lib/bw.js","webpack://bsv/lib/struct.js","webpack://bsv/lib/base-58.js","webpack://bsv/lib/cmp.js","webpack://bsv/lib/workers-result.js","webpack://bsv/lib/workers.js","webpack://bsv/lib/hash.js","webpack://bsv/lib/base-58-check.js","webpack://bsv/lib/config.js","webpack://bsv/lib/constants.js","webpack://bsv/lib/op-code.js","webpack://bsv/lib/point.js","webpack://bsv/lib/pub-key.js","webpack://bsv/lib/random.js","webpack://bsv/lib/priv-key.js","webpack://bsv/lib/sig.js","webpack://bsv/lib/script.js","webpack://bsv/lib/address.js","webpack://bsv/lib/bip-32.js","webpack://bsv/lib/bip-39-en-wordlist.js","webpack://bsv/lib/bip-39.js","webpack://bsv/lib/bip-39-jp-wordlist.js","webpack://bsv/lib/key-pair.js","webpack://bsv/lib/ecdsa.js","webpack://bsv/lib/bsm.js","webpack://bsv/lib/block-header.js","webpack://bsv/lib/merkle.js","webpack://bsv/lib/hash-cache.js","webpack://bsv/lib/var-int.js","webpack://bsv/lib/tx-in.js","webpack://bsv/lib/tx-out.js","webpack://bsv/lib/tx.js","webpack://bsv/lib/block.js","webpack://bsv/lib/interp.js","webpack://bsv/lib/sig-operations.js","webpack://bsv/lib/tx-out-map.js","webpack://bsv/lib/tx-builder.js","webpack://bsv/lib/tx-verifier.js","webpack://bsv/lib/aes.js","webpack://bsv/lib/cbc.js","webpack://bsv/lib/aescbc.js","webpack://bsv/lib/ach.js","webpack://bsv/lib/ecies.js","webpack://bsv/entry.js","webpack://bsv/node_modules/aes/lib/aes.js","webpack://bsv/node_modules/base-x/src/index.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/curve/base.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/curve/index.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/curve/short.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/curves.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/ec/index.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/ec/key.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/ec/signature.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/precomputed/secp256k1.js","webpack://bsv/node_modules/bitcoin-elliptic/lib/elliptic/utils.js","webpack://bsv/node_modules/bn.js/lib/bn.js","webpack://bsv/node_modules/brorand/index.js","webpack://bsv/node_modules/bs58/index.js","webpack://bsv/node_modules/create-hmac/index.js","webpack://bsv/node_modules/hash.js/lib/hash.js","webpack://bsv/node_modules/hash.js/lib/hash/common.js","webpack://bsv/node_modules/hash.js/lib/hash/hmac.js","webpack://bsv/node_modules/hash.js/lib/hash/ripemd.js","webpack://bsv/node_modules/hash.js/lib/hash/sha.js","webpack://bsv/node_modules/hash.js/lib/hash/sha/1.js","webpack://bsv/node_modules/hash.js/lib/hash/sha/224.js","webpack://bsv/node_modules/hash.js/lib/hash/sha/256.js","webpack://bsv/node_modules/hash.js/lib/hash/sha/384.js","webpack://bsv/node_modules/hash.js/lib/hash/sha/512.js","webpack://bsv/node_modules/hash.js/lib/hash/sha/common.js","webpack://bsv/node_modules/hash.js/lib/hash/utils.js","webpack://bsv/node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://bsv/node_modules/inherits/inherits.js","webpack://bsv/node_modules/inherits/inherits_browser.js","webpack://bsv/node_modules/is-hex/is-hex.js","webpack://bsv/node_modules/minimalistic-assert/index.js","webpack://bsv/node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://bsv/node_modules/pbkdf2/index.js","webpack://bsv/node_modules/pbkdf2/lib/async.js","webpack://bsv/node_modules/pbkdf2/lib/default-encoding.js","webpack://bsv/node_modules/pbkdf2/lib/precondition.js","webpack://bsv/node_modules/pbkdf2/lib/sync.js","webpack://bsv/node_modules/pbkdf2/lib/to-buffer.js","webpack://bsv/node_modules/randombytes/index.js","webpack://bsv/node_modules/safe-buffer/index.js","webpack://bsv/external \"buffer\"","webpack://bsv/external \"crypto\"","webpack://bsv/external \"util\"","webpack://bsv/webpack/bootstrap","webpack://bsv/webpack/runtime/compat get default export","webpack://bsv/webpack/runtime/define property getters","webpack://bsv/webpack/runtime/hasOwnProperty shorthand","webpack://bsv/webpack/runtime/make namespace object","webpack://bsv/webpack/runtime/node module decorator","webpack://bsv/webpack/startup"],"sourcesContent":["/**\n * Big Number\n * ==========\n *\n * Since javascript numbers are only precise up to 53 bits, and bitcoin is\n * based on cryptography that uses 256 bit numbers, we must use a big number\n * library. The library we use at the moment is Fedor Indutny's bn.js library.\n * Since big numbers are extremely useful, we provide some very basic wrappers\n * for his big number class and expose it. The wrappers merely allow you to do,\n * say, bn.cmp(num) instead of just bn.cmp(bn), which is nice. The primary way\n * to use this is:\n * const bn = Bn(str) // str is base 10\n * const bn = Bn(num)\n * const bn = Bn().fromBuffer(buf)\n * const bn = Bn().fromSm(buf); // sign+magnitude format, first bit is sign\n *\n * For little endian, pass in an options value:\n * const bn = Bn().fromBuffer(buf, {endian: 'little'})\n * const bn = Bn().fromSm(buf, {endian: 'little'})\n *\n * Getting output:\n * const str = Bn().toString() // produces base 10 string\n * const buf = Bn().toBuffer() // produces buffer representation\n * const buf = Bn().toBuffer({size: 32}) //produced 32 byte buffer\n */\n'use strict'\n\nimport _Bn from 'bn.js'\n\nfunction Bn (n, base, ...rest) {\n  if (!(this instanceof Bn)) {\n    return new Bn(n, base, ...rest)\n  }\n  _Bn.call(this, n, base, ...rest)\n}\n\nObject.keys(_Bn).forEach(function (key) {\n  Bn[key] = _Bn[key]\n})\nBn.prototype = Object.create(_Bn.prototype)\nBn.prototype.constructor = Bn\n\nfunction reverseBuf (buf) {\n  const buf2 = Buffer.alloc(buf.length)\n  for (let i = 0; i < buf.length; i++) {\n    buf2[i] = buf[buf.length - 1 - i]\n  }\n  return buf2\n}\n\nBn.prototype.fromHex = function (hex, opts) {\n  return this.fromBuffer(Buffer.from(hex, 'hex'), opts)\n}\n\nBn.prototype.toHex = function (opts) {\n  return this.toBuffer(opts).toString('hex')\n}\n\nBn.prototype.toJSON = function () {\n  return this.toString()\n}\n\nBn.prototype.fromJSON = function (str) {\n  const bn = Bn(str)\n  bn.copy(this)\n  return this\n}\n\nBn.prototype.fromNumber = function (n) {\n  const bn = Bn(n)\n  bn.copy(this)\n  return this\n}\n\nBn.prototype.toNumber = function () {\n  return parseInt(this.toString(10), 10)\n}\n\nBn.prototype.fromString = function (str, base) {\n  const bn = Bn(str, base)\n  bn.copy(this)\n  return this\n}\n\nBn.fromBuffer = function (buf, opts = { endian: 'big' }) {\n  if (opts.endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n  const hex = buf.toString('hex')\n  const bn = new Bn(hex, 16)\n  return bn\n}\n\nBn.prototype.fromBuffer = function (buf, opts) {\n  const bn = Bn.fromBuffer(buf, opts)\n  bn.copy(this)\n\n  return this\n}\n\nBn.prototype.toBuffer = function (opts = { size: undefined, endian: 'big' }) {\n  let buf\n  if (opts.size) {\n    const hex = this.toString(16, 2)\n    const natlen = hex.length / 2\n    buf = Buffer.from(hex, 'hex')\n\n    if (natlen === opts.size) {\n      // pass\n    } else if (natlen > opts.size) {\n      buf = buf.slice(natlen - buf.length, buf.length)\n    } else if (natlen < opts.size) {\n      const rbuf = Buffer.alloc(opts.size)\n      for (let i = 0; i < buf.length; i++) {\n        rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i]\n      }\n      for (let i = 0; i < opts.size - natlen; i++) {\n        rbuf[i] = 0\n      }\n      buf = rbuf\n    }\n  } else {\n    const hex = this.toString(16, 2)\n    buf = Buffer.from(hex, 'hex')\n  }\n\n  if (opts.endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n  const longzero = Buffer.from([0])\n  if (Buffer.compare(buf, longzero) === 0) {\n    return Buffer.from([])\n  }\n  return buf\n}\n\nBn.prototype.toFastBuffer = Bn.prototype.toBuffer\n\nBn.fromFastBuffer = Bn.fromBuffer\nBn.prototype.fromFastBuffer = Bn.prototype.fromBuffer\n\n/**\n   * Signed magnitude buffer. Most significant bit represents sign (0 = positive,\n   * 1 = negative).\n   */\nBn.prototype.fromSm = function (buf, opts = { endian: 'big' }) {\n  if (buf.length === 0) {\n    this.fromBuffer(Buffer.from([0]))\n  }\n\n  const endian = opts.endian\n  if (endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n\n  if (buf[0] & 0x80) {\n    buf[0] = buf[0] & 0x7f\n    this.fromBuffer(buf)\n    this.neg().copy(this)\n  } else {\n    this.fromBuffer(buf)\n  }\n  return this\n}\n\nBn.prototype.toSm = function (opts = { endian: 'big' }) {\n  const endian = opts.endian\n\n  let buf\n  if (this.cmp(0) === -1) {\n    buf = this.neg().toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x80]), buf])\n    } else {\n      buf[0] = buf[0] | 0x80\n    }\n  } else {\n    buf = this.toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x00]), buf])\n    }\n  }\n\n  if ((buf.length === 1) & (buf[0] === 0)) {\n    buf = Buffer.from([])\n  }\n\n  if (endian === 'little') {\n    buf = reverseBuf(buf)\n  }\n\n  return buf\n}\n\n/**\n   * Produce a Bn from the \"bits\" value in a blockheader. Analagous to Bitcoin\n   * Core's uint256 SetCompact method. bits is assumed to be UInt32.\n   */\nBn.prototype.fromBits = function (bits, opts = { strict: false }) {\n  // To performed bitwise operations in javascript, we need to convert to a\n  // signed 32 bit value.\n  let buf = Buffer.alloc(4)\n  buf.writeUInt32BE(bits, 0)\n  bits = buf.readInt32BE(0)\n  if (opts.strict && bits & 0x00800000) {\n    throw new Error('negative bit set')\n  }\n  const nsize = bits >> 24\n  const nword = bits & 0x007fffff\n  buf = Buffer.alloc(4)\n  buf.writeInt32BE(nword)\n  if (nsize <= 3) {\n    buf = buf.slice(1, nsize + 1)\n  } else {\n    const fill = Buffer.alloc(nsize - 3)\n    fill.fill(0)\n    buf = Buffer.concat([buf, fill])\n  }\n  this.fromBuffer(buf)\n  if (bits & 0x00800000) {\n    Bn(0)\n      .sub(this)\n      .copy(this)\n  }\n  return this\n}\n\n/**\n   * Convert Bn to the \"bits\" value in a blockheader. Analagous to Bitcoin\n   * Core's uint256 GetCompact method. bits is a UInt32.\n   */\nBn.prototype.toBits = function () {\n  let buf\n  if (this.lt(0)) {\n    buf = this.neg().toBuffer()\n  } else {\n    buf = this.toBuffer()\n  }\n  let nsize = buf.length\n  let nword\n  if (nsize > 3) {\n    nword = Buffer.concat([Buffer.from([0]), buf.slice(0, 3)]).readUInt32BE(0)\n  } else if (nsize <= 3) {\n    const blank = Buffer.alloc(3 - nsize + 1)\n    blank.fill(0)\n    nword = Buffer.concat([blank, buf.slice(0, nsize)]).readUInt32BE(0)\n  }\n  if (nword & 0x00800000) {\n    // The most significant bit denotes sign. Do not want unless number is\n    // actually negative.\n    nword >>= 8\n    nsize++\n  }\n  if (this.lt(0)) {\n    nword |= 0x00800000\n  }\n  const bits = (nsize << 24) | nword\n  // convert bits to UInt32 before returning\n  buf = Buffer.alloc(4)\n  buf.writeInt32BE(bits, 0)\n  return buf.readUInt32BE(0)\n}\n\n// This is analogous to the constructor for CScriptNum in bitcoind. Many ops\n// in bitcoind's script interpreter use CScriptNum, which is not really a\n// proper bignum. Instead, an error is thrown if trying to input a number\n// bigger than 4 bytes. We copy that behavior here. There is one exception -\n// in CHECKLOCKTIMEVERIFY, the numbers are allowed to be up to 5 bytes long.\n// We allow for setting that variable here for use in CHECKLOCKTIMEVERIFY.\nBn.prototype.fromScriptNumBuffer = function (\n  buf,\n  fRequireMinimal,\n  nMaxNumSize\n) {\n  if (nMaxNumSize === undefined) {\n    nMaxNumSize = 4\n  }\n  if (buf.length > nMaxNumSize) {\n    throw new Error('script number overflow')\n  }\n  if (fRequireMinimal && buf.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        throw new Error('non-minimally encoded script number')\n      }\n    }\n  }\n  return this.fromSm(buf, { endian: 'little' })\n}\n\n// The corollary to the above, with the notable exception that we do not throw\n// an error if the output is larger than four bytes. (Which can happen if\n// performing a numerical operation that results in an overflow to more than 4\n// bytes).\nBn.prototype.toScriptNumBuffer = function (buf) {\n  return this.toSm({ endian: 'little' })\n}\n\nBn.prototype.neg = function () {\n  const _neg = _Bn.prototype.neg.call(this)\n  const neg = Object.create(Bn.prototype)\n  _neg.copy(neg)\n  return neg\n}\n\nBn.prototype.add = function (bn) {\n  const _bn = _Bn.prototype.add.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.sub = function (bn) {\n  const _bn = _Bn.prototype.sub.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.mul = function (bn) {\n  const _bn = _Bn.prototype.mul.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\n/**\n   * to be used if this is positive.\n   */\nBn.prototype.mod = function (bn) {\n  const _bn = _Bn.prototype.mod.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\n/**\n   * to be used if this is negative.\n   */\nBn.prototype.umod = function (bn) {\n  const _bn = _Bn.prototype.umod.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.invm = function (bn) {\n  const _bn = _Bn.prototype.invm.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.div = function (bn) {\n  const _bn = _Bn.prototype.div.call(this, bn)\n  bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.ushln = function (bits) {\n  const _bn = _Bn.prototype.ushln.call(this, bits)\n  const bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.ushrn = function (bits) {\n  const _bn = _Bn.prototype.ushrn.call(this, bits)\n  const bn = Object.create(Bn.prototype)\n  _bn.copy(bn)\n  return bn\n}\n\nBn.prototype.cmp = function (bn) {\n  return _Bn.prototype.cmp.call(this, bn)\n}\n\n/**\n   * All the standard big number operations operate on other big numbers. e.g.,\n   * bn1.add(bn2). But it is frequenly valuble to add numbers or strings, e.g.\n   * bn.add(5) or bn.add('5'). The decorator wraps all methods where this would\n   * be convenient and makes that possible.\n   */\nfunction decorate (name) {\n  Bn.prototype['_' + name] = Bn.prototype[name]\n  const f = function (b) {\n    if (typeof b === 'string') {\n      b = new Bn(b)\n    } else if (typeof b === 'number') {\n      b = new Bn(b.toString())\n    }\n    return this['_' + name](b)\n  }\n  Bn.prototype[name] = f\n}\n\nBn.prototype.eq = function (b) {\n  return this.cmp(b) === 0\n}\n\nBn.prototype.neq = function (b) {\n  return this.cmp(b) !== 0\n}\n\nBn.prototype.gt = function (b) {\n  return this.cmp(b) > 0\n}\n\nBn.prototype.geq = function (b) {\n  return this.cmp(b) >= 0\n}\n\nBn.prototype.lt = function (b) {\n  return this.cmp(b) < 0\n}\n\nBn.prototype.leq = function (b) {\n  return this.cmp(b) <= 0\n}\n\ndecorate('add')\ndecorate('sub')\ndecorate('mul')\ndecorate('mod')\ndecorate('invm')\ndecorate('div')\ndecorate('cmp')\ndecorate('gt')\ndecorate('geq')\ndecorate('lt')\ndecorate('leq')\n\nexport { Bn }\n","/**\n * Buffer Reader\n * =============\n *\n * This is a convenience class for reading VarInts and other basic types from a\n * buffer. This class is most useful for reading VarInts, and also for signed\n * or unsigned integers of various types. It can also read a buffer in reverse\n * order, which is useful in bitcoin which uses little endian numbers a lot so\n * you find that you must reverse things. You probably want to use it like:\n * varInt = new Br(buf).readnew VarInt()\n */\n'use strict'\n\nimport { Bn } from './bn'\n\nclass Br {\n  constructor (buf) {\n    this.fromObject({ buf })\n  }\n\n  fromObject (obj) {\n    this.buf = obj.buf || this.buf || undefined\n    this.pos = obj.pos || this.pos || 0\n    return this\n  }\n\n  eof () {\n    return this.pos >= this.buf.length\n  }\n\n  read (len = this.buf.length) {\n    const buf = this.buf.slice(this.pos, this.pos + len)\n    this.pos = this.pos + len\n    return buf\n  }\n\n  readReverse (len = this.buf.length) {\n    const buf = this.buf.slice(this.pos, this.pos + len)\n    this.pos = this.pos + len\n    const buf2 = Buffer.alloc(buf.length)\n    for (let i = 0; i < buf2.length; i++) {\n      buf2[i] = buf[buf.length - 1 - i]\n    }\n    return buf2\n  }\n\n  readUInt8 () {\n    const val = this.buf.readUInt8(this.pos)\n    this.pos = this.pos + 1\n    return val\n  }\n\n  readInt8 () {\n    const val = this.buf.readInt8(this.pos)\n    this.pos = this.pos + 1\n    return val\n  }\n\n  readUInt16BE () {\n    const val = this.buf.readUInt16BE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readInt16BE () {\n    const val = this.buf.readInt16BE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readUInt16LE () {\n    const val = this.buf.readUInt16LE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readInt16LE () {\n    const val = this.buf.readInt16LE(this.pos)\n    this.pos = this.pos + 2\n    return val\n  }\n\n  readUInt32BE () {\n    const val = this.buf.readUInt32BE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readInt32BE () {\n    const val = this.buf.readInt32BE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readUInt32LE () {\n    const val = this.buf.readUInt32LE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readInt32LE () {\n    const val = this.buf.readInt32LE(this.pos)\n    this.pos = this.pos + 4\n    return val\n  }\n\n  readUInt64BEBn () {\n    const buf = this.buf.slice(this.pos, this.pos + 8)\n    const bn = new Bn().fromBuffer(buf)\n    this.pos = this.pos + 8\n    return bn\n  }\n\n  readUInt64LEBn () {\n    const buf = this.readReverse(8)\n    const bn = new Bn().fromBuffer(buf)\n    return bn\n  }\n\n  readVarIntNum () {\n    const first = this.readUInt8()\n    let bn, n\n    switch (first) {\n      case 0xfd:\n        return this.readUInt16LE()\n      case 0xfe:\n        return this.readUInt32LE()\n      case 0xff:\n        bn = this.readUInt64LEBn()\n        n = bn.toNumber()\n        if (n <= Math.pow(2, 53)) {\n          return n\n        } else {\n          throw new Error(\n            'number too large to retain precision - use readVarIntBn'\n          )\n        }\n      default:\n        return first\n    }\n  }\n\n  readVarIntBuf () {\n    const first = this.buf.readUInt8(this.pos)\n    switch (first) {\n      case 0xfd:\n        return this.read(1 + 2)\n      case 0xfe:\n        return this.read(1 + 4)\n      case 0xff:\n        return this.read(1 + 8)\n      default:\n        return this.read(1)\n    }\n  }\n\n  readVarIntBn () {\n    const first = this.readUInt8()\n    switch (first) {\n      case 0xfd:\n        return new Bn(this.readUInt16LE())\n      case 0xfe:\n        return new Bn(this.readUInt32LE())\n      case 0xff:\n        return this.readUInt64LEBn()\n      default:\n        return new Bn(first)\n    }\n  }\n}\n\nexport { Br }\n","/**\n * Buffer Writer\n * =============\n *\n * This is the writing complement of the Br. You can easily write\n * VarInts and other basic number types. The way to use it is: buf =\n * new Bw().write(buf1).write(buf2).toBuffer()\n */\n'use strict'\n\nclass Bw {\n  constructor (bufs) {\n    this.fromObject({ bufs })\n  }\n\n  fromObject (obj) {\n    this.bufs = obj.bufs || this.bufs || []\n    return this\n  }\n\n  getLength () {\n    let len = 0\n    for (const i in this.bufs) {\n      const buf = this.bufs[i]\n      len = len + buf.length\n    }\n    return len\n  }\n\n  toBuffer () {\n    return Buffer.concat(this.bufs)\n  }\n\n  write (buf) {\n    this.bufs.push(buf)\n    return this\n  }\n\n  writeReverse (buf) {\n    const buf2 = Buffer.alloc(buf.length)\n    for (let i = 0; i < buf2.length; i++) {\n      buf2[i] = buf[buf.length - 1 - i]\n    }\n    this.bufs.push(buf2)\n    return this\n  }\n\n  writeUInt8 (n) {\n    const buf = Buffer.alloc(1)\n    buf.writeUInt8(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt8 (n) {\n    const buf = Buffer.alloc(1)\n    buf.writeInt8(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt16BE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeUInt16BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt16BE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeInt16BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt16LE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeUInt16LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt16LE (n) {\n    const buf = Buffer.alloc(2)\n    buf.writeInt16LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt32BE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeUInt32BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt32BE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeInt32BE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt32LE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeUInt32LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeInt32LE (n) {\n    const buf = Buffer.alloc(4)\n    buf.writeInt32LE(n, 0)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt64BEBn (bn) {\n    const buf = bn.toBuffer({ size: 8 })\n    this.write(buf)\n    return this\n  }\n\n  writeUInt64LEBn (bn) {\n    const buf = bn.toBuffer({ size: 8 })\n    this.writeReverse(buf)\n    return this\n  }\n\n  writeVarIntNum (n) {\n    const buf = Bw.varIntBufNum(n)\n    this.write(buf)\n    return this\n  }\n\n  writeVarIntBn (bn) {\n    const buf = Bw.varIntBufBn(bn)\n    this.write(buf)\n    return this\n  }\n\n  static varIntBufNum (n) {\n    let buf\n    if (n < 253) {\n      buf = Buffer.alloc(1)\n      buf.writeUInt8(n, 0)\n    } else if (n < 0x10000) {\n      buf = Buffer.alloc(1 + 2)\n      buf.writeUInt8(253, 0)\n      buf.writeUInt16LE(n, 1)\n    } else if (n < 0x100000000) {\n      buf = Buffer.alloc(1 + 4)\n      buf.writeUInt8(254, 0)\n      buf.writeUInt32LE(n, 1)\n    } else {\n      buf = Buffer.alloc(1 + 8)\n      buf.writeUInt8(255, 0)\n      buf.writeInt32LE(n & -1, 1)\n      buf.writeUInt32LE(Math.floor(n / 0x100000000), 5)\n    }\n    return buf\n  }\n\n  static varIntBufBn (bn) {\n    let buf\n    const n = bn.toNumber()\n    if (n < 253) {\n      buf = Buffer.alloc(1)\n      buf.writeUInt8(n, 0)\n    } else if (n < 0x10000) {\n      buf = Buffer.alloc(1 + 2)\n      buf.writeUInt8(253, 0)\n      buf.writeUInt16LE(n, 1)\n    } else if (n < 0x100000000) {\n      buf = Buffer.alloc(1 + 4)\n      buf.writeUInt8(254, 0)\n      buf.writeUInt32LE(n, 1)\n    } else {\n      const bw = new Bw()\n      bw.writeUInt8(255)\n      bw.writeUInt64LEBn(bn)\n      buf = bw.toBuffer()\n    }\n    return buf\n  }\n}\n\nexport { Bw }\n","/**\n * Structure\n * =========\n *\n * A convenient structure to extend objects from that comes with very common\n * boiler plate instance methods:\n * - fromObject\n * - fromBr\n * - toBw\n * - fromBuffer\n * - fromFastBuffer\n * - toBuffer\n * - toFastBuffer\n * - fromHex\n * - toHex\n * - fromString\n * - toString\n * - fromJSON\n * - toJSON\n * - cloneByBuffer\n * - cloneByFastBuffer\n * - cloneByHex\n * - cloneByString\n * - cloneByJSON\n *\n * As well as static methods for:\n * - fromObject\n * - fromBr\n * - fromBuffer\n * - fromFastBuffer\n * - fromHex\n * - fromString\n * - fromJSON\n *\n * The \"expect\" method also facilitates deserializing a sequence of buffers\n * into an object.\n */\n'use strict'\n\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport isHex from 'is-hex'\n\nclass Struct {\n  constructor (obj) {\n    this.fromObject(obj)\n  }\n\n  fromObject (obj) {\n    if (!obj) {\n      return this\n    }\n    for (const key of Object.keys(obj)) {\n      if (obj[key] !== undefined) {\n        this[key] = obj[key]\n      }\n    }\n    return this\n  }\n\n  static fromObject (obj) {\n    return new this().fromObject(obj)\n  }\n\n  fromBr (br) {\n    if (!(br instanceof Br)) {\n      throw new Error('br must be a buffer reader')\n    }\n    throw new Error('not implemented')\n  }\n\n  static fromBr (br) {\n    return new this().fromBr(br)\n  }\n\n  asyncFromBr (br) {\n    if (!(br instanceof Br)) {\n      throw new Error('br must be a buffer reader')\n    }\n    throw new Error('not implemented')\n  }\n\n  static asyncFromBr (br) {\n    return new this().asyncFromBr(br)\n  }\n\n  toBw (bw) {\n    throw new Error('not implemented')\n  }\n\n  asyncToBw (bw) {\n    throw new Error('not implemented')\n  }\n\n  /**\n     * It is very often the case that you want to create a bitcoin object from a\n     * stream of small buffers rather than from a buffer of the correct length.\n     * For instance, if streaming from the network or disk. The genFromBuffers\n     * method is a generator which produces an iterator. Use .next(buf) to pass\n     * in a small buffer. The iterator will end when it has received enough data\n     * to produce the object. In some cases it is able to yield the number of\n     * bytes it is expecting, but that is not always known.\n     */\n  * genFromBuffers () {\n    throw new Error('not implemented')\n  }\n\n  /**\n     * A convenience method used by from the genFromBuffers* generators.\n     * Basically lets you expect a certain number of bytes (len) and keeps\n     * yielding until you give it enough. It yields the expected amount\n     * remaining, and returns an object containing a buffer of the expected\n     * length, and, if any, the remainder buffer.\n     */\n  * expect (len, startbuf) {\n    let buf = startbuf\n    const bw = new Bw()\n    let gotlen = 0\n    if (startbuf) {\n      bw.write(startbuf)\n      gotlen += startbuf.length\n    }\n    while (gotlen < len) {\n      const remainderlen = len - gotlen\n      buf = yield remainderlen\n      if (!buf) {\n        continue\n      }\n      bw.write(buf)\n      gotlen += buf.length\n    }\n    buf = bw.toBuffer()\n    const overlen = gotlen - len\n    const remainderbuf = buf.slice(buf.length - overlen, buf.length)\n    buf = buf.slice(0, buf.length - overlen)\n    return {\n      buf: buf,\n      remainderbuf: remainderbuf\n    }\n  }\n\n  /**\n     * Convert a buffer into an object, i.e. deserialize the object.\n     */\n  fromBuffer (buf, ...rest) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('buf must be a buffer')\n    }\n    const br = new Br(buf)\n    return this.fromBr(br, ...rest)\n  }\n\n  static fromBuffer (...rest) {\n    return new this().fromBuffer(...rest)\n  }\n\n  asyncFromBuffer (buf, ...rest) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('buf must be a buffer')\n    }\n    const br = new Br(buf)\n    return this.asyncFromBr(br, ...rest)\n  }\n\n  static asyncFromBuffer (buf, ...rest) {\n    return new this().asyncFromBuffer(buf, ...rest)\n  }\n\n  /**\n     * The complement of toFastBuffer - see description for toFastBuffer\n     */\n  fromFastBuffer (buf, ...rest) {\n    if (buf.length === 0) {\n      return this\n    } else {\n      return this.fromBuffer(buf, ...rest)\n    }\n  }\n\n  static fromFastBuffer (...rest) {\n    return new this().fromFastBuffer(...rest)\n  }\n\n  /**\n     * Convert the object into a buffer, i.e. serialize the object. This method\n     * may block the main thread.\n     */\n  toBuffer (...rest) {\n    return this.toBw(...rest).toBuffer()\n  }\n\n  asyncToBuffer (...rest) {\n    return this.asyncToBw(...rest).then(bw => bw.toBuffer())\n  }\n\n  /**\n     * Sometimes the toBuffer method has cryptography and blocks the main thread,\n     * and we need a non-blocking way to serialize an object. That is what\n     * toFastBuffer is. Of course it defaults to just using toBuffer if an object\n     * hasn't implemented it. If your regular toBuffer method blocks, like with\n     * Bip32, then you should implement this method to be non-blocking. This\n     * method is used to send objects to the workers. i.e., for converting a\n     * Bip32 object to a string, we need to encode it as a buffer in a\n     * non-blocking manner with toFastBuffer, send it to a worker, then the\n     * worker converts it to a string, which is a blocking operation.\n     *\n     * It is very common to want to convert a blank object to a zero length\n     * buffer, so we can transport a blank object to a worker. So that behavior\n     * is included by default.\n     */\n  toFastBuffer (...rest) {\n    if (Object.keys(this).length === 0) {\n      return Buffer.alloc(0)\n    } else {\n      return this.toBuffer(...rest)\n    }\n  }\n\n  fromHex (hex, ...rest) {\n    if (!isHex(hex)) {\n      throw new Error('invalid hex string')\n    }\n    const buf = Buffer.from(hex, 'hex')\n    return this.fromBuffer(buf, ...rest)\n  }\n\n  static fromHex (hex, ...rest) {\n    return new this().fromHex(hex, ...rest)\n  }\n\n  asyncFromHex (hex, ...rest) {\n    if (!isHex(hex)) {\n      throw new Error('invalid hex string')\n    }\n    const buf = Buffer.from(hex, 'hex')\n    return this.asyncFromBuffer(buf, ...rest)\n  }\n\n  static asyncFromHex (hex, ...rest) {\n    return new this().asyncFromHex(hex, ...rest)\n  }\n\n  fromFastHex (hex, ...rest) {\n    if (!isHex(hex)) {\n      throw new Error('invalid hex string')\n    }\n    const buf = Buffer.from(hex, 'hex')\n    return this.fromFastBuffer(buf, ...rest)\n  }\n\n  static fromFastHex (hex, ...rest) {\n    return new this().fromFastHex(hex, ...rest)\n  }\n\n  toHex (...rest) {\n    return this.toBuffer(...rest).toString('hex')\n  }\n\n  asyncToHex (...rest) {\n    return this.asyncToBuffer(...rest).then(buf => buf.toString('hex'))\n  }\n\n  toFastHex (...rest) {\n    return this.toFastBuffer(...rest).toString('hex')\n  }\n\n  fromString (str, ...rest) {\n    if (typeof str !== 'string') {\n      throw new Error('str must be a string')\n    }\n    return this.fromHex(str, ...rest)\n  }\n\n  static fromString (str, ...rest) {\n    return new this().fromString(str, ...rest)\n  }\n\n  asyncFromString (str, ...rest) {\n    if (typeof str !== 'string') {\n      throw new Error('str must be a string')\n    }\n    return this.asyncFromHex(str, ...rest)\n  }\n\n  static asyncFromString (str, ...rest) {\n    return new this().asyncFromString(str, ...rest)\n  }\n\n  toString (...rest) {\n    return this.toHex(...rest)\n  }\n\n  asyncToString (...rest) {\n    return this.asyncToHex(...rest)\n  }\n\n  fromJSON (json) {\n    throw new Error('not implemented')\n  }\n\n  static fromJSON (json, ...rest) {\n    return new this().fromJSON(json, ...rest)\n  }\n\n  asyncFromJSON (json, ...rest) {\n    throw new Error('not implemented')\n  }\n\n  static asyncFromJSON (json, ...rest) {\n    return new this().asyncFromJSON(json, ...rest)\n  }\n\n  toJSON () {\n    var json = {}\n    for (var val in this) {\n      // arrays\n      if (Array.isArray(this[val])) {\n        const arr = []\n        for (var i in this[val]) {\n          if (typeof this[val][i].toJSON === 'function') {\n            arr.push(this[val][i].toJSON())\n          } else {\n            arr.push(JSON.stringify(this[val][i]))\n          }\n        }\n        json[val] = arr\n        // objects\n      } else if (this[val] === null) {\n        json[val] = this[val]\n      } else if (\n        typeof this[val] === 'object' &&\n          typeof this[val].toJSON === 'function'\n      ) {\n        json[val] = this[val].toJSON()\n        // booleans, numbers, and strings\n      } else if (\n        typeof this[val] === 'boolean' ||\n          typeof this[val] === 'number' ||\n          typeof this[val] === 'string'\n      ) {\n        json[val] = this[val]\n        // buffers\n      } else if (Buffer.isBuffer(this[val])) {\n        json[val] = this[val].toString('hex')\n        // map\n      } else if (this[val] instanceof Map) {\n        json[val] = JSON.stringify(this[val])\n        // throw an error for objects that do not implement toJSON\n      } else if (typeof this[val] === 'object') {\n        throw new Error('not implemented')\n      }\n    }\n    return json\n    // throw new Error('not implemented')\n  }\n\n  asyncToJSON () {\n    throw new Error('not implemented')\n  }\n\n  clone () {\n    // TODO: Should this be more intelligent about picking which clone method\n    // to default to?\n    return this.cloneByJSON()\n  }\n\n  cloneByBuffer () {\n    return new this.constructor().fromBuffer(this.toBuffer())\n  }\n\n  cloneByFastBuffer () {\n    return new this.constructor().fromFastBuffer(this.toFastBuffer())\n  }\n\n  cloneByHex () {\n    return new this.constructor().fromHex(this.toHex())\n  }\n\n  cloneByString () {\n    return new this.constructor().fromString(this.toString())\n  }\n\n  cloneByJSON () {\n    return new this.constructor().fromJSON(this.toJSON())\n  }\n}\n\nexport { Struct }\n","/**\n * Base58 Encoding\n * ===============\n *\n * Base58 (no check)\n */\n'use strict'\n\nimport bs58 from 'bs58'\nimport { Struct } from './struct'\n\nclass Base58 extends Struct {\n  constructor (buf) {\n    super({ buf })\n  }\n\n  fromHex (hex) {\n    return this.fromBuffer(Buffer.from(hex, 'hex'))\n  }\n\n  toHex () {\n    return this.toBuffer().toString('hex')\n  }\n\n  static encode (buf) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('Input should be a buffer')\n    }\n    return bs58.encode(buf)\n  }\n\n  static decode (str) {\n    if (typeof str !== 'string') {\n      throw new Error('Input should be a string')\n    }\n    return Buffer.from(bs58.decode(str))\n  }\n\n  fromBuffer (buf) {\n    this.buf = buf\n    return this\n  }\n\n  fromString (str) {\n    const buf = Base58.decode(str)\n    this.buf = buf\n    return this\n  }\n\n  toBuffer () {\n    return this.buf\n  }\n\n  toString () {\n    return Base58.encode(this.buf)\n  }\n}\n\nexport { Base58 }\n","/**\n * Constant-Time Buffer Compare\n * ============================\n *\n * A constant-time comparison function. This should be used in any security\n * sensitive code where leaking timing information may lead to lessened\n * security. Note that if the buffers are not equal in length, this function\n * loops for the longest buffer, which may not be necessary. Usually this\n * function should be used for buffers that would otherwise be equal length,\n * such as a hash, particularly Hmacs.\n *\n * The algorithm here, which is XORs each byte (or, if undefined, 0) with the\n * corresponding other byte, and then ORs that with a running total (d), is\n * adapted from here:\n *\n * https://groups.google.com/forum/#!topic/keyczar-discuss/VXHsoJSLKhM\n */\n'use strict'\nconst cmp = (buf1, buf2) => {\n  if (!Buffer.isBuffer(buf1) || !Buffer.isBuffer(buf2)) {\n    throw new Error('buf1 and buf2 must be buffers')\n  }\n  if (buf1.length !== buf2.length) {\n    return false\n  }\n\n  let d = 0\n  for (let i = 0; i < buf1.length; i++) {\n    const x = buf1[i]\n    const y = buf2[i]\n    d |= x ^ y\n  }\n\n  return d === 0\n}\n\nexport { cmp }\n","/**\n * WorkersResult\n * =============\n *\n * A response sent back from a worker to the main thread. Contains the \"result\"\n * of the computation in the form of a buffer, resbuf. If the actual result is\n * an object with a .toFastBuffer method, the object is converted to a buffer\n * using that method. Otherwise it is JSON serialized into a buffer. The result\n * can also be an error, in which case the isError flag is set.\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { Struct } from './struct'\n\nclass WorkersResult extends Struct {\n  constructor (resbuf, isError, id) {\n    super({ resbuf, isError, id })\n  }\n\n  fromResult (result, id) {\n    if (result.toFastBuffer) {\n      this.resbuf = result.toFastBuffer()\n    } else if (Buffer.isBuffer(result)) {\n      this.resbuf = result\n    } else {\n      this.resbuf = Buffer.from(JSON.stringify(result))\n    }\n    this.isError = false\n    this.id = id\n    return this\n  }\n\n  static fromResult (result, id) {\n    return new this().fromResult(result, id)\n  }\n\n  fromError (error, id) {\n    this.resbuf = Buffer.from(JSON.stringify(error.message))\n    this.isError = true\n    this.id = id\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeVarIntNum(this.resbuf.length)\n    bw.write(this.resbuf)\n    bw.writeUInt8(Number(this.isError))\n    bw.writeVarIntNum(this.id)\n    return bw\n  }\n\n  fromBr (br) {\n    const resbuflen = br.readVarIntNum()\n    this.resbuf = br.read(resbuflen)\n    this.isError = Boolean(br.readUInt8())\n    this.id = br.readVarIntNum()\n    return this\n  }\n}\n\nexport { WorkersResult }\n","/**\n * Workers\n * =======\n *\n * Workers manages either processes (in node) or threads (in a browser). The\n * workers are intended to handle CPU-heavy tasks that block IO. This class is\n * a little unusual in that it must use different interfaces whether in node or\n * in the browser. In node, we use node's build-in child_process fork to create\n * new workers we can communicate with. In the browser, we use web workers.\n * Unfortunately, node and web browsers do not have a common interface for\n * workers. There is a node module called webworker-threads for node that\n * mimics the browser's web workers, but unfortunately it does not support\n * require(), and thus isn't very useful in our case. Therefore we fall back to\n * process forks.\n *\n * You probably don't need to use this class directly. Use Work, which will\n * automatically spawn new workers if needed.\n */\n'use strict'\n\nimport { WorkersResult } from './workers-result'\n\nlet globalWorkers\n\nclass Workers {\n  constructor (\n    nativeWorkers = [],\n    lastid = 0,\n    incompconsteRes = [],\n    promisemap = new Map()\n  ) {\n    this.nativeWorkers = nativeWorkers\n    this.lastid = lastid\n    this.incompconsteRes = incompconsteRes\n    this.promisemap = promisemap\n  }\n\n  asyncObjectMethod (obj, methodname, args, id = this.lastid + 1) {\n    if (!args) {\n      throw new Error('must specify args')\n    }\n    const result = obj[methodname](...args)\n    const workersResult = new WorkersResult().fromResult(result, id)\n    return workersResult\n  }\n\n  static asyncObjectMethod (obj, methodname, args, id) {\n    if (!globalWorkers) {\n      globalWorkers = new Workers()\n    }\n    return globalWorkers.asyncObjectMethod(obj, methodname, args, id)\n  }\n\n  asyncClassMethod (classObj, methodname, args, id = this.lastid + 1) {\n    if (!args) {\n      throw new Error('must specify args')\n    }\n    const result = classObj[methodname](...args)\n    const workersResult = new WorkersResult().fromResult(result, id)\n    return workersResult\n  }\n\n  static asyncClassMethod (classObj, methodname, args, id) {\n    if (!globalWorkers) {\n      globalWorkers = new Workers()\n    }\n    return globalWorkers.asyncClassMethod(classObj, methodname, args, id)\n  }\n\n  static endGlobalWorkers () {\n    if (globalWorkers && !process.browser) {\n      globalWorkers = undefined\n    }\n  }\n}\n\nexport { Workers }\n","/**\n * Hash\n * ====\n *\n * Some hash functions are used through out bitcoin. We expose them here as a\n * convenience.\n */\n'use strict'\n\nimport { Workers } from './workers'\nimport hashjs from 'hash.js'\n\nclass Hash {}\n\nHash.sha1 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('sha1 hash must be of a buffer')\n  }\n  const Sha1 = hashjs.sha1\n  const hash = new Sha1().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.sha1.blockSize = 512\n\nHash.asyncSha1 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha1', args)\n  return workersResult.resbuf\n}\n\nHash.sha256 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('sha256 hash must be of a buffer')\n  }\n  const Sha256 = hashjs.sha256\n  const hash = new Sha256().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.sha256.blockSize = 512\n\nHash.asyncSha256 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha256', args)\n  return workersResult.resbuf\n}\n\nHash.sha256Sha256 = function (buf) {\n  try {\n    return Hash.sha256(Hash.sha256(buf))\n  } catch (e) {\n    throw new Error('sha256Sha256 hash must be of a buffer: ' + e)\n  }\n}\n\nHash.asyncSha256Sha256 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(\n    Hash,\n    'sha256Sha256',\n    args\n  )\n  return workersResult.resbuf\n}\n\nHash.ripemd160 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('ripemd160 hash must be of a buffer')\n  }\n  const Ripemd160 = hashjs.ripemd160\n  const hash = new Ripemd160().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.asyncRipemd160 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'ripemd160', args)\n  return workersResult.resbuf\n}\n\nHash.sha256Ripemd160 = function (buf) {\n  try {\n    return Hash.ripemd160(Hash.sha256(buf))\n  } catch (e) {\n    throw new Error('sha256Ripemd160 hash must be of a buffer: ' + e)\n  }\n}\n\nHash.asyncSha256Ripemd160 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(\n    Hash,\n    'sha256Ripemd160',\n    args\n  )\n  return workersResult.resbuf\n}\n\nHash.sha512 = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('sha512 hash must be of a buffer')\n  }\n  const Sha512 = hashjs.sha512\n  const hash = new Sha512().update(buf).digest()\n  return Buffer.from(hash)\n}\n\nHash.asyncSha512 = async function (buf) {\n  const args = [buf]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha512', args)\n  return workersResult.resbuf\n}\n\nHash.sha512.blockSize = 1024\n\nHash.hmac = function (hashFStr, data, key) {\n  if (hashFStr !== 'sha1' && hashFStr !== 'sha256' && hashFStr !== 'sha512') {\n    throw new Error('invalid choice of hash function')\n  }\n\n  const hashf = Hash[hashFStr]\n\n  if (!Buffer.isBuffer(data) || !Buffer.isBuffer(key)) {\n    throw new Error('data and key must be buffers')\n  }\n\n  // http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  // http://tools.ietf.org/html/rfc4868#section-2\n  const blockSize = hashf.blockSize / 8\n\n  if (key.length > blockSize) {\n    key = hashf(key)\n  }\n\n  if (key.length < blockSize) {\n    const fill = Buffer.alloc(blockSize)\n    fill.fill(0, key.length)\n    key.copy(fill)\n    key = fill\n  }\n\n  const oKeyPad = Buffer.alloc(blockSize)\n  const iKeyPad = Buffer.alloc(blockSize)\n  for (let i = 0; i < blockSize; i++) {\n    oKeyPad[i] = 0x5c ^ key[i]\n    iKeyPad[i] = 0x36 ^ key[i]\n  }\n\n  return hashf(\n    Buffer.concat([oKeyPad, hashf(Buffer.concat([iKeyPad, data]))])\n  )\n}\n\nHash.sha1Hmac = function (data, key) {\n  return Hash.hmac('sha1', data, key)\n}\n\nHash.asyncSha1Hmac = async function (data, key) {\n  const args = [data, key]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha1Hmac', args)\n  return workersResult.resbuf\n}\n\nHash.sha1Hmac.bitsize = 160\n\nHash.sha256Hmac = function (data, key) {\n  return Hash.hmac('sha256', data, key)\n}\n\nHash.asyncSha256Hmac = async function (data, key) {\n  const args = [data, key]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha256Hmac', args)\n  return workersResult.resbuf\n}\n\nHash.sha256Hmac.bitsize = 256\n\nHash.sha512Hmac = function (data, key) {\n  return Hash.hmac('sha512', data, key)\n}\n\nHash.asyncSha512Hmac = async function (data, key) {\n  const args = [data, key]\n  const workersResult = await Workers.asyncClassMethod(Hash, 'sha512Hmac', args)\n  return workersResult.resbuf\n}\n\nHash.sha512Hmac.bitsize = 512\n\nexport { Hash }\n","/**\n * Base58 Check Encoding\n * =====================\n *\n * Base58 check encoding. The usual way to use it is\n * new Base58Check(buf).toString() or new Base58Check(str).toBuffer().\n */\n'use strict'\n\nimport { Base58 } from './base-58'\nimport { cmp } from './cmp'\nimport { Hash } from './hash'\nimport { Struct } from './struct'\n\nclass Base58Check extends Struct {\n  constructor (buf) {\n    super({ buf })\n  }\n\n  fromHex (hex) {\n    return this.fromBuffer(Buffer.from(hex, 'hex'))\n  }\n\n  toHex () {\n    return this.toBuffer().toString('hex')\n  }\n\n  static decode (s) {\n    if (typeof s !== 'string') {\n      throw new Error('Input must be a string')\n    }\n\n    const buf = Base58.decode(s)\n\n    if (buf.length < 4) {\n      throw new Error('Input string too short')\n    }\n\n    const data = buf.slice(0, -4)\n    const csum = buf.slice(-4)\n\n    const hash = Hash.sha256Sha256(data)\n    const hash4 = hash.slice(0, 4)\n\n    if (!cmp(csum, hash4)) {\n      throw new Error('Checksum mismatch')\n    }\n\n    return data\n  }\n\n  static encode (buf) {\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('Input must be a buffer')\n    }\n    const checkedBuf = Buffer.alloc(buf.length + 4)\n    const hash = Hash.sha256Sha256(buf)\n    buf.copy(checkedBuf)\n    hash.copy(checkedBuf, buf.length)\n    return Base58.encode(checkedBuf)\n  }\n\n  fromBuffer (buf) {\n    this.buf = buf\n    return this\n  }\n\n  fromString (str) {\n    const buf = Base58Check.decode(str)\n    this.buf = buf\n    return this\n  }\n\n  toBuffer () {\n    return this.buf\n  }\n\n  toString () {\n    return Base58Check.encode(this.buf)\n  }\n}\n\nexport { Base58Check }\n","'use strict'\n\nclass Config {\n  constructor (values) {\n    this.keyDefined = (key) => key in values\n    this.getValue = (key) => values[key]\n  }\n\n  get (key) {\n    if (this.keyDefined(key)) {\n      return this.getValue(key)\n    } else {\n      throw new Error(`Unknown configuration: ${key}`)\n    }\n  }\n}\n\nclass ConfigBuilder {\n  constructor () {\n    this.variables = {}\n  }\n\n  build () {\n    return new Config(this.variables)\n  }\n\n  addValue (key, value) {\n    if (value === undefined) {\n      throw new Error(`Failed to add \"${key}\" property. The value cannot be undefined`)\n    }\n    if (key in this.variables) {\n      throw new Error(`\"${key}\" already has a value defined.`)\n    }\n    this.variables[key] = value\n    return this\n  }\n\n  addValueWithDefault (key, value, defaultValue) {\n    if (defaultValue === undefined) {\n      throw new Error(`Failed to add \"${key}\" property. Default value cannot be undefined`)\n    }\n    return this.addValue(key, value === undefined ? defaultValue : value)\n  }\n}\n\nconst config = new ConfigBuilder()\n  .addValue('NETWORK', process.env.NETWORK || 'mainnet')\n  .build()\n\nexport { config }\n","/**\n * Constants\n * =========\n *\n * Constants used to distinguish mainnet from testnet.\n */\n'use strict'\nimport { config } from './config'\n\nconst Constants = {}\n\nConstants.Mainnet = {\n  MaxSize: 0x02000000, // MAX_SIZE\n  Port: 8333,\n  Address: {\n    pubKeyHash: 0x00,\n    payToScriptHash: 0x05\n  },\n  Bip32: {\n    pubKey: 0x0488b21e,\n    privKey: 0x0488ade4\n  },\n  Block: {\n    maxNBits: 0x1d00ffff,\n    magicNum: 0xe3e1f3e8\n  },\n  Msg: {\n    magicNum: 0xe3e1f3e8,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0x80\n  },\n  TxBuilder: {\n    dust: 546, // number of satoshis that an output can't be less than\n    feePerKbNum: 0.00000500e8\n  },\n  Workers: {\n    // Cannot be 5 seconds. This is actually too low for low end devices. We\n    // have found by experimenting with Chrome developer tools that 60 seconds\n    // works on low end mobile.\n    timeout: 60000\n  }\n}\n\nConstants.Testnet = Object.assign({}, Constants.Mainnet, {\n  Port: 18333,\n  Address: {\n    pubKeyHash: 0x6f,\n    payToScriptHash: 0xc4\n  },\n  Bip32: {\n    pubKey: 0x043587cf,\n    privKey: 0x04358394\n  },\n  Block: {\n    maxNBits: 0x1d00ffff,\n    magicNum: 0xf4e5f3f4\n  },\n  Msg: {\n    magicNum: 0xf4e5f3f4,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0xef\n  }\n})\n\nConstants.Regtest = Object.assign({}, Constants.Mainnet, {\n  Port: 18444,\n  Address: {\n    pubKeyHash: 0x6f,\n    payToScriptHash: 0xc4\n  },\n  Bip32: {\n    pubKey: 0x043587cf,\n    privKey: 0x04358394\n  },\n  Block: {\n    maxNBits: 0x207fffff,\n    magicNum: 0xdab5bffa\n  },\n  Msg: {\n    magicNum: 0xdab5bffa,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0xef\n  }\n})\n\nConstants.STN = Object.assign({}, Constants.Mainnet, {\n  Port: 9333,\n  Address: {\n    pubKeyHash: 0x6f,\n    payToScriptHash: 0xc4\n  },\n  Bip32: {\n    pubKey: 0x043587cf,\n    privKey: 0x04358394\n  },\n  Block: {\n    maxNBits: 0x1d00ffff,\n    magicNum: 0xfbcec4f9\n  },\n  Msg: {\n    magicNum: 0xfbcec4f9,\n    versionBytesNum: 70015 // as of Bitcoin SV v1.0.5\n  },\n  PrivKey: {\n    versionByteNum: 0xef\n  }\n})\n\n/**\n * Yours Bitcoin can be globally configured to mainnet or testnet. Via the\n * inject pattern, you always have access to the other network at any time.\n * However, it is very convenient to be able to change the default\n * configuration. The default is mainnet, which can be changed to testnet.\n */\n// Constants.Default = Object.assign({}, Constants.Mainnet)\nif (config.get('NETWORK') === 'testnet') {\n  Constants.Default = Object.assign({}, Constants.Testnet)\n} else if (config.get('NETWORK') === 'mainnet') {\n  Constants.Default = Object.assign({}, Constants.Mainnet)\n} else if (config.get('NETWORK') === 'regtest') {\n  Constants.Default = Object.assign({}, Constants.Regtest)\n} else if (config.get('NETWORK') === 'stn') {\n  Constants.Default = Object.assign({}, Constants.STN)\n} else {\n  throw new Error(\n    `must set network in environment variable - mainnet, testnet, regtest or stn?, received ${config.get('NETWORK')}`\n  )\n}\n\nconst getConstants = (magicNum) => {\n  if (Constants.Mainnet.Msg.magicNum === magicNum) {\n    return Constants.Mainnet\n  } else if (Constants.Testnet.Msg.magicNum === magicNum) {\n    return Constants.Testnet\n  } else if (Constants.Regtest.Msg.magicNum === magicNum) {\n    return Constants.Regtest\n  } else if (Constants.STN.Msg.magicNum === magicNum) {\n    return Constants.STN\n  } else {\n    return Constants.Default\n  }\n}\n\nexport { Constants, getConstants }\n","/*\n * OpCode\n * ======\n *\n * An opCode is one of the operations in the bitcoin scripting language. Each\n * operation is just a number from 0-255, and it has a corresponding string,\n * e.g. \"OP_RETURN\", which comes from the name of that constant in the bitcoind\n * source code. The way you probably want to use this is with\n * new OpCode(str).toNumber() or new OpCode(num).toString()\n */\n'use strict'\n\nimport { Struct } from './struct'\n\nconst map = {\n  // push value\n  OP_FALSE: 0x00,\n  OP_0: 0x00,\n  OP_PUSHDATA1: 0x4c,\n  OP_PUSHDATA2: 0x4d,\n  OP_PUSHDATA4: 0x4e,\n  OP_1NEGATE: 0x4f,\n  OP_RESERVED: 0x50,\n  OP_TRUE: 0x51,\n  OP_1: 0x51,\n  OP_2: 0x52,\n  OP_3: 0x53,\n  OP_4: 0x54,\n  OP_5: 0x55,\n  OP_6: 0x56,\n  OP_7: 0x57,\n  OP_8: 0x58,\n  OP_9: 0x59,\n  OP_10: 0x5a,\n  OP_11: 0x5b,\n  OP_12: 0x5c,\n  OP_13: 0x5d,\n  OP_14: 0x5e,\n  OP_15: 0x5f,\n  OP_16: 0x60,\n\n  // control\n  OP_NOP: 0x61,\n  OP_VER: 0x62,\n  OP_IF: 0x63,\n  OP_NOTIF: 0x64,\n  OP_VERIF: 0x65,\n  OP_VERNOTIF: 0x66,\n  OP_ELSE: 0x67,\n  OP_ENDIF: 0x68,\n  OP_VERIFY: 0x69,\n  OP_RETURN: 0x6a,\n\n  // stack ops\n  OP_TOALTSTACK: 0x6b,\n  OP_FROMALTSTACK: 0x6c,\n  OP_2DROP: 0x6d,\n  OP_2DUP: 0x6e,\n  OP_3DUP: 0x6f,\n  OP_2OVER: 0x70,\n  OP_2ROT: 0x71,\n  OP_2SWAP: 0x72,\n  OP_IFDUP: 0x73,\n  OP_DEPTH: 0x74,\n  OP_DROP: 0x75,\n  OP_DUP: 0x76,\n  OP_NIP: 0x77,\n  OP_OVER: 0x78,\n  OP_PICK: 0x79,\n  OP_ROLL: 0x7a,\n  OP_ROT: 0x7b,\n  OP_SWAP: 0x7c,\n  OP_TUCK: 0x7d,\n\n  // data manipulation ops\n  OP_CAT: 0x7e,\n  OP_SUBSTR: 0x7f, // Replaced in BSV\n  OP_SPLIT: 0x7f,\n  OP_LEFT: 0x80, // Replaced in BSV\n  OP_NUM2BIN: 0x80,\n  OP_RIGHT: 0x81, // Replaced in BSV\n  OP_BIN2NUM: 0x81,\n  OP_SIZE: 0x82,\n\n  // bit logic\n  OP_INVERT: 0x83,\n  OP_AND: 0x84,\n  OP_OR: 0x85,\n  OP_XOR: 0x86,\n  OP_EQUAL: 0x87,\n  OP_EQUALVERIFY: 0x88,\n  OP_RESERVED1: 0x89,\n  OP_RESERVED2: 0x8a,\n\n  // numeric\n  OP_1ADD: 0x8b,\n  OP_1SUB: 0x8c,\n  OP_2MUL: 0x8d,\n  OP_2DIV: 0x8e,\n  OP_NEGATE: 0x8f,\n  OP_ABS: 0x90,\n  OP_NOT: 0x91,\n  OP_0NOTEQUAL: 0x92,\n\n  OP_ADD: 0x93,\n  OP_SUB: 0x94,\n  OP_MUL: 0x95,\n  OP_DIV: 0x96,\n  OP_MOD: 0x97,\n  OP_LSHIFT: 0x98,\n  OP_RSHIFT: 0x99,\n\n  OP_BOOLAND: 0x9a,\n  OP_BOOLOR: 0x9b,\n  OP_NUMEQUAL: 0x9c,\n  OP_NUMEQUALVERIFY: 0x9d,\n  OP_NUMNOTEQUAL: 0x9e,\n  OP_LESSTHAN: 0x9f,\n  OP_GREATERTHAN: 0xa0,\n  OP_LESSTHANOREQUAL: 0xa1,\n  OP_GREATERTHANOREQUAL: 0xa2,\n  OP_MIN: 0xa3,\n  OP_MAX: 0xa4,\n\n  OP_WITHIN: 0xa5,\n\n  // crypto\n  OP_RIPEMD160: 0xa6,\n  OP_SHA1: 0xa7,\n  OP_SHA256: 0xa8,\n  OP_HASH160: 0xa9,\n  OP_HASH256: 0xaa,\n  OP_CODESEPARATOR: 0xab,\n  OP_CHECKSIG: 0xac,\n  OP_CHECKSIGVERIFY: 0xad,\n  OP_CHECKMULTISIG: 0xae,\n  OP_CHECKMULTISIGVERIFY: 0xaf,\n\n  // expansion\n  OP_NOP1: 0xb0,\n  OP_NOP2: 0xb1,\n  OP_CHECKLOCKTIMEVERIFY: 0xb1,\n  OP_NOP3: 0xb2,\n  OP_CHECKSEQUENCEVERIFY: 0xb2,\n  OP_NOP4: 0xb3,\n  OP_NOP5: 0xb4,\n  OP_NOP6: 0xb5,\n  OP_NOP7: 0xb6,\n  OP_NOP8: 0xb7,\n  OP_NOP9: 0xb8,\n  OP_NOP10: 0xb9,\n\n  // template matching params\n  OP_SMALLDATA: 0xf9,\n  OP_SMALLINTEGER: 0xfa,\n  OP_PUBKEYS: 0xfb,\n  OP_PUBKEYHASH: 0xfd,\n  OP_PUBKEY: 0xfe,\n\n  OP_INVALIDOPCODE: 0xff\n}\n\nclass OpCode extends Struct {\n  constructor (num) {\n    super({ num })\n  }\n\n  fromNumber (num) {\n    this.num = num\n    return this\n  }\n\n  static fromNumber (num) {\n    return new this().fromNumber(num)\n  }\n\n  toNumber () {\n    return this.num\n  }\n\n  fromString (str) {\n    const num = map[str]\n    if (num === undefined) {\n      throw new Error('Invalid opCodeStr')\n    }\n    this.num = num\n    return this\n  }\n\n  static fromString (str) {\n    return new this().fromString(str)\n  }\n\n  toString () {\n    const str = OpCode.str[this.num]\n    if (str === undefined) {\n      if (this.num > 0 && this.num < OpCode.OP_PUSHDATA1) {\n        return this.num.toString()\n      }\n      throw new Error('OpCode does not have a string representation')\n    }\n    return str\n  }\n}\n\nOpCode.str = {}\n\nfor (const opCodeStr in map) {\n  OpCode[opCodeStr] = map[opCodeStr]\n\n  if (Object.prototype.hasOwnProperty.call(map, opCodeStr)) {\n    OpCode.str[map[opCodeStr]] = opCodeStr\n  }\n}\n\nexport { OpCode }\n","/**\n * Point (on secp256k1)\n * ====================\n *\n * A point is a point on the secp256k1 curve which is the elliptic curve used\n * by bitcoin. This code is a wrapper for Fedor Indutny's Point class from his\n * elliptic library. This code adds a few minor conveniences, but is mostly the\n * same. Since Fedor's code returns points and big numbers that are instances\n * of his point and big number classes, we have to wrap all the methods such as\n * getX() to return the Yours Bitcoin point and big number types.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport elliptic from 'bitcoin-elliptic'\n\nconst ec = elliptic.curves.secp256k1\nconst _point = ec.curve.point()\nconst _Point = _point.constructor\n\nclass Point extends _Point {\n  constructor (x, y, isRed) {\n    super(ec.curve, x, y, isRed)\n  }\n\n  static fromX (isOdd, x) {\n    const _point = ec.curve.pointFromX(x, isOdd)\n    const point = Object.create(Point.prototype)\n    return point.copyFrom(_point)\n  }\n\n  copyFrom (point) {\n    if (!(point instanceof _Point)) {\n      throw new Error('point should be an external point')\n    }\n    Object.keys(point).forEach(\n      function (key) {\n        this[key] = point[key]\n      }.bind(this)\n    )\n    return this\n  }\n\n  add (p) {\n    p = _Point.prototype.add.call(this, p)\n    const point = Object.create(Point.prototype)\n    return point.copyFrom(p)\n  }\n\n  mul (bn) {\n    if (!bn.lt(Point.getN())) {\n      throw new Error('point mul out of range')\n    }\n    const p = _Point.prototype.mul.call(this, bn)\n    const point = Object.create(Point.prototype)\n    return point.copyFrom(p)\n  }\n\n  mulAdd (bn1, point, bn2) {\n    const p = _Point.prototype.mulAdd.call(this, bn1, point, bn2)\n    point = Object.create(Point.prototype)\n    return point.copyFrom(p)\n  }\n\n  getX () {\n    const _x = _Point.prototype.getX.call(this)\n    const x = Object.create(Bn.prototype)\n    _x.copy(x)\n    return x\n  }\n\n  getY () {\n    const _y = _Point.prototype.getY.call(this)\n    const y = Object.create(Bn.prototype)\n    _y.copy(y)\n    return y\n  }\n\n  fromX (isOdd, x) {\n    const point = Point.fromX(isOdd, x)\n    return this.copyFrom(point)\n  }\n\n  toJSON () {\n    return {\n      x: this.getX().toString(),\n      y: this.getY().toString()\n    }\n  }\n\n  fromJSON (json) {\n    const x = new Bn().fromString(json.x)\n    const y = new Bn().fromString(json.y)\n    const point = new Point(x, y)\n    return this.copyFrom(point)\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON())\n  }\n\n  fromString (str) {\n    const json = JSON.parse(str)\n    const p = new Point().fromJSON(json)\n    return this.copyFrom(p)\n  }\n\n  static getG () {\n    const _g = ec.curve.g\n    const g = Object.create(Point.prototype)\n    return g.copyFrom(_g)\n  }\n\n  static getN () {\n    return new Bn(ec.curve.n.toArray())\n  }\n\n  // https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n  validate () {\n    const p2 = Point.fromX(this.getY().isOdd(), this.getX())\n    if (!(p2.getY().cmp(this.getY()) === 0)) {\n      throw new Error('Invalid y value of public key')\n    }\n    if (\n      !(this.getX().gt(-1) && this.getX().lt(Point.getN())) ||\n        !(this.getY().gt(-1) && this.getY().lt(Point.getN()))\n    ) {\n      throw new Error('Point does not lie on the curve')\n    }\n    return this\n  }\n}\n\nexport { Point }\n","/**\n * Public Key\n * ==========\n *\n * A public key corresponds to a private key. If you have a private key, you\n * can find the corresponding public key with new PubKey().fromPrivKey(privKey).\n */\n'use strict'\n\nimport { Point } from './point'\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass PubKey extends Struct {\n  constructor (point, compressed) {\n    super({ point, compressed })\n  }\n\n  fromJSON (json) {\n    this.fromFastHex(json)\n    return this\n  }\n\n  toJSON () {\n    return this.toFastHex()\n  }\n\n  fromPrivKey (privKey) {\n    this.fromObject({\n      point: Point.getG().mul(privKey.bn),\n      compressed: privKey.compressed\n    })\n    return this\n  }\n\n  static fromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  async asyncFromPrivKey (privKey) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'fromPrivKey', [\n      privKey\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromPrivKey (privKey) {\n    return new this().asyncFromPrivKey(privKey)\n  }\n\n  fromBuffer (buf, strict) {\n    return this.fromDer(buf, strict)\n  }\n\n  async asyncFromBuffer (buf, strict) {\n    const args = [buf, strict]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromBuffer',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  fromFastBuffer (buf) {\n    if (buf.length === 0) {\n      return this\n    }\n    const compressed = Boolean(buf[0])\n    buf = buf.slice(1)\n    this.fromDer(buf)\n    this.compressed = compressed\n    return this\n  }\n\n  /**\n     * In order to mimic the non-strict style of OpenSSL, set strict = false. For\n     * information and what prefixes 0x06 and 0x07 mean, in addition to the normal\n     * compressed and uncompressed public keys, see the message by Peter Wuille\n     * where he discovered these \"hybrid pubKeys\" on the mailing list:\n     * http://sourceforge.net/p/bitcoin/mailman/message/29416133/\n     */\n  fromDer (buf, strict) {\n    if (strict === undefined) {\n      strict = true\n    } else {\n      strict = false\n    }\n    if (\n      buf[0] === 0x04 ||\n        (!strict && (buf[0] === 0x06 || buf[0] === 0x07))\n    ) {\n      const xbuf = buf.slice(1, 33)\n      const ybuf = buf.slice(33, 65)\n      if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n        throw new Error('LEngth of x and y must be 32 bytes')\n      }\n      const x = new Bn(xbuf)\n      const y = new Bn(ybuf)\n      this.point = new Point(x, y)\n      this.compressed = false\n    } else if (buf[0] === 0x03) {\n      const xbuf = buf.slice(1)\n      const x = new Bn(xbuf)\n      this.fromX(true, x)\n      this.compressed = true\n    } else if (buf[0] === 0x02) {\n      const xbuf = buf.slice(1)\n      const x = new Bn(xbuf)\n      this.fromX(false, x)\n      this.compressed = true\n    } else {\n      throw new Error('Invalid DER format pubKey')\n    }\n    return this\n  }\n\n  static fromDer (buf, strict) {\n    return new this().fromDer(buf, strict)\n  }\n\n  fromString (str) {\n    this.fromDer(Buffer.from(str, 'hex'))\n    return this\n  }\n\n  fromX (odd, x) {\n    if (typeof odd !== 'boolean') {\n      throw new Error('Must specify whether y is odd or not (true or false)')\n    }\n    this.point = Point.fromX(odd, x)\n    return this\n  }\n\n  static fromX (odd, x) {\n    return new this().fromX(odd, x)\n  }\n\n  toBuffer () {\n    const compressed = this.compressed === undefined ? true : this.compressed\n    return this.toDer(compressed)\n  }\n\n  toFastBuffer () {\n    if (!this.point) {\n      return Buffer.alloc(0)\n    }\n    const bw = new Bw()\n    const compressed =\n        this.compressed === undefined ? true : Boolean(this.compressed)\n    bw.writeUInt8(Number(compressed))\n    bw.write(this.toDer(false))\n    return bw.toBuffer()\n  }\n\n  toDer (compressed) {\n    compressed = compressed === undefined ? this.compressed : compressed\n    if (typeof compressed !== 'boolean') {\n      throw new Error(\n        'Must specify whether the public key is compressed or not (true or false)'\n      )\n    }\n\n    const x = this.point.getX()\n    const y = this.point.getY()\n\n    const xbuf = x.toBuffer({ size: 32 })\n    const ybuf = y.toBuffer({ size: 32 })\n\n    let prefix\n    if (!compressed) {\n      prefix = Buffer.from([0x04])\n      return Buffer.concat([prefix, xbuf, ybuf])\n    } else {\n      const odd = ybuf[ybuf.length - 1] % 2\n      if (odd) {\n        prefix = Buffer.from([0x03])\n      } else {\n        prefix = Buffer.from([0x02])\n      }\n      return Buffer.concat([prefix, xbuf])\n    }\n  }\n\n  toString () {\n    const compressed = this.compressed === undefined ? true : this.compressed\n    return this.toDer(compressed).toString('hex')\n  }\n\n  /**\n     * Translated from bitcoind's IsCompressedOrUncompressedPubKey\n     */\n  static isCompressedOrUncompressed (buf) {\n    if (buf.length < 33) {\n      //  Non-canonical public key: too short\n      return false\n    }\n    if (buf[0] === 0x04) {\n      if (buf.length !== 65) {\n        //  Non-canonical public key: invalid length for uncompressed key\n        return false\n      }\n    } else if (buf[0] === 0x02 || buf[0] === 0x03) {\n      if (buf.length !== 33) {\n        //  Non-canonical public key: invalid length for compressed key\n        return false\n      }\n    } else {\n      //  Non-canonical public key: neither compressed nor uncompressed\n      return false\n    }\n    return true\n  }\n\n  // https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n  validate () {\n    if (this.point.isInfinity()) {\n      throw new Error('point: Point cannot be equal to Infinity')\n    }\n    if (this.point.eq(new Point(new Bn(0), new Bn(0)))) {\n      throw new Error('point: Point cannot be equal to 0, 0')\n    }\n    this.point.validate()\n    return this\n  }\n}\n\nexport { PubKey }\n","/**\n * Random Number Generator\n * =======================\n *\n * Random numbers are important in bitcoin primarily for generating private\n * keys. It is also important for creating signatures if you are using a random\n * value of k, but Yours Bitcoin defaults to using deterministic k. That means\n * computing a random private key, or a random seed for use in Bip39 or Bip32,\n * is the primary use of the random number generator.  Note that the simplicity\n * of this class is extremely carefully considered. It is easy to audit that\n * this code runs node's randomBytes function. It is also easy to audit that\n * the randomBytes method is correctly interpreted as\n * window.crypto.getRandomValues when this code is browserified by browserify,\n * and thus also works correctly in the browser. We deliberately do not do\n * anything else to this random number in order to minimize possible errors in\n * this absolutely critical code.\n */\n'use strict'\n\nimport randomBytes from 'randombytes'\n\nclass Random {}\n\nRandom.getRandomBuffer = function (size) {\n  return randomBytes(size)\n}\n\nexport { Random }\n","/**\n * Private Key\n * ===========\n *\n * A private key is used for signing transactions (or messages). The primary\n * way to use this is new PrivKey().fromRandom(), or new PrivKey().fromBuffer(buf).\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Point } from './point'\nimport { Constants } from './constants'\nimport { Base58Check } from './base-58-check'\nimport { Random } from './random'\nimport { Struct } from './struct'\n\nclass PrivKey extends Struct {\n  constructor (bn, compressed, constants = null) {\n    super({ bn, compressed })\n    constants = constants || Constants.Default.PrivKey\n    this.Constants = constants\n  }\n\n  fromJSON (json) {\n    this.fromHex(json)\n    return this\n  }\n\n  toJSON () {\n    return this.toHex()\n  }\n\n  fromRandom () {\n    let privBuf, bn, condition\n\n    do {\n      privBuf = Random.getRandomBuffer(32)\n      bn = new Bn().fromBuffer(privBuf)\n      condition = bn.lt(Point.getN())\n    } while (!condition)\n\n    this.fromObject({\n      bn: bn,\n      compressed: true\n    })\n    return this\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  toBuffer () {\n    let compressed = this.compressed\n\n    if (compressed === undefined) {\n      compressed = true\n    }\n\n    const privBuf = this.bn.toBuffer({ size: 32 })\n    let buf\n    if (compressed) {\n      buf = Buffer.concat([\n        Buffer.from([this.Constants.versionByteNum]),\n        privBuf,\n        Buffer.from([0x01])\n      ])\n    } else {\n      buf = Buffer.concat([Buffer.from([this.Constants.versionByteNum]), privBuf])\n    }\n\n    return buf\n  }\n\n  fromBuffer (buf) {\n    if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n      this.compressed = true\n    } else if (buf.length === 1 + 32) {\n      this.compressed = false\n    } else {\n      throw new Error(\n        'Length of privKey buffer must be 33 (uncompressed pubKey) or 34 (compressed pubKey)'\n      )\n    }\n\n    if (buf[0] !== this.Constants.versionByteNum) {\n      throw new Error('Invalid versionByteNum byte')\n    }\n\n    return this.fromBn(new Bn().fromBuffer(buf.slice(1, 1 + 32)))\n  }\n\n  toBn () {\n    return this.bn\n  }\n\n  fromBn (bn) {\n    this.bn = bn\n    return this\n  }\n\n  static fromBn (bn) {\n    return new this().fromBn(bn)\n  }\n\n  validate () {\n    if (!this.bn.lt(Point.getN())) {\n      throw new Error('Number must be less than N')\n    }\n    if (typeof this.compressed !== 'boolean') {\n      throw new Error(\n        'Must specify whether the corresponding public key is compressed or not (true or false)'\n      )\n    }\n    return this\n  }\n\n  /**\n     * Output the private key a Wallet Import Format (Wif) string.\n     */\n  toWif () {\n    return Base58Check.encode(this.toBuffer())\n  }\n\n  /**\n     * Input the private key from a Wallet Import Format (Wif) string.\n     */\n  fromWif (str) {\n    return this.fromBuffer(Base58Check.decode(str))\n  }\n\n  static fromWif (str) {\n    return new this().fromWif(str)\n  }\n\n  toString () {\n    return this.toWif()\n  }\n\n  fromString (str) {\n    return this.fromWif(str)\n  }\n}\n\nPrivKey.Mainnet = class extends PrivKey {\n  constructor (bn, compressed) {\n    super(bn, compressed, Constants.Mainnet.PrivKey)\n  }\n}\n\nPrivKey.Testnet = class extends PrivKey {\n  constructor (bn, compressed) {\n    super(bn, compressed, Constants.Testnet.PrivKey)\n  }\n}\n\nexport { PrivKey }\n","/**\n * Signature\n * =========\n *\n * A signature is the thing you make when you want to sign a transaction, or\n * the thing you want to verify if you want to ensure that someone signed a\n * transaction. It has an r and s value, which are the cryptographic big\n * numbers that define a signature. And since this is a bitcoin library, it\n * also has nHashType, which is the way to hash a transaction and is used in\n * the binary format of a signature when it is in a transaction. We also\n * support a public key recover value, recovery, allowing one to compute the\n * public key from a signature. The \"compressed\" value is also necessary to\n * accurately compute the public key from a signature.\n *\n * There are a few different formats of a signature in bitcoin. One is DER, the\n * other is the TxFormat which is the same as DER but with the nHashType byte\n * appended, and the final one is Compact, which is used by Bitcoin Signed\n * Message (Bsm).\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Struct } from './struct'\n\n/**\n   * r, s: big numbers constiting a cryptographic signature\n   * nHashType: found at the end of a signature in a transaction\n   * recovery: public key recovery number\n   * compressed: whether the recovered pubKey is compressed\n   */\nclass Sig extends Struct {\n  constructor (r, s, nHashType, recovery, compressed) {\n    super({ r, s, nHashType, recovery, compressed })\n  }\n\n  fromBuffer (buf) {\n    try {\n      return this.fromDer(buf, true)\n    } catch (e) {}\n    try {\n      return this.fromCompact(buf)\n    } catch (e) {}\n    return this.fromTxFormat(buf)\n  }\n\n  toBuffer () {\n    if (this.nHashType !== undefined) {\n      return this.toTxFormat()\n    } else if (this.recovery !== undefined) {\n      return this.toCompact()\n    }\n    return this.toDer()\n  }\n\n  // The format used by \"message\"\n  fromCompact (buf) {\n    let compressed = true\n    let recovery = buf.slice(0, 1)[0] - 27 - 4\n    if (recovery < 0) {\n      compressed = false\n      recovery = recovery + 4\n    }\n\n    if (\n      !(recovery === 0 || recovery === 1 || recovery === 2 || recovery === 3)\n    ) {\n      throw new Error('i must be 0, 1, 2, or 3')\n    }\n\n    this.compressed = compressed\n    this.recovery = recovery\n\n    const rsbuf = buf.slice(1)\n    this.fromRS(rsbuf)\n\n    return this\n  }\n\n  static fromCompact (buf) {\n    return new this().fromCompact(buf)\n  }\n\n  fromRS (rsbuf) {\n    const b2 = rsbuf.slice(0, 32)\n    const b3 = rsbuf.slice(32, 64)\n    if (b2.length !== 32) {\n      throw new Error('r must be 32 bytes')\n    }\n    if (b3.length !== 32 || rsbuf.length > 64) {\n      throw new Error('s must be 32 bytes')\n    }\n    this.r = new Bn().fromBuffer(b2)\n    this.s = new Bn().fromBuffer(b3)\n    return this\n  }\n\n  static fromRS (rsbuf) {\n    return new this().fromRS(rsbuf)\n  }\n\n  // The format used in a tx, except without the nHashType at the end\n  fromDer (buf, strict) {\n    const obj = Sig.parseDer(buf, strict)\n    this.r = obj.r\n    this.s = obj.s\n\n    return this\n  }\n\n  static fromDer (buf, strict) {\n    return new this().fromDer(buf, strict)\n  }\n\n  // The format used in a tx\n  fromTxFormat (buf) {\n    if (buf.length === 0) {\n      // allow setting a \"blank\" signature\n      this.r = new Bn(1)\n      this.s = new Bn(1)\n      this.nHashType = 1\n      return this\n    }\n    const nHashType = buf.readUInt8(buf.length - 1)\n    const derbuf = buf.slice(0, buf.length - 1)\n    this.fromDer(derbuf, false)\n    this.nHashType = nHashType\n    return this\n  }\n\n  static fromTxFormat (buf) {\n    return new this().fromTxFormat(buf)\n  }\n\n  fromString (str) {\n    return this.fromHex(str)\n  }\n\n  /**\n     * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n     */\n  static parseDer (buf, strict) {\n    if (strict === undefined) {\n      strict = true\n    }\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new Error('DER formatted signature should be a buffer')\n    }\n\n    const header = buf[0]\n\n    if (header !== 0x30) {\n      throw new Error('Header byte should be 0x30')\n    }\n\n    let length = buf[1]\n    const buflength = buf.slice(2).length\n    if (strict && length !== buflength) {\n      throw new Error('LEngth byte should length of what follows')\n    } else {\n      length = length < buflength ? length : buflength\n    }\n\n    const rheader = buf[2 + 0]\n    if (rheader !== 0x02) {\n      throw new Error('Integer byte for r should be 0x02')\n    }\n\n    const rlength = buf[2 + 1]\n    const rbuf = buf.slice(2 + 2, 2 + 2 + rlength)\n    const r = new Bn().fromBuffer(rbuf)\n    const rneg = buf[2 + 1 + 1] === 0x00\n    if (rlength !== rbuf.length) {\n      throw new Error('LEngth of r incorrect')\n    }\n\n    const sheader = buf[2 + 2 + rlength + 0]\n    if (sheader !== 0x02) {\n      throw new Error('Integer byte for s should be 0x02')\n    }\n\n    const slength = buf[2 + 2 + rlength + 1]\n    const sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength)\n    const s = new Bn().fromBuffer(sbuf)\n    const sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00\n    if (slength !== sbuf.length) {\n      throw new Error('LEngth of s incorrect')\n    }\n\n    const sumlength = 2 + 2 + rlength + 2 + slength\n    if (length !== sumlength - 2) {\n      throw new Error('LEngth of signature incorrect')\n    }\n\n    const obj = {\n      header: header,\n      length: length,\n      rheader: rheader,\n      rlength: rlength,\n      rneg: rneg,\n      rbuf: rbuf,\n      r: r,\n      sheader: sheader,\n      slength: slength,\n      sneg: sneg,\n      sbuf: sbuf,\n      s: s\n    }\n\n    return obj\n  }\n\n  /**\n     * This function is translated from bitcoind's IsDERSignature and is used in\n     * the script interpreter.  This \"DER\" format actually includes an extra byte,\n     * the nHashType, at the end. It is really the tx format, not DER format.\n     *\n     * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n     * Where R and S are not negative (their first byte has its highest bit not set), and not\n     * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n     * in which case a single 0 byte is necessary and even required).\n     *\n     * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n     */\n  static IsTxDer (buf) {\n    if (buf.length < 9) {\n      //  Non-canonical signature: too short\n      return false\n    }\n    if (buf.length > 73) {\n      // Non-canonical signature: too long\n      return false\n    }\n    if (buf[0] !== 0x30) {\n      //  Non-canonical signature: wrong type\n      return false\n    }\n    if (buf[1] !== buf.length - 3) {\n      //  Non-canonical signature: wrong length marker\n      return false\n    }\n    const nLEnR = buf[3]\n    if (5 + nLEnR >= buf.length) {\n      //  Non-canonical signature: S length misplaced\n      return false\n    }\n    const nLEnS = buf[5 + nLEnR]\n    if (nLEnR + nLEnS + 7 !== buf.length) {\n      //  Non-canonical signature: R+S length mismatch\n      return false\n    }\n\n    const R = buf.slice(4)\n    if (buf[4 - 2] !== 0x02) {\n      //  Non-canonical signature: R value type mismatch\n      return false\n    }\n    if (nLEnR === 0) {\n      //  Non-canonical signature: R length is zero\n      return false\n    }\n    if (R[0] & 0x80) {\n      //  Non-canonical signature: R value negative\n      return false\n    }\n    if (nLEnR > 1 && R[0] === 0x00 && !(R[1] & 0x80)) {\n      //  Non-canonical signature: R value excessively padded\n      return false\n    }\n\n    const S = buf.slice(6 + nLEnR)\n    if (buf[6 + nLEnR - 2] !== 0x02) {\n      //  Non-canonical signature: S value type mismatch\n      return false\n    }\n    if (nLEnS === 0) {\n      //  Non-canonical signature: S length is zero\n      return false\n    }\n    if (S[0] & 0x80) {\n      //  Non-canonical signature: S value negative\n      return false\n    }\n    if (nLEnS > 1 && S[0] === 0x00 && !(S[1] & 0x80)) {\n      //  Non-canonical signature: S value excessively padded\n      return false\n    }\n    return true\n  }\n\n  /**\n     * Compares to bitcoind's IsLowDERSignature\n     * See also Ecdsa signature algorithm which enforces this.\n     * See also Bip 62, \"low S values in signatures\"\n     */\n  hasLowS () {\n    if (\n      this.s.lt(1) ||\n        this.s.gt(\n          Bn.fromBuffer(\n            Buffer.from(\n              '7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0',\n              'hex'\n            )\n          )\n        )\n    ) {\n      return false\n    }\n    return true\n  }\n\n  /**\n     * Ensures the nHashType is exactly equal to one of the standard options or combinations thereof.\n     * Translated from bitcoind's IsDefinedHashtypeSignature\n     */\n  hasDefinedHashType () {\n    if (\n      this.nHashType < Sig.SIGHASH_ALL ||\n        this.nHashType > Sig.SIGHASH_SINGLE\n    ) {\n      return false\n    }\n    return true\n  }\n\n  toCompact (recovery, compressed) {\n    recovery = typeof recovery === 'number' ? recovery : this.recovery\n    compressed =\n        typeof compressed === 'boolean' ? compressed : this.compressed\n\n    if (\n      !(recovery === 0 || recovery === 1 || recovery === 2 || recovery === 3)\n    ) {\n      throw new Error('recovery must be equal to 0, 1, 2, or 3')\n    }\n\n    let val = recovery + 27 + 4\n    if (compressed === false) {\n      val = val - 4\n    }\n    const b1 = Buffer.from([val])\n    const b2 = this.r.toBuffer({ size: 32 })\n    const b3 = this.s.toBuffer({ size: 32 })\n    return Buffer.concat([b1, b2, b3])\n  }\n\n  toRS () {\n    return Buffer.concat([\n      this.r.toBuffer({ size: 32 }),\n      this.s.toBuffer({ size: 32 })\n    ])\n  }\n\n  toDer () {\n    const rnbuf = this.r.toBuffer()\n    const snbuf = this.s.toBuffer()\n\n    const rneg = rnbuf[0] & 0x80\n    const sneg = snbuf[0] & 0x80\n\n    const rbuf = rneg ? Buffer.concat([Buffer.from([0x00]), rnbuf]) : rnbuf\n    const sbuf = sneg ? Buffer.concat([Buffer.from([0x00]), snbuf]) : snbuf\n\n    const length = 2 + rbuf.length + 2 + sbuf.length\n    const rlength = rbuf.length\n    const slength = sbuf.length\n    const rheader = 0x02\n    const sheader = 0x02\n    const header = 0x30\n\n    const der = Buffer.concat([\n      Buffer.from([header, length, rheader, rlength]),\n      rbuf,\n      Buffer.from([sheader, slength]),\n      sbuf\n    ])\n    return der\n  }\n\n  toTxFormat () {\n    const derbuf = this.toDer()\n    const buf = Buffer.alloc(1)\n    buf.writeUInt8(this.nHashType, 0)\n    return Buffer.concat([derbuf, buf])\n  }\n\n  toString () {\n    return this.toHex()\n  }\n}\n\nSig.SIGHASH_ALL = 0x00000001\nSig.SIGHASH_NONE = 0x00000002\nSig.SIGHASH_SINGLE = 0x00000003\nSig.SIGHASH_FORKID = 0x00000040\nSig.SIGHASH_ANYONECANPAY = 0x00000080\n\nexport { Sig }\n","/*\n * Script\n * ======\n *\n * Script is the scripting language built into bitcoin. The Script class lets\n * you create an instance of a script, e.g. for a scriptSig or a scriptPubKey.\n * It understands both the binary format, as well as two different string\n * formats. The default string format, to/fromString, is a custom format only\n * used by Yours Bitcoin because it is isomorphic to the binary format (or as\n * isomorphic as it can be ... since OP_0 and OP_FALSE have the same byte\n * value, and so do OP_1 and OP_TRUE). The bitcoind string format is also\n * support, but that format is not isomorphic (i.e., if you pull in a string\n * and then write it again, you are likely to get back a different string, even\n * if you don't use OP_0, OP_FALSE, OP_1, or OP_TRUE).\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { cmp } from './cmp'\nimport { OpCode } from './op-code'\nimport { PubKey } from './pub-key'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\n\nclass Script extends Struct {\n  constructor (chunks = []) {\n    super({ chunks })\n  }\n\n  fromJSON (json) {\n    return this.fromString(json)\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  fromBuffer (buf) {\n    this.chunks = []\n\n    const br = new Br(buf)\n    while (!br.eof()) {\n      const opCodeNum = br.readUInt8()\n\n      let len = 0\n      let buf = Buffer.from([])\n      if (opCodeNum > 0 && opCodeNum < OpCode.OP_PUSHDATA1) {\n        len = opCodeNum\n        this.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else if (opCodeNum === OpCode.OP_PUSHDATA1) {\n        try {\n          len = br.readUInt8()\n          buf = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        this.chunks.push({\n          buf: buf,\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else if (opCodeNum === OpCode.OP_PUSHDATA2) {\n        try {\n          len = br.readUInt16LE()\n          buf = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        this.chunks.push({\n          buf: buf,\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else if (opCodeNum === OpCode.OP_PUSHDATA4) {\n        try {\n          len = br.readUInt32LE()\n          buf = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        this.chunks.push({\n          buf: buf,\n          len: len,\n          opCodeNum: opCodeNum\n        })\n      } else {\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n      }\n    }\n\n    return this\n  }\n\n  toBuffer () {\n    const bw = new Bw()\n\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const opCodeNum = chunk.opCodeNum\n      bw.writeUInt8(opCodeNum)\n      if (chunk.buf) {\n        if (opCodeNum < OpCode.OP_PUSHDATA1) {\n          bw.write(chunk.buf)\n        } else if (opCodeNum === OpCode.OP_PUSHDATA1) {\n          bw.writeUInt8(chunk.len)\n          bw.write(chunk.buf)\n        } else if (opCodeNum === OpCode.OP_PUSHDATA2) {\n          bw.writeUInt16LE(chunk.len)\n          bw.write(chunk.buf)\n        } else if (opCodeNum === OpCode.OP_PUSHDATA4) {\n          bw.writeUInt32LE(chunk.len)\n          bw.write(chunk.buf)\n        }\n      }\n    }\n\n    return bw.toBuffer()\n  }\n\n  fromString (str) {\n    this.chunks = []\n    if (str === '' || str === undefined) {\n      return this\n    }\n\n    const tokens = str.split(' ')\n    let i = 0\n    while (i < tokens.length) {\n      const token = tokens[i]\n      let opCodeNum\n      try {\n        const opCode = new OpCode().fromString(token)\n        opCodeNum = opCode.toNumber()\n      } catch (err) {}\n\n      if (opCodeNum === undefined) {\n        opCodeNum = parseInt(token, 10)\n        if (opCodeNum > 0 && opCodeNum < OpCode.OP_PUSHDATA1) {\n          this.chunks.push({\n            buf: Buffer.from(tokens[i + 1].slice(2), 'hex'),\n            len: opCodeNum,\n            opCodeNum: opCodeNum\n          })\n          i = i + 2\n        } else if (opCodeNum === 0) {\n          this.chunks.push({\n            opCodeNum: 0\n          })\n          i = i + 1\n        } else {\n          throw new Error('Invalid script')\n        }\n      } else if (\n        opCodeNum === OpCode.OP_PUSHDATA1 ||\n          opCodeNum === OpCode.OP_PUSHDATA2 ||\n          opCodeNum === OpCode.OP_PUSHDATA4\n      ) {\n        if (tokens[i + 2].slice(0, 2) !== '0x') {\n          throw new Error('Pushdata data must start with 0x')\n        }\n        this.chunks.push({\n          buf: Buffer.from(tokens[i + 2].slice(2), 'hex'),\n          len: parseInt(tokens[i + 1], 10),\n          opCodeNum: opCodeNum\n        })\n        i = i + 3\n      } else {\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      }\n    }\n    return this\n  }\n\n  toString () {\n    let str = ''\n\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const opCodeNum = chunk.opCodeNum\n      if (!chunk.buf) {\n        if (OpCode.str[opCodeNum] !== undefined) {\n          str = str + ' ' + new OpCode(opCodeNum).toString()\n        } else {\n          str = str + ' ' + '0x' + opCodeNum.toString(16)\n        }\n      } else {\n        if (\n          opCodeNum === OpCode.OP_PUSHDATA1 ||\n            opCodeNum === OpCode.OP_PUSHDATA2 ||\n            opCodeNum === OpCode.OP_PUSHDATA4\n        ) {\n          str = str + ' ' + new OpCode(opCodeNum).toString()\n        }\n        str = str + ' ' + chunk.len\n        str = str + ' ' + '0x' + chunk.buf.toString('hex')\n      }\n    }\n\n    return str.substr(1)\n  }\n\n  /**\n     * Input the script from the script string format used in bitcoind data tests\n     */\n  fromBitcoindString (str) {\n    const bw = new Bw()\n    const tokens = str.split(' ')\n    let i\n    for (i = 0; i < tokens.length; i++) {\n      const token = tokens[i]\n      if (token === '') {\n        continue\n      }\n      if (token[0] === '0' && token[1] === 'x') {\n        const hex = token.slice(2)\n        bw.write(Buffer.from(hex, 'hex'))\n      } else if (token[0] === \"'\") {\n        const tstr = token.slice(1, token.length - 1)\n        const cbuf = Buffer.from(tstr)\n        const tbuf = new Script().writeBuffer(cbuf).toBuffer()\n        bw.write(tbuf)\n      } else if (OpCode['OP_' + token] !== undefined) {\n        const opstr = 'OP_' + token\n        const opCodeNum = OpCode[opstr]\n        bw.writeUInt8(opCodeNum)\n      } else if (typeof OpCode[token] === 'number') {\n        const opstr = token\n        const opCodeNum = OpCode[opstr]\n        bw.writeUInt8(opCodeNum)\n      } else if (!isNaN(parseInt(token, 10))) {\n        const bn = new Bn(token)\n        const script = new Script().writeBn(bn)\n        const tbuf = script.toBuffer()\n        bw.write(tbuf)\n      } else {\n        throw new Error('Could not determine type of script value')\n      }\n    }\n    const buf = bw.toBuffer()\n    return this.fromBuffer(buf)\n  }\n\n  static fromBitcoindString (str) {\n    return new this().fromBitcoindString(str)\n  }\n\n  /**\n     * Output the script to the script string format used in bitcoind data tests.\n     */\n  toBitcoindString () {\n    let str = ''\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      if (chunk.buf) {\n        const buf = new Script([chunk]).toBuffer()\n        const hex = buf.toString('hex')\n        str = str + ' ' + '0x' + hex\n      } else if (OpCode.str[chunk.opCodeNum] !== undefined) {\n        const ostr = new OpCode(chunk.opCodeNum).toString()\n        str = str + ' ' + ostr.slice(3) // remove OP_\n      } else {\n        str = str + ' ' + '0x' + chunk.opCodeNum.toString(16)\n      }\n    }\n    return str.substr(1)\n  }\n\n  /**\n     * Input the script from the script string format used in bitcoind data tests\n     */\n  fromAsmString (str) {\n    this.chunks = []\n\n    const tokens = str.split(' ')\n    let i = 0\n    while (i < tokens.length) {\n      const token = tokens[i]\n      let opCode, opCodeNum\n      try {\n        opCode = OpCode.fromString(token)\n        opCodeNum = opCode.toNumber()\n      } catch (err) {\n        opCode = undefined\n        opCodeNum = undefined\n      }\n\n      // we start with two special cases, 0 and -1, which are handled specially in\n      // toASM. see _chunkToString.\n      if (token === '0') {\n        opCodeNum = 0\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      } else if (token === '-1') {\n        opCodeNum = OpCode.OP_1NEGATE\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      } else if (opCode === undefined) {\n        const hex = tokens[i]\n        const buf = Buffer.from(hex, 'hex')\n        if (buf.toString('hex') !== hex) {\n          throw new Error('invalid hex string in script')\n        }\n        const len = buf.length\n        if (len >= 0 && len < OpCode.OP_PUSHDATA1) {\n          opCodeNum = len\n        } else if (len < Math.pow(2, 8)) {\n          opCodeNum = OpCode.OP_PUSHDATA1\n        } else if (len < Math.pow(2, 16)) {\n          opCodeNum = OpCode.OP_PUSHDATA2\n        } else if (len < Math.pow(2, 32)) {\n          opCodeNum = OpCode.OP_PUSHDATA4\n        }\n        this.chunks.push({\n          buf: buf,\n          len: buf.length,\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      } else {\n        this.chunks.push({\n          opCodeNum: opCodeNum\n        })\n        i = i + 1\n      }\n    }\n    return this\n  }\n\n  static fromAsmString (str) {\n    return new this().fromAsmString(str)\n  }\n\n  /**\n     * Output the script to the script string format used in bitcoind data tests.\n     */\n  toAsmString () {\n    var str = ''\n    for (var i = 0; i < this.chunks.length; i++) {\n      var chunk = this.chunks[i]\n      str += this._chunkToString(chunk)\n    }\n\n    return str.substr(1)\n  }\n\n  _chunkToString (chunk, type) {\n    var opCodeNum = chunk.opCodeNum\n    var str = ''\n    if (!chunk.buf) {\n      // no data chunk\n      if (typeof OpCode.str[opCodeNum] !== 'undefined') {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opCodeNum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0'\n        } else if (opCodeNum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1'\n        } else {\n          str = str + ' ' + new OpCode(opCodeNum).toString()\n        }\n      } else {\n        var numstr = opCodeNum.toString(16)\n        if (numstr.length % 2 !== 0) {\n          numstr = '0' + numstr\n        }\n        str = str + ' ' + numstr\n      }\n    } else {\n      // data chunk\n      if (chunk.len > 0) {\n        str = str + ' ' + chunk.buf.toString('hex')\n      }\n    }\n    return str\n  }\n\n  fromOpReturnData (dataBuf) {\n    this.writeOpCode(OpCode.OP_RETURN)\n    this.writeBuffer(dataBuf)\n    return this\n  }\n\n  static fromOpReturnData (dataBuf) {\n    return new this().fromOpReturnData(dataBuf)\n  }\n\n  fromSafeData (dataBuf) {\n    this.writeOpCode(OpCode.OP_FALSE)\n    this.writeOpCode(OpCode.OP_RETURN)\n    this.writeBuffer(dataBuf)\n    return this\n  }\n\n  static fromSafeData (dataBuf) {\n    return new this().fromSafeData(dataBuf)\n  }\n\n  fromSafeDataArray (dataBufs) {\n    this.writeOpCode(OpCode.OP_FALSE)\n    this.writeOpCode(OpCode.OP_RETURN)\n    for (const i in dataBufs) {\n      const dataBuf = dataBufs[i]\n      this.writeBuffer(dataBuf)\n    }\n    return this\n  }\n\n  static fromSafeDataArray (dataBufs) {\n    return new this().fromSafeDataArray(dataBufs)\n  }\n\n  getData () {\n    if (this.isSafeDataOut()) {\n      const chunks = this.chunks.slice(2)\n      const buffers = chunks.map(chunk => chunk.buf)\n      return buffers\n    }\n    if (this.isOpReturn()) {\n      const chunks = this.chunks.slice(1)\n      const buffers = chunks.map(chunk => chunk.buf)\n      return buffers\n    }\n    throw new Error('Unrecognized script type to get data from')\n  }\n\n  /**\n     * Turn script into a standard pubKeyHash output script\n     */\n  fromPubKeyHash (hashBuf) {\n    if (hashBuf.length !== 20) {\n      throw new Error('hashBuf must be a 20 byte buffer')\n    }\n    this.writeOpCode(OpCode.OP_DUP)\n    this.writeOpCode(OpCode.OP_HASH160)\n    this.writeBuffer(hashBuf)\n    this.writeOpCode(OpCode.OP_EQUALVERIFY)\n    this.writeOpCode(OpCode.OP_CHECKSIG)\n    return this\n  }\n\n  static fromPubKeyHash (hashBuf) {\n    return new this().fromPubKeyHash(hashBuf)\n  }\n\n  static sortPubKeys (pubKeys) {\n    return pubKeys.slice().sort((pubKey1, pubKey2) => {\n      const buf1 = pubKey1.toBuffer()\n      const buf2 = pubKey2.toBuffer()\n      const len = Math.max(buf1.length, buf2.length)\n      for (let i = 0; i <= len; i++) {\n        if (buf1[i] === undefined) {\n          return -1 // shorter strings come first\n        }\n        if (buf2[i] === undefined) {\n          return 1\n        }\n        if (buf1[i] < buf2[i]) {\n          return -1\n        }\n        if (buf1[i] > buf2[i]) {\n          return 1\n        } else {\n          continue\n        }\n      }\n    })\n  }\n\n  /**\n     * Generate a multisig output script from a list of public keys. sort\n     * defaults to true. If sort is true, the pubKeys are sorted\n     * lexicographically.\n     */\n  fromPubKeys (m, pubKeys, sort = true) {\n    if (typeof m !== 'number') {\n      throw new Error('m must be a number')\n    }\n    if (sort === true) {\n      pubKeys = Script.sortPubKeys(pubKeys)\n    }\n    this.writeOpCode(m + OpCode.OP_1 - 1)\n    for (const i in pubKeys) {\n      this.writeBuffer(pubKeys[i].toBuffer())\n    }\n    this.writeOpCode(pubKeys.length + OpCode.OP_1 - 1)\n    this.writeOpCode(OpCode.OP_CHECKMULTISIG)\n    return this\n  }\n\n  static fromPubKeys (m, pubKeys, sort) {\n    return new this().fromPubKeys(m, pubKeys, sort)\n  }\n\n  removeCodeseparators () {\n    const chunks = []\n    for (let i = 0; i < this.chunks.length; i++) {\n      if (this.chunks[i].opCodeNum !== OpCode.OP_CODESEPARATOR) {\n        chunks.push(this.chunks[i])\n      }\n    }\n    this.chunks = chunks\n    return this\n  }\n\n  isPushOnly () {\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const opCodeNum = chunk.opCodeNum\n      if (opCodeNum > OpCode.OP_16) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isNonSpendable () {\n    const startsWithOpFalse = this.chunks[0].opCodeNum === OpCode.OP_FALSE\n    const andThenReturns = this.chunks[1] && this.chunks[1].opCodeNum === OpCode.OP_RETURN\n    return !!startsWithOpFalse && !!andThenReturns\n  }\n\n  isOpReturn () {\n    if (\n      this.chunks[0].opCodeNum === OpCode.OP_RETURN &&\n        this.chunks.filter(chunk => Buffer.isBuffer(chunk.buf)).length === this.chunks.slice(1).length\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isSafeDataOut () {\n    if (this.chunks.length < 2) {\n      return false\n    }\n    if (this.chunks[0].opCodeNum !== OpCode.OP_FALSE) {\n      return false\n    }\n    var chunks = this.chunks.slice(1)\n    var script2 = new Script(chunks)\n    return script2.isOpReturn()\n  }\n\n  isPubKeyHashOut () {\n    if (\n      this.chunks[0] &&\n        this.chunks[0].opCodeNum === OpCode.OP_DUP &&\n        this.chunks[1] &&\n        this.chunks[1].opCodeNum === OpCode.OP_HASH160 &&\n        this.chunks[2].buf &&\n        this.chunks[3] &&\n        this.chunks[3].opCodeNum === OpCode.OP_EQUALVERIFY &&\n        this.chunks[4] &&\n        this.chunks[4].opCodeNum === OpCode.OP_CHECKSIG\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  /**\n     * A pubKeyHash input should consist of two push operations. The first push\n     * operation may be OP_0, which means the signature is missing, which is true\n     * for some partially signed (and invalid) transactions.\n     */\n  isPubKeyHashIn () {\n    if (\n      this.chunks.length === 2 &&\n        (this.chunks[0].buf || this.chunks[0].opCodeNum === OpCode.OP_0) &&\n        (this.chunks[1].buf || this.chunks[0].opCodeNum === OpCode.OP_0)\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isScriptHashOut () {\n    const buf = this.toBuffer()\n    return (\n      buf.length === 23 &&\n        buf[0] === OpCode.OP_HASH160 &&\n        buf[1] === 0x14 &&\n        buf[22] === OpCode.OP_EQUAL\n    )\n  }\n\n  /**\n     * Note that these are frequently indistinguishable from pubKeyHashin\n     */\n  isScriptHashIn () {\n    if (!this.isPushOnly()) {\n      return false\n    }\n    try {\n      new Script().fromBuffer(this.chunks[this.chunks.length - 1].buf)\n    } catch (err) {\n      return false\n    }\n    return true\n  }\n\n  isMultiSigOut () {\n    const m = this.chunks[0].opCodeNum - OpCode.OP_1 + 1\n    if (!(m >= 1 && m <= 16)) {\n      return false\n    }\n    const pubKeychunks = this.chunks.slice(1, this.chunks.length - 2)\n    if (\n      !pubKeychunks.every(chunk => {\n        try {\n          const buf = chunk.buf\n          const pubKey = new PubKey().fromDer(buf)\n          pubKey.validate()\n          return true\n        } catch (err) {\n          return false\n        }\n      })\n    ) {\n      return false\n    }\n    const n = this.chunks[this.chunks.length - 2].opCodeNum - OpCode.OP_1 + 1\n    if (!(n >= m && n <= 16)) {\n      return false\n    }\n    if (this.chunks[1 + n + 1].opCodeNum !== OpCode.OP_CHECKMULTISIG) {\n      return false\n    }\n    return true\n  }\n\n  isMultiSigIn () {\n    if (this.chunks[0].opCodeNum !== OpCode.OP_0) {\n      return false\n    }\n    const remaining = this.chunks.slice(1)\n    if (remaining.length < 1) {\n      return false\n    }\n    return remaining.every(\n      chunk => Buffer.isBuffer(chunk.buf) && Sig.IsTxDer(chunk.buf)\n    )\n  }\n\n  /**\n     * Analagous to bitcoind's FindAndDelete Find and deconste equivalent chunks,\n     * typically used with push data chunks.  Note that this will find and deconste\n     * not just the same data, but the same data with the same push data op as\n     * produced by default. i.e., if a pushdata in a tx does not use the minimal\n     * pushdata op, then when you try to remove the data it is pushing, it will not\n     * be removed, because they do not use the same pushdata op.\n     */\n  findAndDelete (script) {\n    const buf = script.toBuffer()\n    for (let i = 0; i < this.chunks.length; i++) {\n      const script2 = new Script([this.chunks[i]])\n      const buf2 = script2.toBuffer()\n      if (cmp(buf, buf2)) {\n        this.chunks.splice(i, 1)\n      }\n    }\n    return this\n  }\n\n  writeScript (script) {\n    this.chunks = this.chunks.concat(script.chunks)\n    return this\n  }\n\n  static writeScript (script) {\n    return new this().writeScript(script)\n  }\n\n  writeString (str) {\n    const script = new Script().fromString(str)\n    this.chunks = this.chunks.concat(script.chunks)\n    return this\n  }\n\n  static writeString (str) {\n    return new this().writeString(str)\n  }\n\n  writeOpCode (opCodeNum) {\n    this.chunks.push({ opCodeNum })\n    return this\n  }\n\n  static writeOpCode (opCodeNum) {\n    return new this().writeOpCode(opCodeNum)\n  }\n\n  setChunkOpCode (i, opCodeNum) {\n    this.chunks[i] = { opCodeNum }\n    return this\n  }\n\n  // write a big number in the minimal way\n  writeBn (bn) {\n    if (bn.cmp(0) === OpCode.OP_0) {\n      this.chunks.push({\n        opCodeNum: OpCode.OP_0\n      })\n    } else if (bn.cmp(-1) === 0) {\n      this.chunks.push({\n        opCodeNum: OpCode.OP_1NEGATE\n      })\n    } else if (bn.cmp(1) >= 0 && bn.cmp(16) <= 0) {\n      // see OP_1 - OP_16\n      this.chunks.push({\n        opCodeNum: bn.toNumber() + OpCode.OP_1 - 1\n      })\n    } else {\n      const buf = bn.toSm({ endian: 'little' })\n      this.writeBuffer(buf)\n    }\n    return this\n  }\n\n  static writeBn (bn) {\n    return new this().writeBn(bn)\n  }\n\n  writeNumber (number) {\n    this.writeBn(new Bn().fromNumber(number))\n    return this\n  }\n\n  static writeNumber (number) {\n    return new this().writeNumber(number)\n  }\n\n  setChunkBn (i, bn) {\n    this.chunks[i] = new Script().writeBn(bn).chunks[0]\n    return this\n  }\n\n  // note: this does not necessarily write buffers in the minimal way\n  // to write numbers in the minimal way, see writeBn\n  writeBuffer (buf) {\n    let opCodeNum\n    const len = buf.length\n    if (buf.length > 0 && buf.length < OpCode.OP_PUSHDATA1) {\n      opCodeNum = buf.length\n    } else if (buf.length === 0) {\n      opCodeNum = OpCode.OP_0\n    } else if (buf.length < Math.pow(2, 8)) {\n      opCodeNum = OpCode.OP_PUSHDATA1\n    } else if (buf.length < Math.pow(2, 16)) {\n      opCodeNum = OpCode.OP_PUSHDATA2\n    } else if (buf.length < Math.pow(2, 32)) {\n      opCodeNum = OpCode.OP_PUSHDATA4\n    } else {\n      throw new Error(\"You can't push that much data\")\n    }\n    this.chunks.push({\n      buf: buf,\n      len: len,\n      opCodeNum: opCodeNum\n    })\n    return this\n  }\n\n  static writeBuffer (buf) {\n    return new this().writeBuffer(buf)\n  }\n\n  setChunkBuffer (i, buf) {\n    this.chunks[i] = new Script().writeBuffer(buf).chunks[0]\n    return this\n  }\n\n  // make sure a push is the smallest way to push that particular data\n  // comes from bitcoind's script interpreter CheckMinimalPush function\n  checkMinimalPush (i) {\n    const chunk = this.chunks[i]\n    const buf = chunk.buf\n    const opCodeNum = chunk.opCodeNum\n    if (!buf) {\n      return true\n    }\n    if (buf.length === 0) {\n      // Could have used OP_0.\n      return opCodeNum === OpCode.OP_0\n    } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n      // Could have used OP_1 .. OP_16.\n      return opCodeNum === OpCode.OP_1 + (buf[0] - 1)\n    } else if (buf.length === 1 && buf[0] === 0x81) {\n      // Could have used OP_1NEGATE.\n      return opCodeNum === OpCode.OP_1NEGATE\n    } else if (buf.length <= 75) {\n      // Could have used a direct push (opCode indicating number of bytes pushed + those bytes).\n      return opCodeNum === buf.length\n    } else if (buf.length <= 255) {\n      // Could have used OP_PUSHDATA.\n      return opCodeNum === OpCode.OP_PUSHDATA1\n    } else if (buf.length <= 65535) {\n      // Could have used OP_PUSHDATA2.\n      return opCodeNum === OpCode.OP_PUSHDATA2\n    }\n    return true\n  }\n}\n\nexport { Script }\n","/**\n * Bitcoin Address\n * ===============\n *\n * A bitcoin address. Normal use cases:\n * const address = new Address().fromPubKey(pubKey)\n * const address = new Address().fromString(string)\n * const string = address.toString()\n * const script = address.toTxOutScript()\n * const isValid = Address.isValid(string)\n *\n * Can also do testnet:\n * const address = Address.Testnet()\n *\n * Note that an Address and an Addr are two completely different things. An\n * Address is what you send bitcoin to. An Addr is an ip address and port that\n * you connect to over the internet.\n */\n'use strict'\n\nimport { Base58Check } from './base-58-check'\nimport { Constants } from './constants'\nimport { Hash } from './hash'\nimport { OpCode } from './op-code'\nimport { PubKey } from './pub-key'\nimport { PrivKey } from './priv-key'\nimport { Script } from './script'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Address extends Struct {\n  constructor (versionByteNum, hashBuf, constants = null) {\n    super({ versionByteNum, hashBuf })\n    constants = constants || Constants.Default.Address\n    this.Constants = constants\n  }\n\n  fromBuffer (buf) {\n    if (buf.length !== 1 + 20) {\n      throw new Error('address buffers must be exactly 21 bytes')\n    }\n    if (\n      buf[0] !== this.Constants.pubKeyHash\n    ) {\n      throw new Error('address: invalid versionByteNum byte')\n    }\n    this.versionByteNum = buf[0]\n    this.hashBuf = buf.slice(1)\n    return this\n  }\n\n  fromPubKeyHashBuf (hashBuf) {\n    this.hashBuf = hashBuf\n    this.versionByteNum = this.Constants.pubKeyHash\n    return this\n  }\n\n  static fromPubKeyHashBuf (hashBuf) {\n    return new this().fromPubKeyHashBuf(hashBuf)\n  }\n\n  fromPubKey (pubKey) {\n    const hashBuf = Hash.sha256Ripemd160(pubKey.toBuffer())\n    return this.fromPubKeyHashBuf(hashBuf)\n  }\n\n  static fromPubKey (pubKey) {\n    return new this().fromPubKey(pubKey)\n  }\n\n  async asyncFromPubKey (pubKey) {\n    const args = [pubKey]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromPubKey',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromPubKey (pubKey) {\n    return new this().asyncFromPubKey(pubKey)\n  }\n\n  fromPrivKey (privKey) {\n    const pubKey = new PubKey().fromPrivKey(privKey)\n    const hashBuf = Hash.sha256Ripemd160(pubKey.toBuffer())\n    return this.fromPubKeyHashBuf(hashBuf)\n  }\n\n  static fromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  async asyncFromPrivKey (privKey) {\n    const args = [privKey]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromPrivKey',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  fromRandom () {\n    const randomPrivKey = new PrivKey().fromRandom()\n    return this.fromPrivKey(randomPrivKey)\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  async asyncFromRandom () {\n    const args = []\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromRandom',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromRandom () {\n    return new this().fromRandom()\n  }\n\n  fromString (str) {\n    const buf = Base58Check.decode(str)\n    return this.fromBuffer(buf)\n  }\n\n  async asyncFromString (str) {\n    const args = [str]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromString',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromString (str) {\n    return new this().asyncFromString(str)\n  }\n\n  static isValid (addrstr) {\n    let address\n    try {\n      address = new Address().fromString(addrstr)\n    } catch (e) {\n      return false\n    }\n    return address.isValid()\n  }\n\n  isValid () {\n    try {\n      this.validate()\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  toTxOutScript () {\n    const script = new Script()\n    script.writeOpCode(OpCode.OP_DUP)\n    script.writeOpCode(OpCode.OP_HASH160)\n    script.writeBuffer(this.hashBuf)\n    script.writeOpCode(OpCode.OP_EQUALVERIFY)\n    script.writeOpCode(OpCode.OP_CHECKSIG)\n\n    return script\n  }\n\n  fromTxInScript (script) {\n    const pubKeyHashBuf = Hash.sha256Ripemd160(script.chunks[1].buf || Buffer.from('00'.repeat(32), 'hex'))\n    return this.fromPubKeyHashBuf(pubKeyHashBuf)\n  }\n\n  static fromTxInScript (script) {\n    return new this().fromTxInScript(script)\n  }\n\n  fromTxOutScript (script) {\n    return this.fromPubKeyHashBuf(script.chunks[2].buf)\n  }\n\n  static fromTxOutScript (script) {\n    return new this().fromTxOutScript(script)\n  }\n\n  toBuffer () {\n    const versionByteBuf = Buffer.from([this.versionByteNum])\n    const buf = Buffer.concat([versionByteBuf, this.hashBuf])\n    return buf\n  }\n\n  toJSON () {\n    const json = {}\n    if (this.hashBuf) {\n      json.hashBuf = this.hashBuf.toString('hex')\n    }\n    if (typeof this.versionByteNum !== 'undefined') {\n      json.versionByteNum = this.versionByteNum\n    }\n    return json\n  }\n\n  fromJSON (json) {\n    if (json.hashBuf) {\n      this.hashBuf = Buffer.from(json.hashBuf, 'hex')\n    }\n    if (typeof json.versionByteNum !== 'undefined') {\n      this.versionByteNum = json.versionByteNum\n    }\n    return this\n  }\n\n  toString () {\n    return Base58Check.encode(this.toBuffer())\n  }\n\n  async asyncToString () {\n    const args = []\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'toString',\n      args\n    )\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  validate () {\n    if (!Buffer.isBuffer(this.hashBuf) || this.hashBuf.length !== 20) {\n      throw new Error('hashBuf must be a buffer of 20 bytes')\n    }\n    if (\n      this.versionByteNum !== this.Constants.pubKeyHash\n    ) {\n      throw new Error('invalid versionByteNum')\n    }\n    return this\n  }\n}\n\nAddress.Mainnet = class extends Address {\n  constructor (versionByteNum, hashBuf) {\n    super(versionByteNum, hashBuf, Constants.Mainnet.Address)\n  }\n}\n\nAddress.Testnet = class extends Address {\n  constructor (versionByteNum, hashBuf) {\n    super(versionByteNum, hashBuf, Constants.Testnet.Address)\n  }\n}\n\nexport { Address }\n","/**\n * Bip32: HD Wallets\n * =================\n *\n * Bip32 is hierarchical deterministic wallets. The standard way to use this is:\n * const bip32 = new Bip32().fromRandom()\n * const bip32 = new Bip32().fromSeed(buf)\n * const bip32 = new Bip32().fromString(string)\n * const xprv = bip32.toString()\n * const xpub = bip32.toPublic().toString()\n *\n * This code was originally copied from here:\n *\n * https://github.com/sarchar/brainwallet.github.com\n *\n * It has faced mostly cosmetic alterations since it was copied.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { Base58Check } from './base-58-check'\nimport { Constants } from './constants'\nimport { Hash } from './hash'\nimport { Point } from './point'\nimport { PrivKey as PrivKeyClass } from './priv-key'\nimport { PubKey } from './pub-key'\nimport { Random } from './random'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Bip32 extends Struct {\n  constructor (\n    versionBytesNum,\n    depth,\n    parentFingerPrint,\n    childIndex,\n    chainCode,\n    privKey,\n    pubKey,\n    constants = null,\n    PrivKey = PrivKeyClass\n  ) {\n    super({\n      versionBytesNum,\n      depth,\n      parentFingerPrint,\n      childIndex,\n      chainCode,\n      privKey,\n      pubKey\n    })\n    constants = constants || Constants.Default.Bip32\n    this.Constants = constants\n    this.PrivKey = PrivKey\n  }\n\n  fromRandom () {\n    this.versionBytesNum = this.Constants.privKey\n    this.depth = 0x00\n    this.parentFingerPrint = Buffer.from([0, 0, 0, 0])\n    this.childIndex = 0\n    this.chainCode = Random.getRandomBuffer(32)\n    this.privKey = new this.PrivKey().fromRandom()\n    this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    return this\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  fromString (str) {\n    return this.fromBuffer(Base58Check.decode(str))\n  }\n\n  /**\n   * Use workers to convert a bip32 string into a bip32 object without\n   * blocking.\n   */\n  async asyncFromString (str) {\n    const args = [str]\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'fromString',\n      args\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  fromSeed (bytes) {\n    if (!Buffer.isBuffer(bytes)) {\n      throw new Error('bytes must be a buffer')\n    }\n    if (bytes.length < 128 / 8) {\n      throw new Error('Need more than 128 bits of entropy')\n    }\n    if (bytes.length > 512 / 8) {\n      throw new Error('More than 512 bits of entropy is nonstandard')\n    }\n    const hash = Hash.sha512Hmac(bytes, Buffer.from('Bitcoin seed'))\n\n    this.depth = 0x00\n    this.parentFingerPrint = Buffer.from([0, 0, 0, 0])\n    this.childIndex = 0\n    this.chainCode = hash.slice(32, 64)\n    this.versionBytesNum = this.Constants.privKey\n    this.privKey = new this.PrivKey().fromBn(Bn().fromBuffer(hash.slice(0, 32)))\n    this.pubKey = new PubKey().fromPrivKey(this.privKey)\n\n    return this\n  }\n\n  static fromSeed (bytes) {\n    return new this().fromSeed(bytes)\n  }\n\n  async asyncFromSeed (bytes) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'fromSeed', [\n      bytes\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromSeed (bytes) {\n    return new this().asyncFromSeed(bytes)\n  }\n\n  fromBuffer (buf) {\n    // Both pub and private extended keys are 78 buf\n    if (buf.length !== 78) {\n      throw new Error('incorrect bip32 data length')\n    }\n\n    this.versionBytesNum = buf.slice(0, 4).readUInt32BE(0)\n    this.depth = buf.slice(4, 5).readUInt8(0)\n    this.parentFingerPrint = buf.slice(5, 9)\n    this.childIndex = buf.slice(9, 13).readUInt32BE(0)\n    this.chainCode = buf.slice(13, 45)\n    const keyBytes = buf.slice(45, 78)\n\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n\n    if (isPrivate && keyBytes[0] === 0) {\n      this.privKey = new this.PrivKey().fromBn(\n        Bn().fromBuffer(keyBytes.slice(1, 33))\n      )\n      this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    } else if (isPublic && (keyBytes[0] === 0x02 || keyBytes[0] === 0x03)) {\n      this.pubKey = new PubKey().fromDer(keyBytes)\n    } else {\n      throw new Error('Invalid key')\n    }\n\n    return this\n  }\n\n  /**\n   * This is a faster version of .fromBuffer that reads in the output from\n   * .toFastBuffer rather than from .toBuffer. .toFastBuffer outputs almost the\n   * same thing as .toBuffer, except the public key is uncompressed. That makes\n   * it larger, but also means that point multiplication doesn't have to be\n   * used to derive the y value. So reading it in is faster. The only thing we\n   * have to do is explicitely set the \"compressed\" value of public key to true\n   * after reading it in. That is because although .toFastBuffer and\n   * .fromFastBuffer transmit the public key in uncompressed form, we want it\n   * to be set to compressed when stored in memory.\n   */\n  fromFastBuffer (buf) {\n    if (buf.length === 0) {\n      return this\n    }\n    if (buf.length !== 78 && buf.length !== 78 + 33) {\n      throw new Error('incorrect bip32 fastBuffer data length: ' + buf.length)\n    }\n\n    this.versionBytesNum = buf.slice(0, 4).readUInt32BE(0)\n    this.depth = buf.slice(4, 5).readUInt8(0)\n    this.parentFingerPrint = buf.slice(5, 9)\n    this.childIndex = buf.slice(9, 13).readUInt32BE(0)\n    this.chainCode = buf.slice(13, 45)\n\n    const keyBytes = buf.slice(45, buf.length)\n\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n\n    if (isPrivate && keyBytes[0] === 0 && buf.length === 78) {\n      this.privKey = new this.PrivKey().fromBn(\n        Bn().fromBuffer(keyBytes.slice(1, 33))\n      )\n      this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    } else if (isPublic && buf.length === 78 + 33) {\n      this.pubKey = new PubKey().fromFastBuffer(keyBytes)\n      this.pubKey.compressed = true\n    } else {\n      throw new Error('Invalid key')\n    }\n\n    return this\n  }\n\n  derive (path) {\n    const e = path.split('/')\n\n    if (path === 'm') {\n      return this\n    }\n\n    let bip32 = this\n    for (const i in e) {\n      const c = e[i]\n\n      if (i === '0') {\n        if (c !== 'm') throw new Error('invalid path')\n        continue\n      }\n\n      if (\n        parseInt(c.replace(\"'\", ''), 10).toString() !== c.replace(\"'\", '')\n      ) {\n        throw new Error('invalid path')\n      }\n\n      const usePrivate = c.length > 1 && c[c.length - 1] === \"'\"\n      let childIndex =\n        parseInt(usePrivate ? c.slice(0, c.length - 1) : c, 10) & 0x7fffffff\n\n      if (usePrivate) {\n        childIndex += 0x80000000\n      }\n\n      bip32 = bip32.deriveChild(childIndex)\n    }\n\n    return bip32\n  }\n\n  async asyncDerive (path) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'derive', [\n      path\n    ])\n    return new this.constructor().fromFastBuffer(workersResult.resbuf)\n  }\n\n  deriveChild (i) {\n    if (typeof i !== 'number') {\n      throw new Error('i must be a number')\n    }\n\n    let ib = []\n    ib.push((i >> 24) & 0xff)\n    ib.push((i >> 16) & 0xff)\n    ib.push((i >> 8) & 0xff)\n    ib.push(i & 0xff)\n    ib = Buffer.from(ib)\n\n    const usePrivate = (i & 0x80000000) !== 0\n\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n\n    if (usePrivate && (!this.privKey || !isPrivate)) {\n      throw new Error('Cannot do private key derivation without private key')\n    }\n\n    let ret = null\n    if (this.privKey) {\n      let data = null\n\n      if (usePrivate) {\n        data = Buffer.concat([\n          Buffer.from([0]),\n          this.privKey.bn.toBuffer({ size: 32 }),\n          ib\n        ])\n      } else {\n        data = Buffer.concat([this.pubKey.toBuffer({ size: 32 }), ib])\n      }\n\n      const hash = Hash.sha512Hmac(data, this.chainCode)\n      const il = Bn().fromBuffer(hash.slice(0, 32), { size: 32 })\n      const ir = hash.slice(32, 64)\n\n      // ki = IL + kpar (mod n).\n      const k = il.add(this.privKey.bn).mod(Point.getN())\n\n      ret = new this.constructor()\n      ret.chainCode = ir\n\n      ret.privKey = new this.PrivKey().fromBn(k)\n      ret.pubKey = new PubKey().fromPrivKey(ret.privKey)\n    } else {\n      const data = Buffer.concat([this.pubKey.toBuffer(), ib])\n      const hash = Hash.sha512Hmac(data, this.chainCode)\n      const il = Bn().fromBuffer(hash.slice(0, 32))\n      const ir = hash.slice(32, 64)\n\n      // Ki = (IL + kpar)*G = IL*G + Kpar\n      const ilG = Point.getG().mul(il)\n      const Kpar = this.pubKey.point\n      const Ki = ilG.add(Kpar)\n      const newpub = new PubKey()\n      newpub.point = Ki\n\n      ret = new this.constructor()\n      ret.chainCode = ir\n\n      ret.pubKey = newpub\n    }\n\n    ret.childIndex = i\n    const pubKeyhash = Hash.sha256Ripemd160(this.pubKey.toBuffer())\n    ret.parentFingerPrint = pubKeyhash.slice(0, 4)\n    ret.versionBytesNum = this.versionBytesNum\n    ret.depth = this.depth + 1\n\n    return ret\n  }\n\n  toPublic () {\n    const bip32 = new this.constructor().fromObject(this)\n    bip32.versionBytesNum = this.Constants.pubKey\n    bip32.privKey = undefined\n    return bip32\n  }\n\n  toBuffer () {\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n    if (isPrivate) {\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .writeUInt8(0)\n        .write(this.privKey.bn.toBuffer({ size: 32 }))\n        .toBuffer()\n    } else if (isPublic) {\n      if (this.pubKey.compressed === false) {\n        throw new Error(\n          'cannot convert bip32 to buffer if pubKey is not compressed'\n        )\n      }\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .write(this.pubKey.toBuffer())\n        .toBuffer()\n    } else {\n      throw new Error('bip32: invalid versionBytesNum byte')\n    }\n  }\n\n  /**\n   * This is the \"fast\" analog of toBuffer. It is almost the same as toBuffer,\n   * and in fact is actually not any faster. The only difference is that it\n   * adds an uncompressed rather than compressed public key to the output. This\n   * is so that .fromFastBufer can read in the public key without having to do\n   * fancy, slow point multiplication to derive the y value of the public key.\n   * Thus, although .toFastBuffer is not any faster, .fromFastBuffer is faster.\n   */\n  toFastBuffer () {\n    if (!this.versionBytesNum) {\n      return Buffer.alloc(0)\n    }\n    const isPrivate = this.versionBytesNum === this.Constants.privKey\n    const isPublic = this.versionBytesNum === this.Constants.pubKey\n    if (isPrivate) {\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .writeUInt8(0)\n        .write(this.privKey.bn.toBuffer({ size: 32 }))\n        .toBuffer()\n    } else if (isPublic) {\n      return new Bw()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .write(this.pubKey.toFastBuffer())\n        .toBuffer()\n    } else {\n      throw new Error('bip32: invalid versionBytesNum byte')\n    }\n  }\n\n  toString () {\n    return Base58Check.encode(this.toBuffer())\n  }\n\n  /**\n   * Use workers to convert a bip32 object into a bip32 string without\n   * blocking.\n   */\n  async asyncToString () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'toString', [])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  toJSON () {\n    return this.toFastHex()\n  }\n\n  fromJSON (json) {\n    return this.fromFastHex(json)\n  }\n\n  isPrivate () {\n    return this.versionBytesNum === this.Constants.privKey\n  }\n}\n\nBip32.Mainnet = class extends Bip32 {\n  constructor (\n    versionBytesNum,\n    depth,\n    parentFingerPrint,\n    childIndex,\n    chainCode,\n    privKey,\n    pubKey\n  ) {\n    super(\n      versionBytesNum,\n      depth,\n      parentFingerPrint,\n      childIndex,\n      chainCode,\n      privKey,\n      pubKey,\n      Constants.Mainnet.Bip32,\n      PrivKeyClass.Mainnet\n    )\n  }\n}\n\nBip32.Testnet = class extends Bip32 {\n  constructor (\n    versionBytesNum,\n    depth,\n    parentFingerPrint,\n    childIndex,\n    chainCode,\n    privKey,\n    pubKey\n  ) {\n    super(\n      versionBytesNum,\n      depth,\n      parentFingerPrint,\n      childIndex,\n      chainCode,\n      privKey,\n      pubKey,\n      Constants.Testnet.Bip32,\n      PrivKeyClass.Testnet\n    )\n  }\n}\n\nexport { Bip32 }\n","'use strict'\nconst wordList = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n]\nwordList.space = ' '\n\nexport { wordList }\n","/**\n * Bip39: Mnemonic Seeds\n * =====================\n *\n * Bip39 is a way to turn random entropy into a mnemonic (a string of words\n * from a wordlist), and then that mnemonic into a seed. The seed can then be\n * used in Bip32 to derive hierarchical deterministic keys. It does not go the\n * other way around (i.e., you cannot turn a seed into a mnemonic). The usual\n * way to use it is either to generate a new one, like this:\n *\n * const mnemonic = new Bip39().fromRandom().toString()\n *\n * or from a known mnemonic:\n *\n * const seed = new Bip39().fromString(mnemonic).toSeed()\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { Hash } from './hash'\nimport pbkdf2 from 'pbkdf2'\nimport { Random } from './random'\nimport { Struct } from './struct'\nimport { wordList } from './bip-39-en-wordlist'\nimport { Workers } from './workers'\n\nclass Bip39 extends Struct {\n  constructor (mnemonic, seed, wordlist = wordList) {\n    super({ mnemonic, seed })\n    this.Wordlist = wordlist\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    if (this.mnemonic) {\n      const buf = Buffer.from(this.mnemonic)\n      bw.writeVarIntNum(buf.length)\n      bw.write(buf)\n    } else {\n      bw.writeVarIntNum(0)\n    }\n    if (this.seed) {\n      bw.writeVarIntNum(this.seed.length)\n      bw.write(this.seed)\n    } else {\n      bw.writeVarIntNum(0)\n    }\n    return bw\n  }\n\n  fromBr (br) {\n    const mnemoniclen = br.readVarIntNum()\n    if (mnemoniclen > 0) {\n      this.mnemonic = br.read(mnemoniclen).toString()\n    }\n    const seedlen = br.readVarIntNum()\n    if (seedlen > 0) {\n      this.seed = br.read(seedlen)\n    }\n    return this\n  }\n\n  /**\n     * Generate a random new mnemonic from the wordlist.\n     */\n  fromRandom (bits) {\n    if (!bits) {\n      bits = 128\n    }\n    if (bits % 32 !== 0) {\n      throw new Error('bits must be multiple of 32')\n    }\n    if (bits < 128) {\n      throw new Error('bits must be at least 128')\n    }\n    const buf = Random.getRandomBuffer(bits / 8)\n    this.entropy2Mnemonic(buf)\n    this.mnemonic2Seed()\n    return this\n  }\n\n  static fromRandom (bits) {\n    return new this().fromRandom(bits)\n  }\n\n  async asyncFromRandom (bits) {\n    if (!bits) {\n      bits = 128\n    }\n    const buf = Random.getRandomBuffer(bits / 8)\n    let workersResult = await Workers.asyncObjectMethod(\n      this,\n      'entropy2Mnemonic',\n      [buf]\n    )\n    const bip39 = new Bip39().fromFastBuffer(workersResult.resbuf)\n    workersResult = await Workers.asyncObjectMethod(\n      bip39,\n      'mnemonic2Seed',\n      []\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromRandom (bits) {\n    return new this().asyncFromRandom(bits)\n  }\n\n  fromEntropy (buf) {\n    this.entropy2Mnemonic(buf)\n    return this\n  }\n\n  static fromEntropy (buf) {\n    return new this().fromEntropy(buf)\n  }\n\n  async asyncFromEntropy (buf) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'fromEntropy', [\n      buf\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static asyncFromEntropy (buf) {\n    return new this().asyncFromEntropy(buf)\n  }\n\n  fromString (mnemonic) {\n    this.mnemonic = mnemonic\n    return this\n  }\n\n  toString () {\n    return this.mnemonic\n  }\n\n  toSeed (passphrase) {\n    this.mnemonic2Seed(passphrase)\n    return this.seed\n  }\n\n  async asyncToSeed (passphrase) {\n    if (passphrase === undefined) {\n      passphrase = ''\n    }\n    const args = [passphrase]\n    const workersResult = await Workers.asyncObjectMethod(this, 'toSeed', args)\n    return workersResult.resbuf\n  }\n\n  /**\n     * Generate a new mnemonic from some entropy generated somewhere else. The\n     * entropy must be at least 128 bits.\n     */\n  entropy2Mnemonic (buf) {\n    if (!Buffer.isBuffer(buf) || buf.length < 128 / 8) {\n      throw new Error(\n        'Entropy is less than 128 bits. It must be 128 bits or more.'\n      )\n    }\n\n    const hash = Hash.sha256(buf)\n    let bin = ''\n    const bits = buf.length * 8\n    for (let i = 0; i < buf.length; i++) {\n      bin = bin + ('00000000' + buf[i].toString(2)).slice(-8)\n    }\n    let hashbits = hash[0].toString(2)\n    hashbits = ('00000000' + hashbits).slice(-8).slice(0, bits / 32)\n    bin = bin + hashbits\n\n    if (bin.length % 11 !== 0) {\n      throw new Error(\n        'internal error - entropy not an even multiple of 11 bits - ' +\n            bin.length\n      )\n    }\n\n    let mnemonic = ''\n    for (let i = 0; i < bin.length / 11; i++) {\n      if (mnemonic !== '') {\n        mnemonic = mnemonic + this.Wordlist.space\n      }\n      const wi = parseInt(bin.slice(i * 11, (i + 1) * 11), 2)\n      mnemonic = mnemonic + this.Wordlist[wi]\n    }\n\n    this.mnemonic = mnemonic\n    return this\n  }\n\n  /**\n     * Check that a mnemonic is valid. This means there should be no superfluous\n     * whitespace, no invalid words, and the checksum should match.\n     */\n  check () {\n    const mnemonic = this.mnemonic\n\n    // confirm no invalid words\n    const words = mnemonic.split(this.Wordlist.space)\n    let bin = ''\n    for (let i = 0; i < words.length; i++) {\n      const ind = this.Wordlist.indexOf(words[i])\n      if (ind < 0) {\n        return false\n      }\n      bin = bin + ('00000000000' + ind.toString(2)).slice(-11)\n    }\n\n    if (bin.length % 11 !== 0) {\n      throw new Error(\n        'internal error - entropy not an even multiple of 11 bits - ' +\n            bin.length\n      )\n    }\n\n    // confirm checksum\n    const cs = bin.length / 33\n    const hashBits = bin.slice(-cs)\n    const nonhashBits = bin.slice(0, bin.length - cs)\n    const buf = Buffer.alloc(nonhashBits.length / 8)\n    for (let i = 0; i < nonhashBits.length / 8; i++) {\n      buf.writeUInt8(parseInt(bin.slice(i * 8, (i + 1) * 8), 2), i)\n    }\n    const hash = Hash.sha256(buf)\n    let expectedHashBits = hash[0].toString(2)\n    expectedHashBits = ('00000000' + expectedHashBits).slice(-8).slice(0, cs)\n\n    return expectedHashBits === hashBits\n  }\n\n  /**\n     * Convert a mnemonic to a seed. Does not check for validity of the mnemonic -\n     * for that, you should manually run check() first.\n     */\n  mnemonic2Seed (passphrase = '') {\n    let mnemonic = this.mnemonic\n    if (!this.check()) {\n      throw new Error(\n        'Mnemonic does not pass the check - was the mnemonic typed incorrectly? Are there extra spaces?'\n      )\n    }\n    if (typeof passphrase !== 'string') {\n      throw new Error('passphrase must be a string or undefined')\n    }\n    mnemonic = mnemonic.normalize('NFKD')\n    passphrase = passphrase.normalize('NFKD')\n    const mbuf = Buffer.from(mnemonic)\n    const pbuf = Buffer.concat([\n      Buffer.from('mnemonic'),\n      Buffer.from(passphrase)\n    ])\n    this.seed = pbkdf2.pbkdf2Sync(mbuf, pbuf, 2048, 64, 'sha512')\n    return this\n  }\n\n  isValid (passphrase = '') {\n    let isValid\n    try {\n      isValid = !!this.mnemonic2Seed(passphrase)\n    } catch (err) {\n      isValid = false\n    }\n    return isValid\n  }\n\n  static isValid (mnemonic, passphrase = '') {\n    return new Bip39(mnemonic).isValid(passphrase)\n  }\n}\n\nexport { Bip39 }\n","'use strict'\nconst wordList = [\n  'あいこくしん',\n  'あいさつ',\n  'あいだ',\n  'あおぞら',\n  'あかちゃん',\n  'あきる',\n  'あけがた',\n  'あける',\n  'あこがれる',\n  'あさい',\n  'あさひ',\n  'あしあと',\n  'あじわう',\n  'あずかる',\n  'あずき',\n  'あそぶ',\n  'あたえる',\n  'あたためる',\n  'あたりまえ',\n  'あたる',\n  'あつい',\n  'あつかう',\n  'あっしゅく',\n  'あつまり',\n  'あつめる',\n  'あてな',\n  'あてはまる',\n  'あひる',\n  'あぶら',\n  'あぶる',\n  'あふれる',\n  'あまい',\n  'あまど',\n  'あまやかす',\n  'あまり',\n  'あみもの',\n  'あめりか',\n  'あやまる',\n  'あゆむ',\n  'あらいぐま',\n  'あらし',\n  'あらすじ',\n  'あらためる',\n  'あらゆる',\n  'あらわす',\n  'ありがとう',\n  'あわせる',\n  'あわてる',\n  'あんい',\n  'あんがい',\n  'あんこ',\n  'あんぜん',\n  'あんてい',\n  'あんない',\n  'あんまり',\n  'いいだす',\n  'いおん',\n  'いがい',\n  'いがく',\n  'いきおい',\n  'いきなり',\n  'いきもの',\n  'いきる',\n  'いくじ',\n  'いくぶん',\n  'いけばな',\n  'いけん',\n  'いこう',\n  'いこく',\n  'いこつ',\n  'いさましい',\n  'いさん',\n  'いしき',\n  'いじゅう',\n  'いじょう',\n  'いじわる',\n  'いずみ',\n  'いずれ',\n  'いせい',\n  'いせえび',\n  'いせかい',\n  'いせき',\n  'いぜん',\n  'いそうろう',\n  'いそがしい',\n  'いだい',\n  'いだく',\n  'いたずら',\n  'いたみ',\n  'いたりあ',\n  'いちおう',\n  'いちじ',\n  'いちど',\n  'いちば',\n  'いちぶ',\n  'いちりゅう',\n  'いつか',\n  'いっしゅん',\n  'いっせい',\n  'いっそう',\n  'いったん',\n  'いっち',\n  'いってい',\n  'いっぽう',\n  'いてざ',\n  'いてん',\n  'いどう',\n  'いとこ',\n  'いない',\n  'いなか',\n  'いねむり',\n  'いのち',\n  'いのる',\n  'いはつ',\n  'いばる',\n  'いはん',\n  'いびき',\n  'いひん',\n  'いふく',\n  'いへん',\n  'いほう',\n  'いみん',\n  'いもうと',\n  'いもたれ',\n  'いもり',\n  'いやがる',\n  'いやす',\n  'いよかん',\n  'いよく',\n  'いらい',\n  'いらすと',\n  'いりぐち',\n  'いりょう',\n  'いれい',\n  'いれもの',\n  'いれる',\n  'いろえんぴつ',\n  'いわい',\n  'いわう',\n  'いわかん',\n  'いわば',\n  'いわゆる',\n  'いんげんまめ',\n  'いんさつ',\n  'いんしょう',\n  'いんよう',\n  'うえき',\n  'うえる',\n  'うおざ',\n  'うがい',\n  'うかぶ',\n  'うかべる',\n  'うきわ',\n  'うくらいな',\n  'うくれれ',\n  'うけたまわる',\n  'うけつけ',\n  'うけとる',\n  'うけもつ',\n  'うける',\n  'うごかす',\n  'うごく',\n  'うこん',\n  'うさぎ',\n  'うしなう',\n  'うしろがみ',\n  'うすい',\n  'うすぎ',\n  'うすぐらい',\n  'うすめる',\n  'うせつ',\n  'うちあわせ',\n  'うちがわ',\n  'うちき',\n  'うちゅう',\n  'うっかり',\n  'うつくしい',\n  'うったえる',\n  'うつる',\n  'うどん',\n  'うなぎ',\n  'うなじ',\n  'うなずく',\n  'うなる',\n  'うねる',\n  'うのう',\n  'うぶげ',\n  'うぶごえ',\n  'うまれる',\n  'うめる',\n  'うもう',\n  'うやまう',\n  'うよく',\n  'うらがえす',\n  'うらぐち',\n  'うらない',\n  'うりあげ',\n  'うりきれ',\n  'うるさい',\n  'うれしい',\n  'うれゆき',\n  'うれる',\n  'うろこ',\n  'うわき',\n  'うわさ',\n  'うんこう',\n  'うんちん',\n  'うんてん',\n  'うんどう',\n  'えいえん',\n  'えいが',\n  'えいきょう',\n  'えいご',\n  'えいせい',\n  'えいぶん',\n  'えいよう',\n  'えいわ',\n  'えおり',\n  'えがお',\n  'えがく',\n  'えきたい',\n  'えくせる',\n  'えしゃく',\n  'えすて',\n  'えつらん',\n  'えのぐ',\n  'えほうまき',\n  'えほん',\n  'えまき',\n  'えもじ',\n  'えもの',\n  'えらい',\n  'えらぶ',\n  'えりあ',\n  'えんえん',\n  'えんかい',\n  'えんぎ',\n  'えんげき',\n  'えんしゅう',\n  'えんぜつ',\n  'えんそく',\n  'えんちょう',\n  'えんとつ',\n  'おいかける',\n  'おいこす',\n  'おいしい',\n  'おいつく',\n  'おうえん',\n  'おうさま',\n  'おうじ',\n  'おうせつ',\n  'おうたい',\n  'おうふく',\n  'おうべい',\n  'おうよう',\n  'おえる',\n  'おおい',\n  'おおう',\n  'おおどおり',\n  'おおや',\n  'おおよそ',\n  'おかえり',\n  'おかず',\n  'おがむ',\n  'おかわり',\n  'おぎなう',\n  'おきる',\n  'おくさま',\n  'おくじょう',\n  'おくりがな',\n  'おくる',\n  'おくれる',\n  'おこす',\n  'おこなう',\n  'おこる',\n  'おさえる',\n  'おさない',\n  'おさめる',\n  'おしいれ',\n  'おしえる',\n  'おじぎ',\n  'おじさん',\n  'おしゃれ',\n  'おそらく',\n  'おそわる',\n  'おたがい',\n  'おたく',\n  'おだやか',\n  'おちつく',\n  'おっと',\n  'おつり',\n  'おでかけ',\n  'おとしもの',\n  'おとなしい',\n  'おどり',\n  'おどろかす',\n  'おばさん',\n  'おまいり',\n  'おめでとう',\n  'おもいで',\n  'おもう',\n  'おもたい',\n  'おもちゃ',\n  'おやつ',\n  'おやゆび',\n  'およぼす',\n  'おらんだ',\n  'おろす',\n  'おんがく',\n  'おんけい',\n  'おんしゃ',\n  'おんせん',\n  'おんだん',\n  'おんちゅう',\n  'おんどけい',\n  'かあつ',\n  'かいが',\n  'がいき',\n  'がいけん',\n  'がいこう',\n  'かいさつ',\n  'かいしゃ',\n  'かいすいよく',\n  'かいぜん',\n  'かいぞうど',\n  'かいつう',\n  'かいてん',\n  'かいとう',\n  'かいふく',\n  'がいへき',\n  'かいほう',\n  'かいよう',\n  'がいらい',\n  'かいわ',\n  'かえる',\n  'かおり',\n  'かかえる',\n  'かがく',\n  'かがし',\n  'かがみ',\n  'かくご',\n  'かくとく',\n  'かざる',\n  'がぞう',\n  'かたい',\n  'かたち',\n  'がちょう',\n  'がっきゅう',\n  'がっこう',\n  'がっさん',\n  'がっしょう',\n  'かなざわし',\n  'かのう',\n  'がはく',\n  'かぶか',\n  'かほう',\n  'かほご',\n  'かまう',\n  'かまぼこ',\n  'かめれおん',\n  'かゆい',\n  'かようび',\n  'からい',\n  'かるい',\n  'かろう',\n  'かわく',\n  'かわら',\n  'がんか',\n  'かんけい',\n  'かんこう',\n  'かんしゃ',\n  'かんそう',\n  'かんたん',\n  'かんち',\n  'がんばる',\n  'きあい',\n  'きあつ',\n  'きいろ',\n  'ぎいん',\n  'きうい',\n  'きうん',\n  'きえる',\n  'きおう',\n  'きおく',\n  'きおち',\n  'きおん',\n  'きかい',\n  'きかく',\n  'きかんしゃ',\n  'ききて',\n  'きくばり',\n  'きくらげ',\n  'きけんせい',\n  'きこう',\n  'きこえる',\n  'きこく',\n  'きさい',\n  'きさく',\n  'きさま',\n  'きさらぎ',\n  'ぎじかがく',\n  'ぎしき',\n  'ぎじたいけん',\n  'ぎじにってい',\n  'ぎじゅつしゃ',\n  'きすう',\n  'きせい',\n  'きせき',\n  'きせつ',\n  'きそう',\n  'きぞく',\n  'きぞん',\n  'きたえる',\n  'きちょう',\n  'きつえん',\n  'ぎっちり',\n  'きつつき',\n  'きつね',\n  'きてい',\n  'きどう',\n  'きどく',\n  'きない',\n  'きなが',\n  'きなこ',\n  'きぬごし',\n  'きねん',\n  'きのう',\n  'きのした',\n  'きはく',\n  'きびしい',\n  'きひん',\n  'きふく',\n  'きぶん',\n  'きぼう',\n  'きほん',\n  'きまる',\n  'きみつ',\n  'きむずかしい',\n  'きめる',\n  'きもだめし',\n  'きもち',\n  'きもの',\n  'きゃく',\n  'きやく',\n  'ぎゅうにく',\n  'きよう',\n  'きょうりゅう',\n  'きらい',\n  'きらく',\n  'きりん',\n  'きれい',\n  'きれつ',\n  'きろく',\n  'ぎろん',\n  'きわめる',\n  'ぎんいろ',\n  'きんかくじ',\n  'きんじょ',\n  'きんようび',\n  'ぐあい',\n  'くいず',\n  'くうかん',\n  'くうき',\n  'くうぐん',\n  'くうこう',\n  'ぐうせい',\n  'くうそう',\n  'ぐうたら',\n  'くうふく',\n  'くうぼ',\n  'くかん',\n  'くきょう',\n  'くげん',\n  'ぐこう',\n  'くさい',\n  'くさき',\n  'くさばな',\n  'くさる',\n  'くしゃみ',\n  'くしょう',\n  'くすのき',\n  'くすりゆび',\n  'くせげ',\n  'くせん',\n  'ぐたいてき',\n  'くださる',\n  'くたびれる',\n  'くちこみ',\n  'くちさき',\n  'くつした',\n  'ぐっすり',\n  'くつろぐ',\n  'くとうてん',\n  'くどく',\n  'くなん',\n  'くねくね',\n  'くのう',\n  'くふう',\n  'くみあわせ',\n  'くみたてる',\n  'くめる',\n  'くやくしょ',\n  'くらす',\n  'くらべる',\n  'くるま',\n  'くれる',\n  'くろう',\n  'くわしい',\n  'ぐんかん',\n  'ぐんしょく',\n  'ぐんたい',\n  'ぐんて',\n  'けあな',\n  'けいかく',\n  'けいけん',\n  'けいこ',\n  'けいさつ',\n  'げいじゅつ',\n  'けいたい',\n  'げいのうじん',\n  'けいれき',\n  'けいろ',\n  'けおとす',\n  'けおりもの',\n  'げきか',\n  'げきげん',\n  'げきだん',\n  'げきちん',\n  'げきとつ',\n  'げきは',\n  'げきやく',\n  'げこう',\n  'げこくじょう',\n  'げざい',\n  'けさき',\n  'げざん',\n  'けしき',\n  'けしごむ',\n  'けしょう',\n  'げすと',\n  'けたば',\n  'けちゃっぷ',\n  'けちらす',\n  'けつあつ',\n  'けつい',\n  'けつえき',\n  'けっこん',\n  'けつじょ',\n  'けっせき',\n  'けってい',\n  'けつまつ',\n  'げつようび',\n  'げつれい',\n  'けつろん',\n  'げどく',\n  'けとばす',\n  'けとる',\n  'けなげ',\n  'けなす',\n  'けなみ',\n  'けぬき',\n  'げねつ',\n  'けねん',\n  'けはい',\n  'げひん',\n  'けぶかい',\n  'げぼく',\n  'けまり',\n  'けみかる',\n  'けむし',\n  'けむり',\n  'けもの',\n  'けらい',\n  'けろけろ',\n  'けわしい',\n  'けんい',\n  'けんえつ',\n  'けんお',\n  'けんか',\n  'げんき',\n  'けんげん',\n  'けんこう',\n  'けんさく',\n  'けんしゅう',\n  'けんすう',\n  'げんそう',\n  'けんちく',\n  'けんてい',\n  'けんとう',\n  'けんない',\n  'けんにん',\n  'げんぶつ',\n  'けんま',\n  'けんみん',\n  'けんめい',\n  'けんらん',\n  'けんり',\n  'こあくま',\n  'こいぬ',\n  'こいびと',\n  'ごうい',\n  'こうえん',\n  'こうおん',\n  'こうかん',\n  'ごうきゅう',\n  'ごうけい',\n  'こうこう',\n  'こうさい',\n  'こうじ',\n  'こうすい',\n  'ごうせい',\n  'こうそく',\n  'こうたい',\n  'こうちゃ',\n  'こうつう',\n  'こうてい',\n  'こうどう',\n  'こうない',\n  'こうはい',\n  'ごうほう',\n  'ごうまん',\n  'こうもく',\n  'こうりつ',\n  'こえる',\n  'こおり',\n  'ごかい',\n  'ごがつ',\n  'ごかん',\n  'こくご',\n  'こくさい',\n  'こくとう',\n  'こくない',\n  'こくはく',\n  'こぐま',\n  'こけい',\n  'こける',\n  'ここのか',\n  'こころ',\n  'こさめ',\n  'こしつ',\n  'こすう',\n  'こせい',\n  'こせき',\n  'こぜん',\n  'こそだて',\n  'こたい',\n  'こたえる',\n  'こたつ',\n  'こちょう',\n  'こっか',\n  'こつこつ',\n  'こつばん',\n  'こつぶ',\n  'こてい',\n  'こてん',\n  'ことがら',\n  'ことし',\n  'ことば',\n  'ことり',\n  'こなごな',\n  'こねこね',\n  'このまま',\n  'このみ',\n  'このよ',\n  'ごはん',\n  'こひつじ',\n  'こふう',\n  'こふん',\n  'こぼれる',\n  'ごまあぶら',\n  'こまかい',\n  'ごますり',\n  'こまつな',\n  'こまる',\n  'こむぎこ',\n  'こもじ',\n  'こもち',\n  'こもの',\n  'こもん',\n  'こやく',\n  'こやま',\n  'こゆう',\n  'こゆび',\n  'こよい',\n  'こよう',\n  'こりる',\n  'これくしょん',\n  'ころっけ',\n  'こわもて',\n  'こわれる',\n  'こんいん',\n  'こんかい',\n  'こんき',\n  'こんしゅう',\n  'こんすい',\n  'こんだて',\n  'こんとん',\n  'こんなん',\n  'こんびに',\n  'こんぽん',\n  'こんまけ',\n  'こんや',\n  'こんれい',\n  'こんわく',\n  'ざいえき',\n  'さいかい',\n  'さいきん',\n  'ざいげん',\n  'ざいこ',\n  'さいしょ',\n  'さいせい',\n  'ざいたく',\n  'ざいちゅう',\n  'さいてき',\n  'ざいりょう',\n  'さうな',\n  'さかいし',\n  'さがす',\n  'さかな',\n  'さかみち',\n  'さがる',\n  'さぎょう',\n  'さくし',\n  'さくひん',\n  'さくら',\n  'さこく',\n  'さこつ',\n  'さずかる',\n  'ざせき',\n  'さたん',\n  'さつえい',\n  'ざつおん',\n  'ざっか',\n  'ざつがく',\n  'さっきょく',\n  'ざっし',\n  'さつじん',\n  'ざっそう',\n  'さつたば',\n  'さつまいも',\n  'さてい',\n  'さといも',\n  'さとう',\n  'さとおや',\n  'さとし',\n  'さとる',\n  'さのう',\n  'さばく',\n  'さびしい',\n  'さべつ',\n  'さほう',\n  'さほど',\n  'さます',\n  'さみしい',\n  'さみだれ',\n  'さむけ',\n  'さめる',\n  'さやえんどう',\n  'さゆう',\n  'さよう',\n  'さよく',\n  'さらだ',\n  'ざるそば',\n  'さわやか',\n  'さわる',\n  'さんいん',\n  'さんか',\n  'さんきゃく',\n  'さんこう',\n  'さんさい',\n  'ざんしょ',\n  'さんすう',\n  'さんせい',\n  'さんそ',\n  'さんち',\n  'さんま',\n  'さんみ',\n  'さんらん',\n  'しあい',\n  'しあげ',\n  'しあさって',\n  'しあわせ',\n  'しいく',\n  'しいん',\n  'しうち',\n  'しえい',\n  'しおけ',\n  'しかい',\n  'しかく',\n  'じかん',\n  'しごと',\n  'しすう',\n  'じだい',\n  'したうけ',\n  'したぎ',\n  'したて',\n  'したみ',\n  'しちょう',\n  'しちりん',\n  'しっかり',\n  'しつじ',\n  'しつもん',\n  'してい',\n  'してき',\n  'してつ',\n  'じてん',\n  'じどう',\n  'しなぎれ',\n  'しなもの',\n  'しなん',\n  'しねま',\n  'しねん',\n  'しのぐ',\n  'しのぶ',\n  'しはい',\n  'しばかり',\n  'しはつ',\n  'しはらい',\n  'しはん',\n  'しひょう',\n  'しふく',\n  'じぶん',\n  'しへい',\n  'しほう',\n  'しほん',\n  'しまう',\n  'しまる',\n  'しみん',\n  'しむける',\n  'じむしょ',\n  'しめい',\n  'しめる',\n  'しもん',\n  'しゃいん',\n  'しゃうん',\n  'しゃおん',\n  'じゃがいも',\n  'しやくしょ',\n  'しゃくほう',\n  'しゃけん',\n  'しゃこ',\n  'しゃざい',\n  'しゃしん',\n  'しゃせん',\n  'しゃそう',\n  'しゃたい',\n  'しゃちょう',\n  'しゃっきん',\n  'じゃま',\n  'しゃりん',\n  'しゃれい',\n  'じゆう',\n  'じゅうしょ',\n  'しゅくはく',\n  'じゅしん',\n  'しゅっせき',\n  'しゅみ',\n  'しゅらば',\n  'じゅんばん',\n  'しょうかい',\n  'しょくたく',\n  'しょっけん',\n  'しょどう',\n  'しょもつ',\n  'しらせる',\n  'しらべる',\n  'しんか',\n  'しんこう',\n  'じんじゃ',\n  'しんせいじ',\n  'しんちく',\n  'しんりん',\n  'すあげ',\n  'すあし',\n  'すあな',\n  'ずあん',\n  'すいえい',\n  'すいか',\n  'すいとう',\n  'ずいぶん',\n  'すいようび',\n  'すうがく',\n  'すうじつ',\n  'すうせん',\n  'すおどり',\n  'すきま',\n  'すくう',\n  'すくない',\n  'すける',\n  'すごい',\n  'すこし',\n  'ずさん',\n  'すずしい',\n  'すすむ',\n  'すすめる',\n  'すっかり',\n  'ずっしり',\n  'ずっと',\n  'すてき',\n  'すてる',\n  'すねる',\n  'すのこ',\n  'すはだ',\n  'すばらしい',\n  'ずひょう',\n  'ずぶぬれ',\n  'すぶり',\n  'すふれ',\n  'すべて',\n  'すべる',\n  'ずほう',\n  'すぼん',\n  'すまい',\n  'すめし',\n  'すもう',\n  'すやき',\n  'すらすら',\n  'するめ',\n  'すれちがう',\n  'すろっと',\n  'すわる',\n  'すんぜん',\n  'すんぽう',\n  'せあぶら',\n  'せいかつ',\n  'せいげん',\n  'せいじ',\n  'せいよう',\n  'せおう',\n  'せかいかん',\n  'せきにん',\n  'せきむ',\n  'せきゆ',\n  'せきらんうん',\n  'せけん',\n  'せこう',\n  'せすじ',\n  'せたい',\n  'せたけ',\n  'せっかく',\n  'せっきゃく',\n  'ぜっく',\n  'せっけん',\n  'せっこつ',\n  'せっさたくま',\n  'せつぞく',\n  'せつだん',\n  'せつでん',\n  'せっぱん',\n  'せつび',\n  'せつぶん',\n  'せつめい',\n  'せつりつ',\n  'せなか',\n  'せのび',\n  'せはば',\n  'せびろ',\n  'せぼね',\n  'せまい',\n  'せまる',\n  'せめる',\n  'せもたれ',\n  'せりふ',\n  'ぜんあく',\n  'せんい',\n  'せんえい',\n  'せんか',\n  'せんきょ',\n  'せんく',\n  'せんげん',\n  'ぜんご',\n  'せんさい',\n  'せんしゅ',\n  'せんすい',\n  'せんせい',\n  'せんぞ',\n  'せんたく',\n  'せんちょう',\n  'せんてい',\n  'せんとう',\n  'せんぬき',\n  'せんねん',\n  'せんぱい',\n  'ぜんぶ',\n  'ぜんぽう',\n  'せんむ',\n  'せんめんじょ',\n  'せんもん',\n  'せんやく',\n  'せんゆう',\n  'せんよう',\n  'ぜんら',\n  'ぜんりゃく',\n  'せんれい',\n  'せんろ',\n  'そあく',\n  'そいとげる',\n  'そいね',\n  'そうがんきょう',\n  'そうき',\n  'そうご',\n  'そうしん',\n  'そうだん',\n  'そうなん',\n  'そうび',\n  'そうめん',\n  'そうり',\n  'そえもの',\n  'そえん',\n  'そがい',\n  'そげき',\n  'そこう',\n  'そこそこ',\n  'そざい',\n  'そしな',\n  'そせい',\n  'そせん',\n  'そそぐ',\n  'そだてる',\n  'そつう',\n  'そつえん',\n  'そっかん',\n  'そつぎょう',\n  'そっけつ',\n  'そっこう',\n  'そっせん',\n  'そっと',\n  'そとがわ',\n  'そとづら',\n  'そなえる',\n  'そなた',\n  'そふぼ',\n  'そぼく',\n  'そぼろ',\n  'そまつ',\n  'そまる',\n  'そむく',\n  'そむりえ',\n  'そめる',\n  'そもそも',\n  'そよかぜ',\n  'そらまめ',\n  'そろう',\n  'そんかい',\n  'そんけい',\n  'そんざい',\n  'そんしつ',\n  'そんぞく',\n  'そんちょう',\n  'ぞんび',\n  'ぞんぶん',\n  'そんみん',\n  'たあい',\n  'たいいん',\n  'たいうん',\n  'たいえき',\n  'たいおう',\n  'だいがく',\n  'たいき',\n  'たいぐう',\n  'たいけん',\n  'たいこ',\n  'たいざい',\n  'だいじょうぶ',\n  'だいすき',\n  'たいせつ',\n  'たいそう',\n  'だいたい',\n  'たいちょう',\n  'たいてい',\n  'だいどころ',\n  'たいない',\n  'たいねつ',\n  'たいのう',\n  'たいはん',\n  'だいひょう',\n  'たいふう',\n  'たいへん',\n  'たいほ',\n  'たいまつばな',\n  'たいみんぐ',\n  'たいむ',\n  'たいめん',\n  'たいやき',\n  'たいよう',\n  'たいら',\n  'たいりょく',\n  'たいる',\n  'たいわん',\n  'たうえ',\n  'たえる',\n  'たおす',\n  'たおる',\n  'たおれる',\n  'たかい',\n  'たかね',\n  'たきび',\n  'たくさん',\n  'たこく',\n  'たこやき',\n  'たさい',\n  'たしざん',\n  'だじゃれ',\n  'たすける',\n  'たずさわる',\n  'たそがれ',\n  'たたかう',\n  'たたく',\n  'ただしい',\n  'たたみ',\n  'たちばな',\n  'だっかい',\n  'だっきゃく',\n  'だっこ',\n  'だっしゅつ',\n  'だったい',\n  'たてる',\n  'たとえる',\n  'たなばた',\n  'たにん',\n  'たぬき',\n  'たのしみ',\n  'たはつ',\n  'たぶん',\n  'たべる',\n  'たぼう',\n  'たまご',\n  'たまる',\n  'だむる',\n  'ためいき',\n  'ためす',\n  'ためる',\n  'たもつ',\n  'たやすい',\n  'たよる',\n  'たらす',\n  'たりきほんがん',\n  'たりょう',\n  'たりる',\n  'たると',\n  'たれる',\n  'たれんと',\n  'たろっと',\n  'たわむれる',\n  'だんあつ',\n  'たんい',\n  'たんおん',\n  'たんか',\n  'たんき',\n  'たんけん',\n  'たんご',\n  'たんさん',\n  'たんじょうび',\n  'だんせい',\n  'たんそく',\n  'たんたい',\n  'だんち',\n  'たんてい',\n  'たんとう',\n  'だんな',\n  'たんにん',\n  'だんねつ',\n  'たんのう',\n  'たんぴん',\n  'だんぼう',\n  'たんまつ',\n  'たんめい',\n  'だんれつ',\n  'だんろ',\n  'だんわ',\n  'ちあい',\n  'ちあん',\n  'ちいき',\n  'ちいさい',\n  'ちえん',\n  'ちかい',\n  'ちから',\n  'ちきゅう',\n  'ちきん',\n  'ちけいず',\n  'ちけん',\n  'ちこく',\n  'ちさい',\n  'ちしき',\n  'ちしりょう',\n  'ちせい',\n  'ちそう',\n  'ちたい',\n  'ちたん',\n  'ちちおや',\n  'ちつじょ',\n  'ちてき',\n  'ちてん',\n  'ちぬき',\n  'ちぬり',\n  'ちのう',\n  'ちひょう',\n  'ちへいせん',\n  'ちほう',\n  'ちまた',\n  'ちみつ',\n  'ちみどろ',\n  'ちめいど',\n  'ちゃんこなべ',\n  'ちゅうい',\n  'ちゆりょく',\n  'ちょうし',\n  'ちょさくけん',\n  'ちらし',\n  'ちらみ',\n  'ちりがみ',\n  'ちりょう',\n  'ちるど',\n  'ちわわ',\n  'ちんたい',\n  'ちんもく',\n  'ついか',\n  'ついたち',\n  'つうか',\n  'つうじょう',\n  'つうはん',\n  'つうわ',\n  'つかう',\n  'つかれる',\n  'つくね',\n  'つくる',\n  'つけね',\n  'つける',\n  'つごう',\n  'つたえる',\n  'つづく',\n  'つつじ',\n  'つつむ',\n  'つとめる',\n  'つながる',\n  'つなみ',\n  'つねづね',\n  'つのる',\n  'つぶす',\n  'つまらない',\n  'つまる',\n  'つみき',\n  'つめたい',\n  'つもり',\n  'つもる',\n  'つよい',\n  'つるぼ',\n  'つるみく',\n  'つわもの',\n  'つわり',\n  'てあし',\n  'てあて',\n  'てあみ',\n  'ていおん',\n  'ていか',\n  'ていき',\n  'ていけい',\n  'ていこく',\n  'ていさつ',\n  'ていし',\n  'ていせい',\n  'ていたい',\n  'ていど',\n  'ていねい',\n  'ていひょう',\n  'ていへん',\n  'ていぼう',\n  'てうち',\n  'ておくれ',\n  'てきとう',\n  'てくび',\n  'でこぼこ',\n  'てさぎょう',\n  'てさげ',\n  'てすり',\n  'てそう',\n  'てちがい',\n  'てちょう',\n  'てつがく',\n  'てつづき',\n  'でっぱ',\n  'てつぼう',\n  'てつや',\n  'でぬかえ',\n  'てぬき',\n  'てぬぐい',\n  'てのひら',\n  'てはい',\n  'てぶくろ',\n  'てふだ',\n  'てほどき',\n  'てほん',\n  'てまえ',\n  'てまきずし',\n  'てみじか',\n  'てみやげ',\n  'てらす',\n  'てれび',\n  'てわけ',\n  'てわたし',\n  'でんあつ',\n  'てんいん',\n  'てんかい',\n  'てんき',\n  'てんぐ',\n  'てんけん',\n  'てんごく',\n  'てんさい',\n  'てんし',\n  'てんすう',\n  'でんち',\n  'てんてき',\n  'てんとう',\n  'てんない',\n  'てんぷら',\n  'てんぼうだい',\n  'てんめつ',\n  'てんらんかい',\n  'でんりょく',\n  'でんわ',\n  'どあい',\n  'といれ',\n  'どうかん',\n  'とうきゅう',\n  'どうぐ',\n  'とうし',\n  'とうむぎ',\n  'とおい',\n  'とおか',\n  'とおく',\n  'とおす',\n  'とおる',\n  'とかい',\n  'とかす',\n  'ときおり',\n  'ときどき',\n  'とくい',\n  'とくしゅう',\n  'とくてん',\n  'とくに',\n  'とくべつ',\n  'とけい',\n  'とける',\n  'とこや',\n  'とさか',\n  'としょかん',\n  'とそう',\n  'とたん',\n  'とちゅう',\n  'とっきゅう',\n  'とっくん',\n  'とつぜん',\n  'とつにゅう',\n  'とどける',\n  'ととのえる',\n  'とない',\n  'となえる',\n  'となり',\n  'とのさま',\n  'とばす',\n  'どぶがわ',\n  'とほう',\n  'とまる',\n  'とめる',\n  'ともだち',\n  'ともる',\n  'どようび',\n  'とらえる',\n  'とんかつ',\n  'どんぶり',\n  'ないかく',\n  'ないこう',\n  'ないしょ',\n  'ないす',\n  'ないせん',\n  'ないそう',\n  'なおす',\n  'ながい',\n  'なくす',\n  'なげる',\n  'なこうど',\n  'なさけ',\n  'なたでここ',\n  'なっとう',\n  'なつやすみ',\n  'ななおし',\n  'なにごと',\n  'なにもの',\n  'なにわ',\n  'なのか',\n  'なふだ',\n  'なまいき',\n  'なまえ',\n  'なまみ',\n  'なみだ',\n  'なめらか',\n  'なめる',\n  'なやむ',\n  'ならう',\n  'ならび',\n  'ならぶ',\n  'なれる',\n  'なわとび',\n  'なわばり',\n  'にあう',\n  'にいがた',\n  'にうけ',\n  'におい',\n  'にかい',\n  'にがて',\n  'にきび',\n  'にくしみ',\n  'にくまん',\n  'にげる',\n  'にさんかたんそ',\n  'にしき',\n  'にせもの',\n  'にちじょう',\n  'にちようび',\n  'にっか',\n  'にっき',\n  'にっけい',\n  'にっこう',\n  'にっさん',\n  'にっしょく',\n  'にっすう',\n  'にっせき',\n  'にってい',\n  'になう',\n  'にほん',\n  'にまめ',\n  'にもつ',\n  'にやり',\n  'にゅういん',\n  'にりんしゃ',\n  'にわとり',\n  'にんい',\n  'にんか',\n  'にんき',\n  'にんげん',\n  'にんしき',\n  'にんずう',\n  'にんそう',\n  'にんたい',\n  'にんち',\n  'にんてい',\n  'にんにく',\n  'にんぷ',\n  'にんまり',\n  'にんむ',\n  'にんめい',\n  'にんよう',\n  'ぬいくぎ',\n  'ぬかす',\n  'ぬぐいとる',\n  'ぬぐう',\n  'ぬくもり',\n  'ぬすむ',\n  'ぬまえび',\n  'ぬめり',\n  'ぬらす',\n  'ぬんちゃく',\n  'ねあげ',\n  'ねいき',\n  'ねいる',\n  'ねいろ',\n  'ねぐせ',\n  'ねくたい',\n  'ねくら',\n  'ねこぜ',\n  'ねこむ',\n  'ねさげ',\n  'ねすごす',\n  'ねそべる',\n  'ねだん',\n  'ねつい',\n  'ねっしん',\n  'ねつぞう',\n  'ねったいぎょ',\n  'ねぶそく',\n  'ねふだ',\n  'ねぼう',\n  'ねほりはほり',\n  'ねまき',\n  'ねまわし',\n  'ねみみ',\n  'ねむい',\n  'ねむたい',\n  'ねもと',\n  'ねらう',\n  'ねわざ',\n  'ねんいり',\n  'ねんおし',\n  'ねんかん',\n  'ねんきん',\n  'ねんぐ',\n  'ねんざ',\n  'ねんし',\n  'ねんちゃく',\n  'ねんど',\n  'ねんぴ',\n  'ねんぶつ',\n  'ねんまつ',\n  'ねんりょう',\n  'ねんれい',\n  'のいず',\n  'のおづま',\n  'のがす',\n  'のきなみ',\n  'のこぎり',\n  'のこす',\n  'のこる',\n  'のせる',\n  'のぞく',\n  'のぞむ',\n  'のたまう',\n  'のちほど',\n  'のっく',\n  'のばす',\n  'のはら',\n  'のべる',\n  'のぼる',\n  'のみもの',\n  'のやま',\n  'のらいぬ',\n  'のらねこ',\n  'のりもの',\n  'のりゆき',\n  'のれん',\n  'のんき',\n  'ばあい',\n  'はあく',\n  'ばあさん',\n  'ばいか',\n  'ばいく',\n  'はいけん',\n  'はいご',\n  'はいしん',\n  'はいすい',\n  'はいせん',\n  'はいそう',\n  'はいち',\n  'ばいばい',\n  'はいれつ',\n  'はえる',\n  'はおる',\n  'はかい',\n  'ばかり',\n  'はかる',\n  'はくしゅ',\n  'はけん',\n  'はこぶ',\n  'はさみ',\n  'はさん',\n  'はしご',\n  'ばしょ',\n  'はしる',\n  'はせる',\n  'ぱそこん',\n  'はそん',\n  'はたん',\n  'はちみつ',\n  'はつおん',\n  'はっかく',\n  'はづき',\n  'はっきり',\n  'はっくつ',\n  'はっけん',\n  'はっこう',\n  'はっさん',\n  'はっしん',\n  'はったつ',\n  'はっちゅう',\n  'はってん',\n  'はっぴょう',\n  'はっぽう',\n  'はなす',\n  'はなび',\n  'はにかむ',\n  'はぶらし',\n  'はみがき',\n  'はむかう',\n  'はめつ',\n  'はやい',\n  'はやし',\n  'はらう',\n  'はろうぃん',\n  'はわい',\n  'はんい',\n  'はんえい',\n  'はんおん',\n  'はんかく',\n  'はんきょう',\n  'ばんぐみ',\n  'はんこ',\n  'はんしゃ',\n  'はんすう',\n  'はんだん',\n  'ぱんち',\n  'ぱんつ',\n  'はんてい',\n  'はんとし',\n  'はんのう',\n  'はんぱ',\n  'はんぶん',\n  'はんぺん',\n  'はんぼうき',\n  'はんめい',\n  'はんらん',\n  'はんろん',\n  'ひいき',\n  'ひうん',\n  'ひえる',\n  'ひかく',\n  'ひかり',\n  'ひかる',\n  'ひかん',\n  'ひくい',\n  'ひけつ',\n  'ひこうき',\n  'ひこく',\n  'ひさい',\n  'ひさしぶり',\n  'ひさん',\n  'びじゅつかん',\n  'ひしょ',\n  'ひそか',\n  'ひそむ',\n  'ひたむき',\n  'ひだり',\n  'ひたる',\n  'ひつぎ',\n  'ひっこし',\n  'ひっし',\n  'ひつじゅひん',\n  'ひっす',\n  'ひつぜん',\n  'ぴったり',\n  'ぴっちり',\n  'ひつよう',\n  'ひてい',\n  'ひとごみ',\n  'ひなまつり',\n  'ひなん',\n  'ひねる',\n  'ひはん',\n  'ひびく',\n  'ひひょう',\n  'ひほう',\n  'ひまわり',\n  'ひまん',\n  'ひみつ',\n  'ひめい',\n  'ひめじし',\n  'ひやけ',\n  'ひやす',\n  'ひよう',\n  'びょうき',\n  'ひらがな',\n  'ひらく',\n  'ひりつ',\n  'ひりょう',\n  'ひるま',\n  'ひるやすみ',\n  'ひれい',\n  'ひろい',\n  'ひろう',\n  'ひろき',\n  'ひろゆき',\n  'ひんかく',\n  'ひんけつ',\n  'ひんこん',\n  'ひんしゅ',\n  'ひんそう',\n  'ぴんち',\n  'ひんぱん',\n  'びんぼう',\n  'ふあん',\n  'ふいうち',\n  'ふうけい',\n  'ふうせん',\n  'ぷうたろう',\n  'ふうとう',\n  'ふうふ',\n  'ふえる',\n  'ふおん',\n  'ふかい',\n  'ふきん',\n  'ふくざつ',\n  'ふくぶくろ',\n  'ふこう',\n  'ふさい',\n  'ふしぎ',\n  'ふじみ',\n  'ふすま',\n  'ふせい',\n  'ふせぐ',\n  'ふそく',\n  'ぶたにく',\n  'ふたん',\n  'ふちょう',\n  'ふつう',\n  'ふつか',\n  'ふっかつ',\n  'ふっき',\n  'ふっこく',\n  'ぶどう',\n  'ふとる',\n  'ふとん',\n  'ふのう',\n  'ふはい',\n  'ふひょう',\n  'ふへん',\n  'ふまん',\n  'ふみん',\n  'ふめつ',\n  'ふめん',\n  'ふよう',\n  'ふりこ',\n  'ふりる',\n  'ふるい',\n  'ふんいき',\n  'ぶんがく',\n  'ぶんぐ',\n  'ふんしつ',\n  'ぶんせき',\n  'ふんそう',\n  'ぶんぽう',\n  'へいあん',\n  'へいおん',\n  'へいがい',\n  'へいき',\n  'へいげん',\n  'へいこう',\n  'へいさ',\n  'へいしゃ',\n  'へいせつ',\n  'へいそ',\n  'へいたく',\n  'へいてん',\n  'へいねつ',\n  'へいわ',\n  'へきが',\n  'へこむ',\n  'べにいろ',\n  'べにしょうが',\n  'へらす',\n  'へんかん',\n  'べんきょう',\n  'べんごし',\n  'へんさい',\n  'へんたい',\n  'べんり',\n  'ほあん',\n  'ほいく',\n  'ぼうぎょ',\n  'ほうこく',\n  'ほうそう',\n  'ほうほう',\n  'ほうもん',\n  'ほうりつ',\n  'ほえる',\n  'ほおん',\n  'ほかん',\n  'ほきょう',\n  'ぼきん',\n  'ほくろ',\n  'ほけつ',\n  'ほけん',\n  'ほこう',\n  'ほこる',\n  'ほしい',\n  'ほしつ',\n  'ほしゅ',\n  'ほしょう',\n  'ほせい',\n  'ほそい',\n  'ほそく',\n  'ほたて',\n  'ほたる',\n  'ぽちぶくろ',\n  'ほっきょく',\n  'ほっさ',\n  'ほったん',\n  'ほとんど',\n  'ほめる',\n  'ほんい',\n  'ほんき',\n  'ほんけ',\n  'ほんしつ',\n  'ほんやく',\n  'まいにち',\n  'まかい',\n  'まかせる',\n  'まがる',\n  'まける',\n  'まこと',\n  'まさつ',\n  'まじめ',\n  'ますく',\n  'まぜる',\n  'まつり',\n  'まとめ',\n  'まなぶ',\n  'まぬけ',\n  'まねく',\n  'まほう',\n  'まもる',\n  'まゆげ',\n  'まよう',\n  'まろやか',\n  'まわす',\n  'まわり',\n  'まわる',\n  'まんが',\n  'まんきつ',\n  'まんぞく',\n  'まんなか',\n  'みいら',\n  'みうち',\n  'みえる',\n  'みがく',\n  'みかた',\n  'みかん',\n  'みけん',\n  'みこん',\n  'みじかい',\n  'みすい',\n  'みすえる',\n  'みせる',\n  'みっか',\n  'みつかる',\n  'みつける',\n  'みてい',\n  'みとめる',\n  'みなと',\n  'みなみかさい',\n  'みねらる',\n  'みのう',\n  'みのがす',\n  'みほん',\n  'みもと',\n  'みやげ',\n  'みらい',\n  'みりょく',\n  'みわく',\n  'みんか',\n  'みんぞく',\n  'むいか',\n  'むえき',\n  'むえん',\n  'むかい',\n  'むかう',\n  'むかえ',\n  'むかし',\n  'むぎちゃ',\n  'むける',\n  'むげん',\n  'むさぼる',\n  'むしあつい',\n  'むしば',\n  'むじゅん',\n  'むしろ',\n  'むすう',\n  'むすこ',\n  'むすぶ',\n  'むすめ',\n  'むせる',\n  'むせん',\n  'むちゅう',\n  'むなしい',\n  'むのう',\n  'むやみ',\n  'むよう',\n  'むらさき',\n  'むりょう',\n  'むろん',\n  'めいあん',\n  'めいうん',\n  'めいえん',\n  'めいかく',\n  'めいきょく',\n  'めいさい',\n  'めいし',\n  'めいそう',\n  'めいぶつ',\n  'めいれい',\n  'めいわく',\n  'めぐまれる',\n  'めざす',\n  'めした',\n  'めずらしい',\n  'めだつ',\n  'めまい',\n  'めやす',\n  'めんきょ',\n  'めんせき',\n  'めんどう',\n  'もうしあげる',\n  'もうどうけん',\n  'もえる',\n  'もくし',\n  'もくてき',\n  'もくようび',\n  'もちろん',\n  'もどる',\n  'もらう',\n  'もんく',\n  'もんだい',\n  'やおや',\n  'やける',\n  'やさい',\n  'やさしい',\n  'やすい',\n  'やすたろう',\n  'やすみ',\n  'やせる',\n  'やそう',\n  'やたい',\n  'やちん',\n  'やっと',\n  'やっぱり',\n  'やぶる',\n  'やめる',\n  'ややこしい',\n  'やよい',\n  'やわらかい',\n  'ゆうき',\n  'ゆうびんきょく',\n  'ゆうべ',\n  'ゆうめい',\n  'ゆけつ',\n  'ゆしゅつ',\n  'ゆせん',\n  'ゆそう',\n  'ゆたか',\n  'ゆちゃく',\n  'ゆでる',\n  'ゆにゅう',\n  'ゆびわ',\n  'ゆらい',\n  'ゆれる',\n  'ようい',\n  'ようか',\n  'ようきゅう',\n  'ようじ',\n  'ようす',\n  'ようちえん',\n  'よかぜ',\n  'よかん',\n  'よきん',\n  'よくせい',\n  'よくぼう',\n  'よけい',\n  'よごれる',\n  'よさん',\n  'よしゅう',\n  'よそう',\n  'よそく',\n  'よっか',\n  'よてい',\n  'よどがわく',\n  'よねつ',\n  'よやく',\n  'よゆう',\n  'よろこぶ',\n  'よろしい',\n  'らいう',\n  'らくがき',\n  'らくご',\n  'らくさつ',\n  'らくだ',\n  'らしんばん',\n  'らせん',\n  'らぞく',\n  'らたい',\n  'らっか',\n  'られつ',\n  'りえき',\n  'りかい',\n  'りきさく',\n  'りきせつ',\n  'りくぐん',\n  'りくつ',\n  'りけん',\n  'りこう',\n  'りせい',\n  'りそう',\n  'りそく',\n  'りてん',\n  'りねん',\n  'りゆう',\n  'りゅうがく',\n  'りよう',\n  'りょうり',\n  'りょかん',\n  'りょくちゃ',\n  'りょこう',\n  'りりく',\n  'りれき',\n  'りろん',\n  'りんご',\n  'るいけい',\n  'るいさい',\n  'るいじ',\n  'るいせき',\n  'るすばん',\n  'るりがわら',\n  'れいかん',\n  'れいぎ',\n  'れいせい',\n  'れいぞうこ',\n  'れいとう',\n  'れいぼう',\n  'れきし',\n  'れきだい',\n  'れんあい',\n  'れんけい',\n  'れんこん',\n  'れんさい',\n  'れんしゅう',\n  'れんぞく',\n  'れんらく',\n  'ろうか',\n  'ろうご',\n  'ろうじん',\n  'ろうそく',\n  'ろくが',\n  'ろこつ',\n  'ろじうら',\n  'ろしゅつ',\n  'ろせん',\n  'ろてん',\n  'ろめん',\n  'ろれつ',\n  'ろんぎ',\n  'ろんぱ',\n  'ろんぶん',\n  'ろんり',\n  'わかす',\n  'わかめ',\n  'わかやま',\n  'わかれる',\n  'わしつ',\n  'わじまし',\n  'わすれもの',\n  'わらう',\n  'われる'\n]\nwordList.space = '　'\nexport { wordList }\n","/**\n * KeyPair\n * =======\n *\n * A keyPair is a collection of a private key and a public key.\n * const keyPair = new KeyPair().fromRandom()\n * const keyPair = new KeyPair().fromPrivKey(privKey)\n * const privKey = keyPair.privKey\n * const pubKey = keyPair.pubKey\n */\n'use strict'\n\nimport { PrivKey as DefaultPrivKey } from './priv-key'\nimport { PubKey } from './pub-key'\nimport { Struct } from './struct'\nimport { Bw } from './bw'\n\nclass KeyPair extends Struct {\n  constructor (privKey, pubKey, PrivKey = DefaultPrivKey) {\n    super({ privKey, pubKey })\n    this.PrivKey = PrivKey\n  }\n\n  fromJSON (json) {\n    if (json.privKey) {\n      this.privKey = this.PrivKey.fromJSON(json.privKey)\n    }\n    if (json.pubKey) {\n      this.pubKey = PubKey.fromJSON(json.pubKey)\n    }\n    return this\n  }\n\n  fromBr (br) {\n    const buflen1 = br.readUInt8()\n    if (buflen1 > 0) {\n      this.privKey = new this.PrivKey().fromFastBuffer(br.read(buflen1))\n    }\n    const buflen2 = br.readUInt8()\n    if (buflen2 > 0) {\n      this.pubKey = new PubKey().fromFastBuffer(br.read(buflen2))\n    }\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    if (this.privKey) {\n      const privKeybuf = this.privKey.toFastBuffer()\n      bw.writeUInt8(privKeybuf.length)\n      bw.write(privKeybuf)\n    } else {\n      bw.writeUInt8(0)\n    }\n    if (this.pubKey) {\n      const pubKeybuf = this.pubKey.toFastBuffer()\n      bw.writeUInt8(pubKeybuf.length)\n      bw.write(pubKeybuf)\n    } else {\n      bw.writeUInt8(0)\n    }\n    return bw\n  }\n\n  fromString (str) {\n    return this.fromJSON(JSON.parse(str))\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON())\n  }\n\n  toPublic () {\n    const keyPair = new KeyPair().fromObject(this)\n    keyPair.privKey = undefined\n    return keyPair\n  }\n\n  fromPrivKey (privKey) {\n    this.privKey = privKey\n    this.pubKey = new PubKey().fromPrivKey(privKey)\n    return this\n  }\n\n  static fromPrivKey (privKey) {\n    return new this().fromPrivKey(privKey)\n  }\n\n  async asyncFromPrivKey (privKey) {\n    this.privKey = privKey\n    this.pubKey = await new PubKey().asyncFromPrivKey(privKey)\n    return this\n  }\n\n  static asyncFromPrivKey (privKey) {\n    return new this().asyncFromPrivKey(privKey)\n  }\n\n  fromRandom () {\n    this.privKey = new this.PrivKey().fromRandom()\n    this.pubKey = new PubKey().fromPrivKey(this.privKey)\n    return this\n  }\n\n  static fromRandom () {\n    return new this().fromRandom()\n  }\n\n  async asyncFromRandom () {\n    this.privKey = new this.PrivKey().fromRandom()\n    return this.asyncFromPrivKey(this.privKey)\n  }\n\n  static asyncFromRandom () {\n    return new this().asyncFromRandom()\n  }\n}\n\nKeyPair.Mainnet = class extends KeyPair {\n  constructor (privKey, pubKey) {\n    super(privKey, pubKey, DefaultPrivKey.Mainnet)\n  }\n}\n\nKeyPair.Testnet = class extends KeyPair {\n  constructor (privKey, pubKey) {\n    super(privKey, pubKey, DefaultPrivKey.Testnet)\n  }\n}\n\nexport { KeyPair }\n","/**\n * Ecdsa\n * =====\n *\n * Ecdsa is the signature algorithm used by bitcoin. The way you probably want\n * to use this is with the static Ecdsa.sign( ... ) and Ecdsa.verify( ... )\n * functions. Note that in bitcoin, the hashBuf is little endian, so if you are\n * signing or verifying something that has to do with a transaction, you should\n * explicitly plug in that it is little endian as an option to the sign and\n * verify functions.\n *\n * This implementation of Ecdsa uses deterministic signatures as defined in RFC\n * 6979 as the default, which has become a defacto standard in bitcoin wallets\n * due to recurring security issues around using a value of k pulled from a\n * possibly faulty entropy pool. If you use the same value of k twice, someone\n * can derive your private key. Deterministic k prevents this without needing\n * an entropy pool.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Br } from './br'\nimport { Hash } from './hash'\nimport { KeyPair } from './key-pair'\nimport { Point } from './point'\nimport { PubKey } from './pub-key'\nimport { Random } from './random'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Ecdsa extends Struct {\n  constructor (sig, keyPair, hashBuf, k, endian, verified) {\n    super({ sig, keyPair, hashBuf, k, endian, verified })\n  }\n\n  toJSON () {\n    return {\n      sig: this.sig ? this.sig.toString() : undefined,\n      keyPair: this.keyPair\n        ? this.keyPair.toBuffer().toString('hex')\n        : undefined,\n      hashBuf: this.hashBuf ? this.hashBuf.toString('hex') : undefined,\n      k: this.k ? this.k.toString() : undefined,\n      endian: this.endian,\n      verified: this.verified\n    }\n  }\n\n  fromJSON (json) {\n    this.sig = json.sig ? new Sig().fromString(json.sig) : undefined\n    this.keyPair = json.keyPair\n      ? new KeyPair().fromBuffer(Buffer.from(json.keyPair, 'hex'))\n      : undefined\n    this.hashBuf = json.hashBuf ? Buffer.from(json.hashBuf, 'hex') : undefined\n    this.k = json.k ? new Bn().fromString(json.k) : undefined\n    this.endian = json.endian\n    this.verified = json.verified\n    return this\n  }\n\n  toBuffer () {\n    const str = JSON.stringify(this.toJSON())\n    return Buffer.from(str)\n  }\n\n  fromBuffer (buf) {\n    const json = JSON.parse(buf.toString())\n    return this.fromJSON(json)\n  }\n\n  calcrecovery () {\n    for (let recovery = 0; recovery < 4; recovery++) {\n      let Qprime\n      this.sig.recovery = recovery\n      try {\n        Qprime = this.sig2PubKey()\n      } catch (e) {\n        continue\n      }\n\n      if (Qprime.point.eq(this.keyPair.pubKey.point)) {\n        const compressed = this.keyPair.pubKey.compressed\n        this.sig.compressed =\n            this.keyPair.pubKey.compressed === undefined ? true : compressed\n        return this\n      }\n    }\n\n    this.sig.recovery = undefined\n    throw new Error('Unable to find valid recovery factor')\n  }\n\n  async asyncCalcrecovery () {\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'calcrecovery',\n      []\n    )\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  /**\n     * Calculates the recovery factor, and mutates sig so that it now contains\n     * the recovery factor and the \"compressed\" variable. Throws an exception on\n     * failure.\n     */\n  static calcrecovery (sig, pubKey, hashBuf) {\n    const ecdsa = new Ecdsa().fromObject({\n      sig: sig,\n      keyPair: new KeyPair().fromObject({ pubKey: pubKey }),\n      hashBuf: hashBuf\n    })\n    return ecdsa.calcrecovery().sig\n  }\n\n  static async asyncCalcrecovery (sig, pubKey, hashBuf) {\n    const workersResult = await Workers.asyncClassMethod(\n      Ecdsa,\n      'calcrecovery',\n      [sig, pubKey, hashBuf]\n    )\n    return new Sig().fromFastBuffer(workersResult.resbuf)\n  }\n\n  fromString (str) {\n    const obj = JSON.parse(str)\n    if (obj.hashBuf) {\n      this.hashBuf = Buffer.from(obj.hashBuf, 'hex')\n    }\n    if (obj.keyPair) {\n      this.keyPair = new KeyPair().fromString(obj.keyPair)\n    }\n    if (obj.sig) {\n      this.sig = new Sig().fromString(obj.sig)\n    }\n    if (obj.k) {\n      this.k = new Bn(obj.k, 10)\n    }\n    return this\n  }\n\n  randomK () {\n    const N = Point.getN()\n    let k\n    do {\n      k = new Bn().fromBuffer(Random.getRandomBuffer(32))\n    } while (!(k.lt(N) && k.gt(0)))\n    this.k = k\n    return this\n  }\n\n  /**\n     * The traditional Ecdsa algorithm uses a purely random value of k. This has\n     * the negative that when signing, your entropy must be good, or the private\n     * key can be recovered if two signatures use the same value of k. It turns out\n     * that k does not have to be purely random. It can be deterministic, so long\n     * as an attacker can't guess it. RFC 6979 specifies how to do this using a\n     * combination of the private key and the hash of the thing to be signed. It is\n     * best practice to use this value, which can be tested for byte-for-byte\n     * accuracy, and is resistant to a broken RNG. Note that it is actually the\n     * case that bitcoin private keys have been compromised through that attack.\n     * Deterministic k is a best practice.\n     *\n     * https://tools.ietf.org/html/rfc6979#section-3.2\n     */\n  deterministicK (badrs) {\n    let v = Buffer.alloc(32)\n    v.fill(0x01)\n    let k = Buffer.alloc(32)\n    k.fill(0x00)\n    const x = this.keyPair.privKey.bn.toBuffer({ size: 32 })\n    k = Hash.sha256Hmac(\n      Buffer.concat([v, Buffer.from([0x00]), x, this.hashBuf]),\n      k\n    )\n    v = Hash.sha256Hmac(v, k)\n    k = Hash.sha256Hmac(\n      Buffer.concat([v, Buffer.from([0x01]), x, this.hashBuf]),\n      k\n    )\n    v = Hash.sha256Hmac(v, k)\n    v = Hash.sha256Hmac(v, k)\n    let T = new Bn().fromBuffer(v)\n    const N = Point.getN()\n\n    // if r or s were invalid when this function was used in signing,\n    // we do not want to actually compute r, s here for efficiency, so,\n    // we can increment badrs. explained at end of RFC 6979 section 3.2\n    if (badrs === undefined) {\n      badrs = 0\n    }\n    // also explained in 3.2, we must ensure T is in the proper range (0, N)\n    for (let i = 0; i < badrs || !(T.lt(N) && T.gt(0)); i++) {\n      k = Hash.sha256Hmac(Buffer.concat([v, Buffer.from([0x00])]), k)\n      v = Hash.sha256Hmac(v, k)\n      v = Hash.sha256Hmac(v, k)\n      T = new Bn().fromBuffer(v)\n    }\n\n    this.k = T\n    return this\n  }\n\n  /**\n     * Information about public key recovery:\n     * https://bitcointalk.org/index.php?topic=6430.0\n     * http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\n     * This code was originally taken from BitcoinJS\n     */\n  sig2PubKey () {\n    const recovery = this.sig.recovery\n    if (\n      !(recovery === 0 || recovery === 1 || recovery === 2 || recovery === 3)\n    ) {\n      throw new Error('i must be equal to 0, 1, 2, or 3')\n    }\n\n    const e = new Bn().fromBuffer(this.hashBuf)\n    const r = this.sig.r\n    const s = this.sig.s\n\n    // A set LSB signifies that the y-coordinate is odd\n    const isYOdd = recovery & 1\n\n    // The more significant bit specifies whether we should use the\n    // first or second candidate key.\n    const isSecondKey = recovery >> 1\n\n    const n = Point.getN()\n    const G = Point.getG()\n\n    // 1.1 LEt x = r + jn\n    const x = isSecondKey ? r.add(n) : r\n    const R = Point.fromX(isYOdd, x)\n\n    // 1.4 Check that nR is at infinity\n    let errm = ''\n    try {\n      R.mul(n)\n    } catch (err) {\n      errm = err.message\n    }\n    if (errm !== 'point mul out of range') {\n      throw new Error('nR is not a valid curve point')\n    }\n\n    // Compute -e from e\n    const eNeg = e.neg().umod(n)\n\n    // 1.6.1 Compute Q = r^-1 (sR - eG)\n    // Q = r^-1 (sR + -eG)\n    const rInv = r.invm(n)\n\n    // const Q = R.multiplyTwo(s, G, eNeg).mul(rInv)\n    const Q = R.mul(s)\n      .add(G.mul(eNeg))\n      .mul(rInv)\n\n    const pubKey = new PubKey(Q)\n    pubKey.compressed = this.sig.compressed\n    pubKey.validate()\n\n    return pubKey\n  }\n\n  async asyncSig2PubKey () {\n    const workersResult = await Workers.asyncObjectMethod(\n      this,\n      'sig2PubKey',\n      []\n    )\n    return PubKey.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static sig2PubKey (sig, hashBuf) {\n    const ecdsa = new Ecdsa().fromObject({\n      sig: sig,\n      hashBuf: hashBuf\n    })\n    return ecdsa.sig2PubKey()\n  }\n\n  static async asyncSig2PubKey (sig, hashBuf) {\n    const ecdsa = new Ecdsa().fromObject({\n      sig: sig,\n      hashBuf: hashBuf\n    })\n    const pubKey = await ecdsa.asyncSig2PubKey()\n    return pubKey\n  }\n\n  verifyStr (enforceLowS = true) {\n    if (!Buffer.isBuffer(this.hashBuf) || this.hashBuf.length !== 32) {\n      return 'hashBuf must be a 32 byte buffer'\n    }\n\n    try {\n      this.keyPair.pubKey.validate()\n    } catch (e) {\n      return 'Invalid pubKey: ' + e\n    }\n\n    const r = this.sig.r\n    const s = this.sig.s\n    if (\n      !(r.gt(0) && r.lt(Point.getN())) ||\n        !(s.gt(0) && s.lt(Point.getN()))\n    ) {\n      return 'r and s not in range'\n    }\n\n    if (enforceLowS) {\n      if (!this.sig.hasLowS()) {\n        return 's is too high and does not satisfy low s contraint - see bip 62'\n      }\n    }\n\n    const e = new Bn().fromBuffer(\n      this.hashBuf,\n      this.endian ? { endian: this.endian } : undefined\n    )\n    const n = Point.getN()\n    const sinv = s.invm(n)\n    const u1 = sinv.mul(e).mod(n)\n    const u2 = sinv.mul(r).mod(n)\n\n    const p = Point.getG().mulAdd(u1, this.keyPair.pubKey.point, u2)\n    // const p = Point.getG().mulAdd(u1, this.keyPair.pubKey.point, u2)\n    if (p.isInfinity()) {\n      return 'p is infinity'\n    }\n\n    if (\n      !(\n        p\n          .getX()\n          .mod(n)\n          .cmp(r) === 0\n      )\n    ) {\n      return 'Invalid signature'\n    } else {\n      return false\n    }\n  }\n\n  sign () {\n    const hashBuf =\n        this.endian === 'little'\n          ? new Br(this.hashBuf).readReverse()\n          : this.hashBuf\n\n    const privKey = this.keyPair.privKey\n\n    const d = privKey.bn\n\n    if (!hashBuf || !privKey || !d) {\n      throw new Error('invalid parameters')\n    }\n\n    if (!Buffer.isBuffer(hashBuf) || hashBuf.length !== 32) {\n      throw new Error('hashBuf must be a 32 byte buffer')\n    }\n\n    const N = Point.getN()\n    const G = Point.getG()\n    const e = new Bn().fromBuffer(hashBuf)\n\n    // try different values of k until r, s are valid\n    let badrs = 0\n    let k, Q, r, s\n    do {\n      if (!this.k || badrs > 0) {\n        this.deterministicK(badrs)\n      }\n      badrs++\n      k = this.k\n      Q = G.mul(k)\n      r = Q.getX().mod(N)\n      s = k\n        .invm(N)\n        .mul(e.add(d.mul(r)))\n        .mod(N)\n    } while (r.cmp(0) <= 0 || s.cmp(0) <= 0)\n\n    // enforce low s\n    // see Bip 62, \"low S values in signatures\"\n    if (\n      s.gt(\n        new Bn().fromBuffer(\n          Buffer.from(\n            '7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0',\n            'hex'\n          )\n        )\n      )\n    ) {\n      s = Point.getN().sub(s)\n    }\n    this.sig = Sig.fromObject({\n      r: r,\n      s: s,\n      compressed: this.keyPair.pubKey.compressed\n    })\n    return this\n  }\n\n  async asyncSign () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sign', [])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  signRandomK () {\n    this.randomK()\n    return this.sign()\n  }\n\n  toString () {\n    const obj = {}\n    if (this.hashBuf) {\n      obj.hashBuf = this.hashBuf.toString('hex')\n    }\n    if (this.keyPair) {\n      obj.keyPair = this.keyPair.toString()\n    }\n    if (this.sig) {\n      obj.sig = this.sig.toString()\n    }\n    if (this.k) {\n      obj.k = this.k.toString()\n    }\n    return JSON.stringify(obj)\n  }\n\n  verify (enforceLowS = true) {\n    if (!this.verifyStr(enforceLowS)) {\n      this.verified = true\n    } else {\n      this.verified = false\n    }\n    return this\n  }\n\n  async asyncVerify (enforceLowS = true) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'verify', [\n      enforceLowS\n    ])\n    return this.fromFastBuffer(workersResult.resbuf)\n  }\n\n  static sign (hashBuf, keyPair, endian) {\n    return new Ecdsa()\n      .fromObject({\n        hashBuf: hashBuf,\n        endian: endian,\n        keyPair: keyPair\n      })\n      .sign().sig\n  }\n\n  static async asyncSign (hashBuf, keyPair, endian) {\n    const ecdsa = new Ecdsa().fromObject({\n      hashBuf: hashBuf,\n      endian: endian,\n      keyPair: keyPair\n    })\n    await ecdsa.asyncSign()\n    return ecdsa.sig\n  }\n\n  static verify (hashBuf, sig, pubKey, endian, enforceLowS = true) {\n    return new Ecdsa()\n      .fromObject({\n        hashBuf: hashBuf,\n        endian: endian,\n        sig: sig,\n        keyPair: new KeyPair().fromObject({ pubKey: pubKey })\n      })\n      .verify(enforceLowS).verified\n  }\n\n  static async asyncVerify (hashBuf, sig, pubKey, endian, enforceLowS = true) {\n    const ecdsa = new Ecdsa().fromObject({\n      hashBuf: hashBuf,\n      endian: endian,\n      sig: sig,\n      keyPair: new KeyPair().fromObject({ pubKey: pubKey })\n    })\n    await ecdsa.asyncVerify(enforceLowS)\n    return ecdsa.verified\n  }\n}\n\nexport { Ecdsa }\n","/**\n * Bitcoin Signed Message\n * ======================\n *\n * \"Bitcoin Signed Message\" just refers to a standard way of signing and\n * verifying an arbitrary message. The standard way to do this involves using a\n * \"Bitcoin Signed Message:\\n\" prefix, which this code does. You are probably\n * interested in the static Bsm.sign( ... ) and Bsm.verify( ... ) functions,\n * which deal with a base64 string representing the compressed format of a\n * signature.\n */\n'use strict'\n\nimport { Address } from './address'\nimport { Bw } from './bw'\nimport { cmp } from './cmp'\nimport { Ecdsa } from './ecdsa'\nimport { Hash } from './hash'\nimport { KeyPair } from './key-pair'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Workers } from './workers'\n\nclass Bsm extends Struct {\n  constructor (messageBuf, keyPair, sig, address, verified) {\n    super({ messageBuf, keyPair, sig, address, verified })\n  }\n\n  static magicHash (messageBuf) {\n    if (!Buffer.isBuffer(messageBuf)) {\n      throw new Error('messageBuf must be a buffer')\n    }\n    const bw = new Bw()\n    bw.writeVarIntNum(Bsm.magicBytes.length)\n    bw.write(Bsm.magicBytes)\n    bw.writeVarIntNum(messageBuf.length)\n    bw.write(messageBuf)\n    const buf = bw.toBuffer()\n\n    const hashBuf = Hash.sha256Sha256(buf)\n\n    return hashBuf\n  }\n\n  static async asyncMagicHash (messageBuf) {\n    const args = [messageBuf]\n    const workersResult = await Workers.asyncClassMethod(Bsm, 'magicHash', args)\n    return workersResult.resbuf\n  }\n\n  static sign (messageBuf, keyPair) {\n    const m = new Bsm(messageBuf, keyPair)\n    m.sign()\n    const sigbuf = m.sig.toCompact()\n    const sigstr = sigbuf.toString('base64')\n    return sigstr\n  }\n\n  static async asyncSign (messageBuf, keyPair) {\n    const args = [messageBuf, keyPair]\n    const workersResult = await Workers.asyncClassMethod(Bsm, 'sign', args)\n    const sigstr = JSON.parse(workersResult.resbuf.toString())\n    return sigstr\n  }\n\n  static verify (messageBuf, sigstr, address) {\n    const sigbuf = Buffer.from(sigstr, 'base64')\n    const message = new Bsm()\n    message.messageBuf = messageBuf\n    message.sig = new Sig().fromCompact(sigbuf)\n    message.address = address\n\n    return message.verify().verified\n  }\n\n  static async asyncVerify (messageBuf, sigstr, address) {\n    const args = [messageBuf, sigstr, address]\n    const workersResult = await Workers.asyncClassMethod(Bsm, 'verify', args)\n    const res = JSON.parse(workersResult.resbuf.toString())\n    return res\n  }\n\n  sign () {\n    const hashBuf = Bsm.magicHash(this.messageBuf)\n    const ecdsa = new Ecdsa().fromObject({\n      hashBuf: hashBuf,\n      keyPair: this.keyPair\n    })\n    ecdsa.sign()\n    ecdsa.calcrecovery()\n    this.sig = ecdsa.sig\n    return this\n  }\n\n  verify () {\n    const hashBuf = Bsm.magicHash(this.messageBuf)\n\n    const ecdsa = new Ecdsa()\n    ecdsa.hashBuf = hashBuf\n    ecdsa.sig = this.sig\n    ecdsa.keyPair = new KeyPair()\n    ecdsa.keyPair.pubKey = ecdsa.sig2PubKey()\n\n    if (!ecdsa.verify()) {\n      this.verified = false\n      return this\n    }\n\n    const address = new Address().fromPubKey(\n      ecdsa.keyPair.pubKey,\n      undefined,\n      this.sig.compressed\n    )\n    // TODO: what if livenet/testnet mismatch?\n    if (cmp(address.hashBuf, this.address.hashBuf)) {\n      this.verified = true\n    } else {\n      this.verified = false\n    }\n\n    return this\n  }\n}\n\nBsm.magicBytes = Buffer.from('Bitcoin Signed Message:\\n')\n\nexport { Bsm }\n","/**\n * Block Header\n * ============\n *\n * Every block contains a blockHeader. This is probably not something you will\n * personally use, but it's here if you need it.\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { Struct } from './struct'\n\nclass BlockHeader extends Struct {\n  constructor (\n    versionBytesNum,\n    prevBlockHashBuf,\n    merkleRootBuf,\n    time,\n    bits,\n    nonce\n  ) {\n    super({\n      versionBytesNum,\n      prevBlockHashBuf,\n      merkleRootBuf,\n      time,\n      bits,\n      nonce\n    })\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      versionBytesNum: json.versionBytesNum,\n      prevBlockHashBuf: Buffer.from(json.prevBlockHashBuf, 'hex'),\n      merkleRootBuf: Buffer.from(json.merkleRootBuf, 'hex'),\n      time: json.time,\n      bits: json.bits,\n      nonce: json.nonce\n    })\n    return this\n  }\n\n  toJSON () {\n    return {\n      versionBytesNum: this.versionBytesNum,\n      prevBlockHashBuf: this.prevBlockHashBuf.toString('hex'),\n      merkleRootBuf: this.merkleRootBuf.toString('hex'),\n      time: this.time,\n      bits: this.bits,\n      nonce: this.nonce\n    }\n  }\n\n  fromBr (br) {\n    this.versionBytesNum = br.readUInt32LE()\n    this.prevBlockHashBuf = br.read(32)\n    this.merkleRootBuf = br.read(32)\n    this.time = br.readUInt32LE()\n    this.bits = br.readUInt32LE()\n    this.nonce = br.readUInt32LE()\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeUInt32LE(this.versionBytesNum)\n    bw.write(this.prevBlockHashBuf)\n    bw.write(this.merkleRootBuf)\n    bw.writeUInt32LE(this.time)\n    bw.writeUInt32LE(this.bits)\n    bw.writeUInt32LE(this.nonce)\n    return bw\n  }\n}\n\nexport { BlockHeader }\n","/**\n * Merkle\n * ======\n *\n * A node in a Merkle tree (possibly the root node, in which case it is the\n * Merkle root). A node either contains a buffer or links to two other nodes.\n */\n'use strict'\n\nimport { Hash } from './hash'\nimport { Struct } from './struct'\n\nclass Merkle extends Struct {\n  constructor (hashBuf, buf, merkle1, merkle2) {\n    super({ hashBuf, buf, merkle1, merkle2 })\n  }\n\n  hash () {\n    if (this.hashBuf) {\n      return this.hashBuf\n    }\n    if (this.buf) {\n      return Hash.sha256Sha256(this.buf)\n    }\n    const hashBuf1 = this.merkle1.hash()\n    const hashBuf2 = this.merkle2.hash()\n    this.buf = Buffer.concat([hashBuf1, hashBuf2])\n    return Hash.sha256Sha256(this.buf)\n  }\n\n  fromBuffers (bufs) {\n    if (bufs.length < 1) {\n      throw new Error('buffers must have a length')\n    }\n    bufs = bufs.slice()\n    const log = Math.log2(bufs.length)\n    if (!Number.isInteger(log)) {\n      // If a merkle tree does not have a number of ends that is a power of 2,\n      // then we have to copy the last value until it is a power of 2. Note\n      // that we copy *the actual object* over and over again, which ensures\n      // that when we finds its hash, the hash is cached.\n      const lastval = bufs[bufs.length - 1]\n      var len = Math.pow(2, Math.ceil(log))\n      for (let i = bufs.length; i < len; i++) {\n        bufs.push(lastval)\n      }\n    }\n    const bufs1 = bufs.slice(0, bufs.length / 2)\n    const bufs2 = bufs.slice(bufs.length / 2)\n    this.fromBufferArrays(bufs1, bufs2)\n    return this\n  }\n\n  static fromBuffers (bufs) {\n    return new this().fromBuffers(bufs)\n  }\n\n  /**\n     * Takes two arrays, both of which *must* be of a length that is a power of\n     * two.\n     */\n  fromBufferArrays (bufs1, bufs2) {\n    if (bufs1.length === 1) {\n      this.merkle1 = new Merkle(undefined, bufs1[0])\n      this.merkle2 = new Merkle(undefined, bufs2[0])\n      return this\n    }\n    const bufs11 = bufs1.slice(0, bufs1.length / 2)\n    const bufs12 = bufs1.slice(bufs1.length / 2)\n    this.merkle1 = new Merkle().fromBufferArrays(bufs11, bufs12)\n    const bufs21 = bufs2.slice(0, bufs2.length / 2)\n    const bufs22 = bufs2.slice(bufs2.length / 2)\n    this.merkle2 = new Merkle().fromBufferArrays(bufs21, bufs22)\n    return this\n  }\n\n  static fromBufferArrays (bufs1, bufs2) {\n    return new this().fromBufferArrays(bufs1, bufs2)\n  }\n\n  leavesNum () {\n    if (this.merkle1) {\n      return this.merkle1.leavesNum() + this.merkle2.leavesNum()\n    }\n    if (this.buf) {\n      return 1\n    }\n    throw new Error('invalid number of leaves')\n  }\n}\n\nexport { Merkle }\n","/**\n * Hash Cache\n * ==========\n *\n * For use in sighash.\n */\n'use strict'\n\nimport { Struct } from './struct'\n\nclass HashCache extends Struct {\n  constructor (prevoutsHashBuf, sequenceHashBuf, outputsHashBuf) {\n    super()\n    this.fromObject({ prevoutsHashBuf, sequenceHashBuf, outputsHashBuf })\n  }\n\n  fromBuffer (buf) {\n    return this.fromJSON(JSON.parse(buf.toString()))\n  }\n\n  toBuffer () {\n    return Buffer.from(JSON.stringify(this.toJSON()))\n  }\n\n  fromJSON (json) {\n    this.prevoutsHashBuf = json.prevoutsHashBuf ? Buffer.from(json.prevoutsHashBuf, 'hex') : undefined\n    this.sequenceHashBuf = json.sequenceHashBuf ? Buffer.from(json.sequenceHashBuf, 'hex') : undefined\n    this.outputsHashBuf = json.outputsHashBuf ? Buffer.from(json.outputsHashBuf, 'hex') : undefined\n    return this\n  }\n\n  toJSON () {\n    return {\n      prevoutsHashBuf: this.prevoutsHashBuf ? this.prevoutsHashBuf.toString('hex') : undefined,\n      sequenceHashBuf: this.sequenceHashBuf ? this.sequenceHashBuf.toString('hex') : undefined,\n      outputsHashBuf: this.outputsHashBuf ? this.outputsHashBuf.toString('hex') : undefined\n    }\n  }\n}\n\nexport { HashCache }\n","/**\n * VarInt (a.k.a. Compact Size)\n * ============================\n *\n * A varInt is a varible sized integer, and it is a format that is unique to\n * bitcoin, and used throughout bitcoin to represent the length of binary data\n * in a compact format that can take up as little as 1 byte or as much as 9\n * bytes.\n */\n'use strict'\n\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { Struct } from './struct'\n\nclass VarInt extends Struct {\n  constructor (buf) {\n    super({ buf })\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      buf: Buffer.from(json, 'hex')\n    })\n    return this\n  }\n\n  toJSON () {\n    return this.buf.toString('hex')\n  }\n\n  fromBuffer (buf) {\n    this.buf = buf\n    return this\n  }\n\n  fromBr (br) {\n    this.buf = br.readVarIntBuf()\n    return this\n  }\n\n  fromBn (bn) {\n    this.buf = new Bw().writeVarIntBn(bn).toBuffer()\n    return this\n  }\n\n  static fromBn (bn) {\n    return new this().fromBn(bn)\n  }\n\n  fromNumber (num) {\n    this.buf = new Bw().writeVarIntNum(num).toBuffer()\n    return this\n  }\n\n  static fromNumber (num) {\n    return new this().fromNumber(num)\n  }\n\n  toBuffer () {\n    return this.buf\n  }\n\n  toBn () {\n    return new Br(this.buf).readVarIntBn()\n  }\n\n  toNumber () {\n    return new Br(this.buf).readVarIntNum()\n  }\n}\n\nexport { VarInt }\n","/*\n * Transaction Input\n * =================\n *\n * An input to a transaction. The way you probably want to use this is through\n * the convenient method of new TxIn(txHashBuf, txOutNum, script, nSequence) (i.e., you\n * can leave out the scriptVi, which is computed automatically if you leave it\n * out.)\n */\n'use strict'\n\nimport { Bw } from './bw'\nimport { VarInt } from './var-int'\nimport { OpCode } from './op-code'\nimport { Script } from './script'\nimport { Struct } from './struct'\n\nclass TxIn extends Struct {\n  constructor (txHashBuf, txOutNum, scriptVi, script, nSequence = 0xffffffff) {\n    super({ txHashBuf, txOutNum, scriptVi, script, nSequence })\n  }\n\n  setScript (script) {\n    this.scriptVi = VarInt.fromNumber(script.toBuffer().length)\n    this.script = script\n    return this\n  }\n\n  fromProperties (txHashBuf, txOutNum, script, nSequence) {\n    this.fromObject({ txHashBuf, txOutNum, nSequence })\n    this.setScript(script)\n    return this\n  }\n\n  static fromProperties (txHashBuf, txOutNum, script, nSequence) {\n    return new this().fromProperties(txHashBuf, txOutNum, script, nSequence)\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      txHashBuf:\n          typeof json.txHashBuf !== 'undefined'\n            ? Buffer.from(json.txHashBuf, 'hex')\n            : undefined,\n      txOutNum: json.txOutNum,\n      scriptVi:\n          typeof json.scriptVi !== 'undefined'\n            ? VarInt.fromJSON(json.scriptVi)\n            : undefined,\n      script:\n          typeof json.script !== 'undefined'\n            ? Script.fromJSON(json.script)\n            : undefined,\n      nSequence: json.nSequence\n    })\n    return this\n  }\n\n  toJSON () {\n    return {\n      txHashBuf:\n          typeof this.txHashBuf !== 'undefined'\n            ? this.txHashBuf.toString('hex')\n            : undefined,\n      txOutNum: this.txOutNum,\n      scriptVi:\n          typeof this.scriptVi !== 'undefined'\n            ? this.scriptVi.toJSON()\n            : undefined,\n      script:\n          typeof this.script !== 'undefined' ? this.script.toJSON() : undefined,\n      nSequence: this.nSequence\n    }\n  }\n\n  fromBr (br) {\n    this.txHashBuf = br.read(32)\n    this.txOutNum = br.readUInt32LE()\n    this.scriptVi = VarInt.fromBuffer(br.readVarIntBuf())\n    this.script = Script.fromBuffer(br.read(this.scriptVi.toNumber()))\n    this.nSequence = br.readUInt32LE()\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.write(this.txHashBuf)\n    bw.writeUInt32LE(this.txOutNum)\n    bw.write(this.scriptVi.buf)\n    bw.write(this.script.toBuffer())\n    bw.writeUInt32LE(this.nSequence)\n    return bw\n  }\n\n  /**\n     * Generate txIn with blank signatures from a txOut and its\n     * txHashBuf+txOutNum. A \"blank\" signature is just an OP_0. The pubKey also\n     * defaults to blank but can be substituted with the real public key if you\n     * know what it is.\n     */\n  fromPubKeyHashTxOut (txHashBuf, txOutNum, txOut, pubKey) {\n    const script = new Script()\n    if (txOut.script.isPubKeyHashOut()) {\n      script.writeOpCode(OpCode.OP_0) // blank signature\n      if (pubKey) {\n        script.writeBuffer(pubKey.toBuffer())\n      } else {\n        script.writeOpCode(OpCode.OP_0)\n      }\n    } else {\n      throw new Error('txOut must be of type pubKeyHash')\n    }\n    this.txHashBuf = txHashBuf\n    this.txOutNum = txOutNum\n    this.setScript(script)\n    return this\n  }\n\n  hasNullInput () {\n    const hex = this.txHashBuf.toString('hex')\n    if (\n      hex ===\n          '0000000000000000000000000000000000000000000000000000000000000000' &&\n        this.txOutNum === 0xffffffff\n    ) {\n      return true\n    }\n    return false\n  }\n\n  /**\n     * Analagous to bitcoind's SetNull in COutPoint\n     */\n  setNullInput () {\n    this.txHashBuf = Buffer.alloc(32)\n    this.txHashBuf.fill(0)\n    this.txOutNum = 0xffffffff // -1 cast to unsigned int\n  }\n}\n\n/* Interpret sequence numbers as relative lock-time constraints. */\nTxIn.LOCKTIME_VERIFY_SEQUENCE = 1 << 0\n\n/* Setting nSequence to this value for every input in a transaction disables\n   * nLockTime. */\nTxIn.SEQUENCE_FINAL = 0xffffffff\n\n/* Below flags apply in the context of Bip 68 */\n/* If this flag set, txIn.nSequence is NOT interpreted as a relative lock-time.\n   * */\nTxIn.SEQUENCE_LOCKTIME_DISABLE_FLAG = 1 << 31\n\n/* If txIn.nSequence encodes a relative lock-time and this flag is set, the\n   * relative lock-time has units of 512 seconds, otherwise it specifies blocks\n   * with a granularity of 1. */\nTxIn.SEQUENCE_LOCKTIME_TYPE_FLAG = 1 << 22\n\n/* If txIn.nSequence encodes a relative lock-time, this mask is applied to\n   * extract that lock-time from the sequence field. */\nTxIn.SEQUENCE_LOCKTIME_MASK = 0x0000ffff\n\n/* In order to use the same number of bits to encode roughly the same\n   * wall-clock duration, and because blocks are naturally limited to occur\n   * every 600s on average, the minimum granularity for time-based relative\n   * lock-time is fixed at 512 seconds.  Converting from CTxIn::nSequence to\n   * seconds is performed by multiplying by 512 = 2^9, or equivalently\n   * shifting up by 9 bits. */\nTxIn.SEQUENCE_LOCKTIME_GRANULARITY = 9\n\nexport { TxIn }\n","/**\n * Transaction Output\n * ==================\n *\n * An output to a transaction. The way you normally want to make one is with\n * new TxOut(valueBn, script) (i.e., just as with TxIn, you can leave out the\n * scriptVi, since it can be computed automatically.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { Script } from './script'\nimport { Struct } from './struct'\nimport { VarInt } from './var-int'\n\nclass TxOut extends Struct {\n  constructor (valueBn, scriptVi, script) {\n    super({ valueBn, scriptVi, script })\n  }\n\n  setScript (script) {\n    this.scriptVi = VarInt.fromNumber(script.toBuffer().length)\n    this.script = script\n    return this\n  }\n\n  fromProperties (valueBn, script) {\n    this.fromObject({ valueBn })\n    this.setScript(script)\n    return this\n  }\n\n  static fromProperties (valueBn, script) {\n    return new this().fromProperties(valueBn, script)\n  }\n\n  fromJSON (json) {\n    this.fromObject({\n      valueBn: new Bn().fromJSON(json.valueBn),\n      scriptVi: new VarInt().fromJSON(json.scriptVi),\n      script: new Script().fromJSON(json.script)\n    })\n    return this\n  }\n\n  toJSON () {\n    return {\n      valueBn: this.valueBn.toJSON(),\n      scriptVi: this.scriptVi.toJSON(),\n      script: this.script.toJSON()\n    }\n  }\n\n  fromBr (br) {\n    this.valueBn = br.readUInt64LEBn()\n    this.scriptVi = VarInt.fromNumber(br.readVarIntNum())\n    this.script = new Script().fromBuffer(br.read(this.scriptVi.toNumber()))\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeUInt64LEBn(this.valueBn)\n    bw.write(this.scriptVi.buf)\n    bw.write(this.script.toBuffer())\n    return bw\n  }\n}\n\nexport { TxOut }\n","/**\n * Transaction\n * ===========\n *\n * A bitcoin transaction.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { Ecdsa } from './ecdsa'\nimport { Hash } from './hash'\nimport { HashCache } from './hash-cache'\nimport { Script } from './script'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { TxIn } from './tx-in'\nimport { TxOut } from './tx-out'\nimport { VarInt } from './var-int'\nimport { Workers } from './workers'\n\nclass Tx extends Struct {\n  constructor (\n    versionBytesNum = 1,\n    txInsVi = VarInt.fromNumber(0),\n    txIns = [],\n    txOutsVi = VarInt.fromNumber(0),\n    txOuts = [],\n    nLockTime = 0\n  ) {\n    super({ versionBytesNum, txInsVi, txIns, txOutsVi, txOuts, nLockTime })\n  }\n\n  fromJSON (json) {\n    const txIns = []\n    json.txIns.forEach(function (txIn) {\n      txIns.push(new TxIn().fromJSON(txIn))\n    })\n    const txOuts = []\n    json.txOuts.forEach(function (txOut) {\n      txOuts.push(new TxOut().fromJSON(txOut))\n    })\n    this.fromObject({\n      versionBytesNum: json.versionBytesNum,\n      txInsVi: new VarInt().fromJSON(json.txInsVi),\n      txIns: txIns,\n      txOutsVi: new VarInt().fromJSON(json.txOutsVi),\n      txOuts: txOuts,\n      nLockTime: json.nLockTime\n    })\n    return this\n  }\n\n  toJSON () {\n    const txIns = []\n    this.txIns.forEach(function (txIn) {\n      txIns.push(txIn.toJSON())\n    })\n    const txOuts = []\n    this.txOuts.forEach(function (txOut) {\n      txOuts.push(txOut.toJSON())\n    })\n    return {\n      versionBytesNum: this.versionBytesNum,\n      txInsVi: this.txInsVi.toJSON(),\n      txIns: txIns,\n      txOutsVi: this.txOutsVi.toJSON(),\n      txOuts: txOuts,\n      nLockTime: this.nLockTime\n    }\n  }\n\n  fromBr (br) {\n    this.versionBytesNum = br.readUInt32LE()\n    this.txInsVi = new VarInt(br.readVarIntBuf())\n    const txInsNum = this.txInsVi.toNumber()\n    this.txIns = []\n    for (let i = 0; i < txInsNum; i++) {\n      this.txIns.push(new TxIn().fromBr(br))\n    }\n    this.txOutsVi = new VarInt(br.readVarIntBuf())\n    const txOutsNum = this.txOutsVi.toNumber()\n    this.txOuts = []\n    for (let i = 0; i < txOutsNum; i++) {\n      this.txOuts.push(new TxOut().fromBr(br))\n    }\n    this.nLockTime = br.readUInt32LE()\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.writeUInt32LE(this.versionBytesNum)\n    bw.write(this.txInsVi.buf)\n    for (let i = 0; i < this.txIns.length; i++) {\n      this.txIns[i].toBw(bw)\n    }\n    bw.write(this.txOutsVi.buf)\n    for (let i = 0; i < this.txOuts.length; i++) {\n      this.txOuts[i].toBw(bw)\n    }\n    bw.writeUInt32LE(this.nLockTime)\n    return bw\n  }\n\n  // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n  hashPrevouts () {\n    const bw = new Bw()\n    for (const i in this.txIns) {\n      const txIn = this.txIns[i]\n      bw.write(txIn.txHashBuf) // outpoint (1/2)\n      bw.writeUInt32LE(txIn.txOutNum) // outpoint (2/2)\n    }\n    return Hash.sha256Sha256(bw.toBuffer())\n  }\n\n  hashSequence () {\n    const bw = new Bw()\n    for (const i in this.txIns) {\n      const txIn = this.txIns[i]\n      bw.writeUInt32LE(txIn.nSequence)\n    }\n    return Hash.sha256Sha256(bw.toBuffer())\n  }\n\n  hashOutputs () {\n    const bw = new Bw()\n    for (const i in this.txOuts) {\n      const txOut = this.txOuts[i]\n      bw.write(txOut.toBuffer())\n    }\n    return Hash.sha256Sha256(bw.toBuffer())\n  }\n\n  /**\n   * For a normal transaction, subScript is usually the scriptPubKey. For a\n   * p2sh transaction, subScript is usually the redeemScript. If you're not\n   * normal because you're using OP_CODESEPARATORs, you know what to do.\n   */\n  sighash (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = new HashCache()) {\n    const buf = this.sighashPreimage(nHashType, nIn, subScript, valueBn, flags, hashCache)\n    if (buf.compare(Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')) === 0) {\n      return buf\n    }\n    return new Br(Hash.sha256Sha256(buf)).readReverse()\n  }\n\n  async asyncSighash (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = {}) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sighash', [\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return workersResult.resbuf\n  }\n\n  sighashPreimage (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = new HashCache()) {\n    // start with UAHF part (Bitcoin SV)\n    // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n    if (\n      nHashType & Sig.SIGHASH_FORKID &&\n      flags & Tx.SCRIPT_ENABLE_SIGHASH_FORKID\n    ) {\n      let hashPrevouts = Buffer.alloc(32, 0)\n      let hashSequence = Buffer.alloc(32, 0)\n      let hashOutputs = Buffer.alloc(32, 0)\n\n      if (!(nHashType & Sig.SIGHASH_ANYONECANPAY)) {\n        hashPrevouts = hashCache.prevoutsHashBuf ? hashCache.prevoutsHashBuf : hashCache.prevoutsHashBuf = this.hashPrevouts()\n      }\n\n      if (\n        !(nHashType & Sig.SIGHASH_ANYONECANPAY) &&\n        (nHashType & 0x1f) !== Sig.SIGHASH_SINGLE &&\n        (nHashType & 0x1f) !== Sig.SIGHASH_NONE\n      ) {\n        hashSequence = hashCache.sequenceHashBuf ? hashCache.sequenceHashBuf : hashCache.sequenceHashBuf = this.hashSequence()\n      }\n\n      if (\n        (nHashType & 0x1f) !== Sig.SIGHASH_SINGLE &&\n        (nHashType & 0x1f) !== Sig.SIGHASH_NONE\n      ) {\n        hashOutputs = hashCache.outputsHashBuf ? hashCache.outputsHashBuf : hashCache.outputsHashBuf = this.hashOutputs()\n      } else if (\n        (nHashType & 0x1f) === Sig.SIGHASH_SINGLE &&\n        nIn < this.txOuts.length\n      ) {\n        hashOutputs = Hash.sha256Sha256(this.txOuts[nIn].toBuffer())\n      }\n\n      const bw = new Bw()\n      bw.writeUInt32LE(this.versionBytesNum)\n      bw.write(hashPrevouts)\n      bw.write(hashSequence)\n      bw.write(this.txIns[nIn].txHashBuf) // outpoint (1/2)\n      bw.writeUInt32LE(this.txIns[nIn].txOutNum) // outpoint (2/2)\n      bw.writeVarIntNum(subScript.toBuffer().length)\n      bw.write(subScript.toBuffer())\n      bw.writeUInt64LEBn(valueBn)\n      bw.writeUInt32LE(this.txIns[nIn].nSequence)\n      bw.write(hashOutputs)\n      bw.writeUInt32LE(this.nLockTime)\n      bw.writeUInt32LE(nHashType >>> 0)\n\n      return bw.toBuffer()\n    }\n\n    // original bitcoin code follows - not related to UAHF (Bitcoin SV)\n    const txcopy = this.cloneByBuffer()\n\n    subScript = new Script().fromBuffer(subScript.toBuffer())\n    subScript.removeCodeseparators()\n\n    for (let i = 0; i < txcopy.txIns.length; i++) {\n      txcopy.txIns[i] = TxIn.fromBuffer(txcopy.txIns[i].toBuffer()).setScript(\n        new Script()\n      )\n    }\n\n    txcopy.txIns[nIn] = TxIn.fromBuffer(\n      txcopy.txIns[nIn].toBuffer()\n    ).setScript(subScript)\n\n    if ((nHashType & 31) === Sig.SIGHASH_NONE) {\n      txcopy.txOuts.length = 0\n      txcopy.txOutsVi = VarInt.fromNumber(0)\n\n      for (let i = 0; i < txcopy.txIns.length; i++) {\n        if (i !== nIn) {\n          txcopy.txIns[i].nSequence = 0\n        }\n      }\n    } else if ((nHashType & 31) === Sig.SIGHASH_SINGLE) {\n      // The SIGHASH_SINGLE bug.\n      // https://bitcointalk.org/index.php?topic=260595.0\n      if (nIn > txcopy.txOuts.length - 1) {\n        return Buffer.from(\n          '0000000000000000000000000000000000000000000000000000000000000001',\n          'hex'\n        )\n      }\n\n      txcopy.txOuts.length = nIn + 1\n      txcopy.txOutsVi = VarInt.fromNumber(nIn + 1)\n\n      for (let i = 0; i < txcopy.txOuts.length; i++) {\n        if (i < nIn) {\n          txcopy.txOuts[i] = TxOut.fromProperties(\n            new Bn().fromBuffer(Buffer.from('ffffffffffffffff', 'hex')),\n            new Script()\n          )\n        }\n      }\n\n      for (let i = 0; i < txcopy.txIns.length; i++) {\n        if (i !== nIn) {\n          txcopy.txIns[i].nSequence = 0\n        }\n      }\n    }\n    // else, SIGHASH_ALL\n\n    if (nHashType & Sig.SIGHASH_ANYONECANPAY) {\n      txcopy.txIns[0] = txcopy.txIns[nIn]\n      txcopy.txIns.length = 1\n      txcopy.txInsVi = VarInt.fromNumber(1)\n    }\n\n    const buf = new Bw()\n      .write(txcopy.toBuffer())\n      .writeInt32LE(nHashType)\n      .toBuffer()\n    return buf\n  }\n\n  async asyncSighashPreimage (nHashType, nIn, subScript, valueBn, flags = 0, hashCache = {}) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sighashPreimage', [\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return workersResult.resbuf\n  }\n\n  // This function returns a signature but does not update any inputs\n  sign (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, valueBn, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID, hashCache = {}) {\n    const hashBuf = this.sighash(nHashType, nIn, subScript, valueBn, flags, hashCache)\n    const sig = Ecdsa.sign(hashBuf, keyPair, 'little').fromObject({\n      nHashType: nHashType\n    })\n    return sig\n  }\n\n  async asyncSign (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, valueBn, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID, hashCache = {}) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'sign', [\n      keyPair,\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return new Sig().fromFastBuffer(workersResult.resbuf)\n  }\n\n  // This function takes a signature as input and does not parse any inputs\n  verify (\n    sig,\n    pubKey,\n    nIn,\n    subScript,\n    enforceLowS = false,\n    valueBn,\n    flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID,\n    hashCache = {}\n  ) {\n    const hashBuf = this.sighash(sig.nHashType, nIn, subScript, valueBn, flags, hashCache)\n    return Ecdsa.verify(hashBuf, sig, pubKey, 'little', enforceLowS)\n  }\n\n  async asyncVerify (\n    sig,\n    pubKey,\n    nIn,\n    subScript,\n    enforceLowS = false,\n    valueBn,\n    flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID,\n    hashCache = {}\n  ) {\n    const workersResult = await Workers.asyncObjectMethod(this, 'verify', [\n      sig,\n      pubKey,\n      nIn,\n      subScript,\n      enforceLowS,\n      valueBn,\n      flags,\n      hashCache\n    ])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  hash () {\n    return Hash.sha256Sha256(this.toBuffer())\n  }\n\n  async asyncHash () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'hash', [])\n    return workersResult.resbuf\n  }\n\n  id () {\n    return new Br(this.hash()).readReverse().toString('hex')\n  }\n\n  async asyncId () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'id', [])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  addTxIn (txHashBuf, txOutNum, script, nSequence) {\n    let txIn\n    if (txHashBuf instanceof TxIn) {\n      txIn = txHashBuf\n    } else {\n      txIn = new TxIn()\n        .fromObject({ txHashBuf, txOutNum, nSequence })\n        .setScript(script)\n    }\n    this.txIns.push(txIn)\n    this.txInsVi = VarInt.fromNumber(this.txInsVi.toNumber() + 1)\n    return this\n  }\n\n  addTxOut (valueBn, script) {\n    let txOut\n    if (valueBn instanceof TxOut) {\n      txOut = valueBn\n    } else {\n      txOut = new TxOut().fromObject({ valueBn }).setScript(script)\n    }\n    this.txOuts.push(txOut)\n    this.txOutsVi = VarInt.fromNumber(this.txOutsVi.toNumber() + 1)\n    return this\n  }\n\n  /**\n   * Analagous to bitcoind's IsCoinBase function in transaction.h\n   */\n  isCoinbase () {\n    return this.txIns.length === 1 && this.txIns[0].hasNullInput()\n  }\n\n  /**\n   * BIP 69 sorting. Be sure to sign after sorting.\n   */\n  sort () {\n    this.txIns.sort((first, second) => {\n      return new Br(first.txHashBuf).readReverse().compare(new Br(second.txHashBuf).readReverse()) ||\n        first.txOutNum - second.txOutNum\n    })\n\n    this.txOuts.sort((first, second) => {\n      return first.valueBn.sub(second.valueBn).toNumber() ||\n        first.script.toBuffer().compare(second.script.toBuffer())\n    })\n\n    return this\n  }\n}\n\nTx.MAX_MONEY = 21000000 * 1e8\n\n// This is defined on Interp, but Tx cannot depend on Interp - must redefine here\nTx.SCRIPT_ENABLE_SIGHASH_FORKID = 1 << 16\n\nexport { Tx }\n","/**\n * Block\n * =====\n *\n * A block, of course, is a collection of transactions. This class is somewhat\n * incompconste at the moment. In the future, it should support the ability to\n * check to see if a transaction is in a block (thanks to the magic of merkle\n * trees). You will probably never use Yours Bitcoin to create a block, since almost\n * everyone will use bitcoind for that. As such, the primary way to use this is\n * new Block().fromBuffer(buf), which will parse the block and prepare its insides\n * for you to inspect.\n */\n'use strict'\n\nimport { Br } from './br'\nimport { Bw } from './bw'\nimport { BlockHeader } from './block-header'\nimport { Hash } from './hash'\nimport { Merkle } from './merkle'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { VarInt } from './var-int'\nimport { Workers } from './workers'\n\nclass Block extends Struct {\n  constructor (blockHeader, txsVi, txs) {\n    super({ blockHeader, txsVi, txs })\n  }\n\n  fromJSON (json) {\n    const txs = []\n    json.txs.forEach(function (tx) {\n      txs.push(new Tx().fromJSON(tx))\n    })\n    this.fromObject({\n      blockHeader: new BlockHeader().fromJSON(json.blockHeader),\n      txsVi: new VarInt().fromJSON(json.txsVi),\n      txs: txs\n    })\n    return this\n  }\n\n  toJSON () {\n    const txs = []\n    this.txs.forEach(function (tx) {\n      txs.push(tx.toJSON())\n    })\n    return {\n      blockHeader: this.blockHeader.toJSON(),\n      txsVi: this.txsVi.toJSON(),\n      txs: txs\n    }\n  }\n\n  fromBr (br) {\n    this.blockHeader = new BlockHeader().fromBr(br)\n    this.txsVi = new VarInt(br.readVarIntBuf())\n    const txsNum = this.txsVi.toNumber()\n    this.txs = []\n    for (let i = 0; i < txsNum; i++) {\n      this.txs.push(new Tx().fromBr(br))\n    }\n    return this\n  }\n\n  toBw (bw) {\n    if (!bw) {\n      bw = new Bw()\n    }\n    bw.write(this.blockHeader.toBuffer())\n    bw.write(this.txsVi.buf)\n    const txsNum = this.txsVi.toNumber()\n    for (let i = 0; i < txsNum; i++) {\n      this.txs[i].toBw(bw)\n    }\n    return bw\n  }\n\n  hash () {\n    return Hash.sha256Sha256(this.blockHeader.toBuffer())\n  }\n\n  async asyncHash () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'hash', [])\n    return workersResult.resbuf\n  }\n\n  id () {\n    return new Br(this.hash()).readReverse().toString('hex')\n  }\n\n  async asyncId () {\n    const workersResult = await Workers.asyncObjectMethod(this, 'id', [])\n    return JSON.parse(workersResult.resbuf.toString())\n  }\n\n  verifyMerkleRoot () {\n    const txsbufs = this.txs.map(tx => tx.toBuffer())\n    const merkleRootBuf = Merkle.fromBuffers(txsbufs).hash()\n    return Buffer.compare(merkleRootBuf, this.blockHeader.merkleRootBuf)\n  }\n\n  /**\n   * Sometimes we don't want to parse an entire block into memory. Instead, we\n   * simply want to iterate through all transactions in the block. That is what\n   * this method is for. This method returns an efficient iterator which can be\n   * used in a `for (tx of txs)` construct that returns each tx one at a time\n   * without first parsing all of them into memory.\n   *\n   * @param {Buffer} blockBuf A buffer of a block.\n   */\n  static iterateTxs (blockBuf) {\n    const br = new Br(blockBuf)\n    const blockHeader = new BlockHeader().fromBr(br)\n    const txsVi = new VarInt(br.readVarIntBuf())\n    const txsNum = txsVi.toNumber()\n    return {\n      blockHeader,\n      txsVi,\n      txsNum,\n      * [Symbol.iterator] () {\n        for (let i = 0; i < txsNum; i++) {\n          yield new Tx().fromBr(br)\n        }\n      }\n    }\n  }\n}\n\nBlock.MAX_BLOCK_SIZE = 1000000\n\nexport { Block }\n","/**\n * Script Interpreter\n * ==================\n *\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubKey. To validate\n * an input, the ScriptSig is executed, then with the same stack, the\n * scriptPubKey from the output corresponding to that input is run. The primary\n * way to use this class is via the verify function:\n *\n * new Interp().verify( ... )\n *\n * In some ways, the script interpreter is one of the most poorly architected\n * components of Yours Bitcoin because of the giant switch statement in step(). But\n * that is deliberately so to make it similar to bitcoin core, and thus easier\n * to audit.\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Bw } from './bw'\nimport { cmp } from './cmp'\nimport { Hash } from './hash'\nimport { OpCode } from './op-code'\nimport { PubKey } from './pub-key'\nimport { Script } from './script'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { TxIn } from './tx-in'\n\n  class Interp extends Struct {\n    constructor (\n      script,\n      tx,\n      nIn,\n      stack = [],\n      altStack = [],\n      pc = 0,\n      pBeginCodeHash = 0,\n      nOpCount = 0,\n      ifStack = [],\n      errStr = '',\n      flags = Interp.defaultFlags,\n      valueBn = new Bn(0)\n    ) {\n      super({\n        script,\n        tx,\n        nIn,\n        stack,\n        altStack,\n        pc,\n        pBeginCodeHash,\n        nOpCount,\n        ifStack,\n        errStr,\n        flags,\n        valueBn\n      })\n    }\n\n    initialize () {\n      this.script = new Script()\n      this.stack = []\n      this.altStack = []\n      this.pc = 0\n      this.pBeginCodeHash = 0\n      this.nOpCount = 0\n      this.ifStack = []\n      this.errStr = ''\n      this.flags = Interp.defaultFlags\n      return this\n    }\n\n    fromJSON (json) {\n      this.fromJSONNoTx(json)\n      this.tx = json.tx ? new Tx().fromJSON(json.tx) : undefined\n      return this\n    }\n    /**\n     * Convert JSON containing everything but the tx to an interp object.\n     */\n    fromJSONNoTx (json) {\n      this.fromObject({\n        script:\n          json.script !== undefined\n            ? new Script().fromJSON(json.script)\n            : undefined,\n        nIn: json.nIn\n      })\n      this.stack = []\n      json.stack.forEach(\n        function (hex) {\n          this.stack.push(Buffer.from(hex, 'hex'))\n        }.bind(this)\n      )\n      this.altStack = []\n      json.altStack.forEach(\n        function (hex) {\n          this.altStack.push(Buffer.from(hex, 'hex'))\n        }.bind(this)\n      )\n      this.fromObject({\n        pc: json.pc,\n        pBeginCodeHash: json.pBeginCodeHash,\n        nOpCount: json.nOpCount,\n        ifStack: json.ifStack,\n        errStr: json.errStr,\n        flags: json.flags\n      })\n      return this\n    }\n\n    fromBr (br) {\n      let jsonNoTxBufLEn = br.readVarIntNum()\n      let jsonNoTxBuf = br.read(jsonNoTxBufLEn)\n      this.fromJSONNoTx(JSON.parse(jsonNoTxBuf.toString()))\n      let txbuflen = br.readVarIntNum()\n      if (txbuflen > 0) {\n        let txbuf = br.read(txbuflen)\n        this.tx = new Tx().fromFastBuffer(txbuf)\n      }\n      return this\n    }\n\n    toJSON () {\n      let json = this.toJSONNoTx()\n      json.tx = this.tx ? this.tx.toJSON() : undefined\n      return json\n    }\n\n    /**\n     * Convert everything but the tx to JSON.\n     */\n    toJSONNoTx () {\n      let stack = []\n      this.stack.forEach(function (buf) {\n        stack.push(buf.toString('hex'))\n      })\n      let altStack = []\n      this.altStack.forEach(function (buf) {\n        altStack.push(buf.toString('hex'))\n      })\n      return {\n        script: this.script ? this.script.toJSON() : undefined,\n        nIn: this.nIn,\n        stack: stack,\n        altStack: altStack,\n        pc: this.pc,\n        pBeginCodeHash: this.pBeginCodeHash,\n        nOpCount: this.nOpCount,\n        ifStack: this.ifStack,\n        errStr: this.errStr,\n        flags: this.flags\n      }\n    }\n\n    toBw (bw) {\n      if (!bw) {\n        bw = new Bw()\n      }\n      let jsonNoTxBuf = Buffer.from(JSON.stringify(this.toJSONNoTx()))\n      bw.writeVarIntNum(jsonNoTxBuf.length)\n      bw.write(jsonNoTxBuf)\n      if (this.tx) {\n        let txbuf = this.tx.toFastBuffer()\n        bw.writeVarIntNum(txbuf.length)\n        bw.write(txbuf)\n      } else {\n        bw.writeVarIntNum(0)\n      }\n      return bw\n    }\n\n    /**\n     * In order to make auduting the script interpreter easier, we use the same\n     * constants as bitcoin core, including the flags, which customize the\n     * operation of the interpreter.\n     */\n    static getFlags (flagstr) {\n      let flags = 0\n      if (flagstr.indexOf('NONE') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_NONE\n      }\n      if (flagstr.indexOf('P2SH') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_P2SH\n      }\n      if (flagstr.indexOf('STRICTENC') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_STRICTENC\n      }\n      if (flagstr.indexOf('DERSIG') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_DERSIG\n      }\n      if (flagstr.indexOf('LOW_S') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_LOW_S\n      }\n      if (flagstr.indexOf('NULLDUMMY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_NULLDUMMY\n      }\n      if (flagstr.indexOf('SIGPUSHONLY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_SIGPUSHONLY\n      }\n      if (flagstr.indexOf('MINIMALDATA') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_MINIMALDATA\n      }\n      if (flagstr.indexOf('DISCOURAGE_UPGRADABLE_NOPS') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS\n      }\n      if (flagstr.indexOf('CLEANSTACK') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_CLEANSTACK\n      }\n      if (flagstr.indexOf('CHECKLOCKTIMEVERIFY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY\n      }\n      if (flagstr.indexOf('CHECKSEQUENCEVERIFY') !== -1) {\n        flags = flags | Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY\n      }\n      if (flagstr.indexOf('SIGHASH_FORKID') !== -1) {\n        flags = flags | Interp.SCRIPT_ENABLE_SIGHASH_FORKID\n      }\n      return flags\n    }\n\n    static castToBool (buf) {\n      for (let i = 0; i < buf.length; i++) {\n        if (buf[i] !== 0) {\n          // can be negative zero\n          if (i === buf.length - 1 && buf[i] === 0x80) {\n            return false\n          }\n          return true\n        }\n      }\n      return false\n    }\n\n    /**\n     * Translated from bitcoin core's CheckSigEncoding\n     */\n    checkSigEncoding (buf) {\n      // Empty signature. Not strictly DER encoded, but allowed to provide a\n      // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n      if (buf.length === 0) {\n        return true\n      }\n      if (\n        (this.flags &\n          (Interp.SCRIPT_VERIFY_DERSIG |\n            Interp.SCRIPT_VERIFY_LOW_S |\n            Interp.SCRIPT_VERIFY_STRICTENC)) !==\n          0 &&\n        !Sig.IsTxDer(buf)\n      ) {\n        this.errStr = 'SCRIPT_ERR_SIG_DER'\n        return false\n      } else if ((this.flags & Interp.SCRIPT_VERIFY_LOW_S) !== 0) {\n        let sig = new Sig().fromTxFormat(buf)\n        if (!sig.hasLowS()) {\n          this.errStr = 'SCRIPT_ERR_SIG_DER'\n          return false\n        }\n      } else if ((this.flags & Interp.SCRIPT_VERIFY_STRICTENC) !== 0) {\n        let sig = new Sig().fromTxFormat(buf)\n        if (!sig.hasDefinedHashType()) {\n          this.errStr = 'SCRIPT_ERR_SIG_HASHTYPE'\n          return false\n        }\n      }\n      return true\n    }\n\n    /**\n     * Translated from bitcoin core's CheckPubKeyEncoding\n     */\n    checkPubKeyEncoding (buf) {\n      if (\n        (this.flags & Interp.SCRIPT_VERIFY_STRICTENC) !== 0 &&\n        !PubKey.isCompressedOrUncompressed(buf)\n      ) {\n        this.errStr = 'SCRIPT_ERR_PUBKEYTYPE'\n        return false\n      }\n      return true\n    }\n\n    /**\n     * Translated from bitcoin core's CheckLockTime\n     */\n    checkLockTime (nLockTime) {\n      // There are two kinds of nLockTime: lock-by-blockheight\n      // and lock-by-blocktime, distinguished by whether\n      // nLockTime < LOCKTIME_THRESHOLD.\n      //\n      // We want to compare apples to apples, so fail the script\n      // unless the type of nLockTime being tested is the same as\n      // the nLockTime in the transaction.\n      if (\n        !(\n          (this.tx.nLockTime < Interp.LOCKTIME_THRESHOLD &&\n            nLockTime < Interp.LOCKTIME_THRESHOLD) ||\n          (this.tx.nLockTime >= Interp.LOCKTIME_THRESHOLD &&\n            nLockTime >= Interp.LOCKTIME_THRESHOLD)\n        )\n      ) {\n        return false\n      }\n\n      // Now that we know we're comparing apples-to-apples, the\n      // comparison is a simple numeric one.\n      if (nLockTime > this.tx.nLockTime) {\n        return false\n      }\n\n      // Finally the nLockTime feature can be disabled and thus\n      // CHECKLOCKTIMEVERIFY bypassed if every txIn has been\n      // finalized by setting nSequence to maxint. The\n      // transaction would be allowed into the blockchain, making\n      // the opCode ineffective.\n      //\n      // Testing if this vin is not final is sufficient to\n      // prevent this condition. Alternatively we could test all\n      // inputs, but testing just this input minimizes the data\n      // required to prove correct CHECKLOCKTIMEVERIFY execution.\n      if (TxIn.SEQUENCE_FINAL === this.tx.txIns[this.nIn].nSequence) {\n        return false\n      }\n\n      return true\n    }\n\n    /**\n     * Translated from bitcoin core's CheckSequence.\n     */\n    checkSequence (nSequence) {\n      // Relative lock times are supported by comparing the passed\n      // in operand to the sequence number of the input.\n      let txToSequence = this.tx.txIns[this.nIn].nSequence\n\n      // Fail if the transaction's version number is not set high\n      // enough to trigger Bip 68 rules.\n      if (this.tx.versionBytesNum < 2) {\n        return false\n      }\n\n      // Sequence numbers with their most significant bit set are not\n      // consensus constrained. Testing that the transaction's sequence\n      // number do not have this bit set prevents using this property\n      // to get around a CHECKSEQUENCEVERIFY check.\n      if (txToSequence & TxIn.SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n        return false\n      }\n\n      // Mask off any bits that do not have consensus-enforced meaning\n      // before doing the integer comparisons\n      let nLockTimeMask =\n        TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG | TxIn.SEQUENCE_LOCKTIME_MASK\n      let txToSequenceMasked = txToSequence & nLockTimeMask\n      let nSequenceMasked = nSequence & nLockTimeMask\n\n      // There are two kinds of nSequence: lock-by-blockheight\n      // and lock-by-blocktime, distinguished by whether\n      // nSequenceMasked < CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG.\n      //\n      // We want to compare apples to apples, so fail the script\n      // unless the type of nSequenceMasked being tested is the same as\n      // the nSequenceMasked in the transaction.\n      if (\n        !(\n          (txToSequenceMasked < TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG &&\n            nSequenceMasked < TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG) ||\n          (txToSequenceMasked >= TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG &&\n            nSequenceMasked >= TxIn.SEQUENCE_LOCKTIME_TYPE_FLAG)\n        )\n      ) {\n        return false\n      }\n\n      // Now that we know we're comparing apples-to-apples, the\n      // comparison is a simple numeric one.\n      if (nSequenceMasked > txToSequenceMasked) {\n        return false\n      }\n\n      return true\n    }\n\n    /**\n     * Based on bitcoin core's EvalScript function, with the inner loop moved to\n     * Interp.prototype.step()\n     * bitcoin core commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n     */\n    * eval () {\n      if (this.script.toBuffer().length > 10000) {\n        this.errStr = 'SCRIPT_ERR_SCRIPT_SIZE'\n        yield false\n      }\n\n      try {\n        while (this.pc < this.script.chunks.length) {\n          let fSuccess = this.step()\n          if (!fSuccess) {\n            yield false\n          } else {\n            yield fSuccess\n          }\n        }\n\n        // Size limits\n        if (this.stack.length + this.altStack.length > 1000) {\n          this.errStr = 'SCRIPT_ERR_STACK_SIZE'\n          yield false\n        }\n      } catch (e) {\n        this.errStr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e\n        yield false\n      }\n\n      if (this.ifStack.length > 0) {\n        this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n        yield false\n      }\n\n      yield true\n    }\n\n    /**\n     * Based on the inner loop of bitcoin core's EvalScript function\n     */\n    step () {\n      let fRequireMinimal =\n        (this.flags & Interp.SCRIPT_VERIFY_MINIMALDATA) !== 0\n\n      // bool fExec = !count(ifStack.begin(), ifStack.end(), false)\n      let fExec = !(this.ifStack.indexOf(false) + 1)\n\n      //\n      // Read instruction\n      //\n      let chunk = this.script.chunks[this.pc]\n      this.pc++\n      let opCodeNum = chunk.opCodeNum\n      if (opCodeNum === undefined) {\n        this.errStr = 'SCRIPT_ERR_BAD_OPCODE'\n        return false\n      }\n      if (chunk.buf && chunk.buf.length > Interp.MAX_SCRIPT_ELEMENT_SIZE) {\n        this.errStr = 'SCRIPT_ERR_PUSH_SIZE'\n        return false\n      }\n\n      // Note how OpCode.OP_RESERVED does not count towards the opCode limit.\n      if (opCodeNum > OpCode.OP_16 && ++this.nOpCount > 201) {\n        this.errStr = 'SCRIPT_ERR_OP_COUNT'\n        return false\n      }\n\n      if (\n        opCodeNum === OpCode.OP_LEFT ||\n        opCodeNum === OpCode.OP_RIGHT ||\n        opCodeNum === OpCode.OP_2MUL ||\n        opCodeNum === OpCode.OP_2DIV\n      ) {\n        this.errStr = 'SCRIPT_ERR_DISABLED_OPCODE'\n        return false\n      }\n\n      if (fExec && opCodeNum >= 0 && opCodeNum <= OpCode.OP_PUSHDATA4) {\n        if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n          this.errStr = 'SCRIPT_ERR_MINIMALDATA'\n          return false\n        }\n        if (!chunk.buf) {\n          this.stack.push(Interp.false)\n        } else if (chunk.len !== chunk.buf.length) {\n          throw new Error('LEngth of push value not equal to length of data')\n        } else {\n          this.stack.push(chunk.buf)\n        }\n      } else if (\n        fExec ||\n        (OpCode.OP_IF <= opCodeNum && opCodeNum <= OpCode.OP_ENDIF)\n      ) {\n        switch (opCodeNum) {\n          //\n          // Push value\n          //\n          case OpCode.OP_1NEGATE:\n          case OpCode.OP_1:\n          case OpCode.OP_2:\n          case OpCode.OP_3:\n          case OpCode.OP_4:\n          case OpCode.OP_5:\n          case OpCode.OP_6:\n          case OpCode.OP_7:\n          case OpCode.OP_8:\n          case OpCode.OP_9:\n          case OpCode.OP_10:\n          case OpCode.OP_11:\n          case OpCode.OP_12:\n          case OpCode.OP_13:\n          case OpCode.OP_14:\n          case OpCode.OP_15:\n          case OpCode.OP_16:\n            {\n              // ( -- value)\n              // ScriptNum bn((int)opCode - (int)(OpCode.OP_1 - 1))\n              let n = opCodeNum - (OpCode.OP_1 - 1)\n              let buf = new Bn(n).toScriptNumBuffer()\n              this.stack.push(buf)\n              // The result of these opCodes should always be the minimal way to push the data\n              // they push, so no need for a CheckMinimalPush here.\n            }\n            break\n\n          //\n          // Control\n          //\n          case OpCode.OP_NOP:\n            break\n\n          case OpCode.OP_CHECKLOCKTIMEVERIFY:\n            {\n              if (!(this.flags & Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n                // not enabled; treat as a NOP2\n                if (\n                  this.flags & Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS\n                ) {\n                  this.errStr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n                  return false\n                }\n                break\n              }\n\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              // Note that elsewhere numeric opCodes are limited to\n              // operands in the range -2**31+1 to 2**31-1, however it is\n              // legal for opCodes to produce results exceeding that\n              // range. This limitation is implemented by CScriptNum's\n              // default 4-byte limit.\n              //\n              // If we kept to that limit we'd have a year 2038 problem,\n              // even though the nLockTime field in transactions\n              // themselves is uint32 which only becomes meaningless\n              // after the year 2106.\n              //\n              // Thus as a special case we tell CScriptNum to accept up\n              // to 5-byte bignums, which are good until 2**39-1, well\n              // beyond the 2**32-1 limit of the nLockTime field itself.\n              let nLockTimebuf = this.stack[this.stack.length - 1]\n              let nLockTimebn = new Bn().fromScriptNumBuffer(\n                nLockTimebuf,\n                fRequireMinimal,\n                5\n              )\n              let nLockTime = nLockTimebn.toNumber()\n\n              // In the rare event that the argument may be < 0 due to\n              // some arithmetic being done first, you can always use\n              // 0 MAX CHECKLOCKTIMEVERIFY.\n              if (nLockTime < 0) {\n                this.errStr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n                return false\n              }\n\n              // Actually compare the specified lock time with the transaction.\n              if (!this.checkLockTime(nLockTime)) {\n                this.errStr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n                return false\n              }\n            }\n            break\n\n          case OpCode.OP_CHECKSEQUENCEVERIFY:\n            {\n              if (!(this.flags & Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n                // not enabled; treat as a NOP3\n                if (\n                  this.flags & Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS\n                ) {\n                  this.errStr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n                  return false\n                }\n                break\n              }\n\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              // nSequence, like nLockTime, is a 32-bit unsigned integer\n              // field. See the comment in CHECKLOCKTIMEVERIFY regarding\n              // 5-byte numeric operands.\n              let nSequencebuf = this.stack[this.stack.length - 1]\n              let nSequencebn = new Bn().fromScriptNumBuffer(\n                nSequencebuf,\n                fRequireMinimal,\n                5\n              )\n              let nSequence = nSequencebn.toNumber()\n\n              // In the rare event that the argument may be < 0 due to\n              // some arithmetic being done first, you can always use\n              // 0 MAX CHECKSEQUENCEVERIFY.\n              if (nSequence < 0) {\n                this.errStr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n                return false\n              }\n\n              // To provide for future soft-fork extensibility, if the\n              // operand has the disabled lock-time flag set,\n              // CHECKSEQUENCEVERIFY behaves as a NOP.\n              if ((nSequence & TxIn.SEQUENCE_LOCKTIME_DISABLE_FLAG) !== 0) {\n                break\n              }\n\n              // Compare the specified sequence number with the input.\n              if (!this.checkSequence(nSequence)) {\n                this.errStr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n                return false\n              }\n            }\n            break\n\n          case OpCode.OP_NOP1:\n          case OpCode.OP_NOP3:\n          case OpCode.OP_NOP4:\n          case OpCode.OP_NOP5:\n          case OpCode.OP_NOP6:\n          case OpCode.OP_NOP7:\n          case OpCode.OP_NOP8:\n          case OpCode.OP_NOP9:\n          case OpCode.OP_NOP10:\n            if (this.flags & Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n              this.errStr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n              return false\n            }\n            break\n\n          case OpCode.OP_IF:\n          case OpCode.OP_NOTIF:\n            {\n              // <expression> if [statements] [else [statements]] endif\n              // bool fValue = false\n              let fValue = false\n              if (fExec) {\n                if (this.stack.length < 1) {\n                  this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n                  return false\n                }\n                let buf = this.stack.pop()\n                fValue = Interp.castToBool(buf)\n                if (opCodeNum === OpCode.OP_NOTIF) {\n                  fValue = !fValue\n                }\n              }\n              this.ifStack.push(fValue)\n            }\n            break\n\n          case OpCode.OP_ELSE:\n            if (this.ifStack.length === 0) {\n              this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n              return false\n            }\n            this.ifStack[this.ifStack.length - 1] = !this.ifStack[\n              this.ifStack.length - 1\n            ]\n            break\n\n          case OpCode.OP_ENDIF:\n            if (this.ifStack.length === 0) {\n              this.errStr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n              return false\n            }\n            this.ifStack.pop()\n            break\n\n          case OpCode.OP_VERIFY:\n            {\n              // (true -- ) or\n              // (false -- false) and return\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let fValue = Interp.castToBool(buf)\n              if (fValue) {\n                this.stack.pop()\n              } else {\n                this.errStr = 'SCRIPT_ERR_VERIFY'\n                return false\n              }\n            }\n            break\n\n          case OpCode.OP_RETURN: {\n            this.errStr = 'SCRIPT_ERR_OP_RETURN'\n            return false\n          }\n          // unreachable code: break\n\n          //\n          // Stack ops\n          //\n          case OpCode.OP_TOALTSTACK:\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.altStack.push(this.stack.pop())\n            break\n\n          case OpCode.OP_FROMALTSTACK:\n            if (this.altStack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION'\n              return false\n            }\n            this.stack.push(this.altStack.pop())\n            break\n\n          case OpCode.OP_2DROP:\n            // (x1 x2 -- )\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.pop()\n            this.stack.pop()\n            break\n\n          case OpCode.OP_2DUP:\n            {\n              // (x1 x2 -- x1 x2 x1 x2)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 2]\n              let buf2 = this.stack[this.stack.length - 1]\n              this.stack.push(buf1)\n              this.stack.push(buf2)\n            }\n            break\n\n          case OpCode.OP_3DUP:\n            {\n              // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n              if (this.stack.length < 3) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 3]\n              let buf2 = this.stack[this.stack.length - 2]\n              let buf3 = this.stack[this.stack.length - 1]\n              this.stack.push(buf1)\n              this.stack.push(buf2)\n              this.stack.push(buf3)\n            }\n            break\n\n          case OpCode.OP_2OVER:\n            {\n              // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n              if (this.stack.length < 4) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 4]\n              let buf2 = this.stack[this.stack.length - 3]\n              this.stack.push(buf1)\n              this.stack.push(buf2)\n            }\n            break\n\n          case OpCode.OP_2ROT:\n            {\n              // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n              if (this.stack.length < 6) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let spliced = this.stack.splice(this.stack.length - 6, 2)\n              this.stack.push(spliced[0])\n              this.stack.push(spliced[1])\n            }\n            break\n\n          case OpCode.OP_2SWAP:\n            {\n              // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n              if (this.stack.length < 4) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let spliced = this.stack.splice(this.stack.length - 4, 2)\n              this.stack.push(spliced[0])\n              this.stack.push(spliced[1])\n            }\n            break\n\n          case OpCode.OP_IFDUP:\n            {\n              // (x - 0 | x x)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let fValue = Interp.castToBool(buf)\n              if (fValue) {\n                this.stack.push(buf)\n              }\n            }\n            break\n\n          case OpCode.OP_DEPTH:\n            {\n              // -- stacksize\n              let buf = new Bn(this.stack.length).toScriptNumBuffer()\n              this.stack.push(buf)\n            }\n            break\n\n          case OpCode.OP_DROP:\n            // (x -- )\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.pop()\n            break\n\n          case OpCode.OP_DUP:\n            // (x -- x x)\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.push(this.stack[this.stack.length - 1])\n            break\n\n          case OpCode.OP_NIP:\n            // (x1 x2 -- x2)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.splice(this.stack.length - 2, 1)\n            break\n\n          case OpCode.OP_OVER:\n            // (x1 x2 -- x1 x2 x1)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.push(this.stack[this.stack.length - 2])\n            break\n\n          case OpCode.OP_PICK:\n          case OpCode.OP_ROLL:\n            {\n              // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n              // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let bn = new Bn().fromScriptNumBuffer(buf, fRequireMinimal)\n              let n = bn.toNumber()\n              this.stack.pop()\n              if (n < 0 || n >= this.stack.length) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              buf = this.stack[this.stack.length - n - 1]\n              if (opCodeNum === OpCode.OP_ROLL) {\n                this.stack.splice(this.stack.length - n - 1, 1)\n              }\n              this.stack.push(buf)\n            }\n            break\n\n          case OpCode.OP_ROT:\n            {\n              // (x1 x2 x3 -- x2 x3 x1)\n              //  x2 x1 x3  after first swap\n              //  x2 x3 x1  after second swap\n              if (this.stack.length < 3) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let x1 = this.stack[this.stack.length - 3]\n              let x2 = this.stack[this.stack.length - 2]\n              let x3 = this.stack[this.stack.length - 1]\n              this.stack[this.stack.length - 3] = x2\n              this.stack[this.stack.length - 2] = x3\n              this.stack[this.stack.length - 1] = x1\n            }\n            break\n\n          case OpCode.OP_SWAP:\n            {\n              // (x1 x2 -- x2 x1)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let x1 = this.stack[this.stack.length - 2]\n              let x2 = this.stack[this.stack.length - 1]\n              this.stack[this.stack.length - 2] = x2\n              this.stack[this.stack.length - 1] = x1\n            }\n            break\n\n          case OpCode.OP_TUCK:\n            // (x1 x2 -- x2 x1 x2)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            this.stack.splice(\n              this.stack.length - 2,\n              0,\n              this.stack[this.stack.length - 1]\n            )\n            break\n\n          case OpCode.OP_SIZE:\n            {\n              // (in -- in size)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let bn = new Bn(this.stack[this.stack.length - 1].length)\n              this.stack.push(bn.toScriptNumBuffer())\n            }\n            break\n\n          //\n          // Bitwise logic\n          //\n          case OpCode.OP_OR:\n          case OpCode.OP_AND:\n          case OpCode.OP_XOR:\n            // (x1 x2 -- out)\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            let buf1 = this.stack[this.stack.length - 2]\n            let buf2 = this.stack[this.stack.length - 1]\n\n            if (buf1.length != buf2.length) {\n              this.errStr = 'SCRIPT_ERR_INVALID_OPERAND_SIZE'\n              return false\n            }\n\n            switch (opCodeNum) {\n              case OpCode.OP_AND:\n                for(let i = 0; i < buf1.length; i++) {\n                  buf1[i] &= buf2[i]\n                }\n                break\n              case OpCode.OP_OR:\n                for(let i = 0; i < buf1.length; i++) {\n                  buf1[i] |= buf2[i]\n                }\n                break\n              case OpCode.OP_XOR:\n                for(let i = 0; i < buf1.length; i++) {\n                  buf1[i] ^= buf2[i]\n                }\n                break\n            }\n\n            // pop out buf2\n            this.stack.pop();\n            break\n          case OpCode.OP_INVERT:\n            // (x -- out)\n            if (this.stack.length < 1) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n            let buf = this.stack[this.stack.length - 1]\n            for(let i = 0; i < buf.length; i++) {\n              buf[i] = ~buf[i]\n            }\n            break\n          case OpCode.OP_LSHIFT:\n          case OpCode.OP_RSHIFT:\n            // (x n -- out)\n            {\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let buf1 = this.stack[this.stack.length - 2]\n              let value = new Bn(buf1)\n              let n = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 1],\n                fRequireMinimal\n              ).toNumber()\n              if(n < 0) {\n                this.errStr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n                return false\n              }\n\n              this.stack.pop()\n              this.stack.pop()\n              \n              switch(opCodeNum) {\n                case OpCode.OP_LSHIFT:\n                  value = value.ushln(n)\n                  break\n                case OpCode.OP_RSHIFT:\n                  value = value.ushrn(n)\n                  break\n              }\n\n              let buf2 = value.toBuffer().slice(-buf1.length)\n              if(buf2.length < buf1.length) {\n                buf2 = Buffer.concat([Buffer.alloc(buf1.length - buf2.length), buf2])\n              }\n\n              this.stack.push(buf2)\n              break\n            }\n          case OpCode.OP_EQUAL:\n          case OpCode.OP_EQUALVERIFY:\n            // case OpCode.OP_NOTEQUAL: // use OpCode.OP_NUMNOTEQUAL\n            {\n              // (x1 x2 - bool)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf1 = this.stack[this.stack.length - 2]\n              let buf2 = this.stack[this.stack.length - 1]\n              let fEqual = cmp(buf1, buf2)\n              // OpCode.OP_NOTEQUAL is disabled because it would be too easy to say\n              // something like n != 1 and have some wiseguy pass in 1 with extra\n              // zero bytes after it (numerically, 0x01 == 0x0001 == 0x000001)\n              // if (opCode == OpCode.OP_NOTEQUAL)\n              //  fEqual = !fEqual\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.push(fEqual ? Interp.true : Interp.false)\n              if (opCodeNum === OpCode.OP_EQUALVERIFY) {\n                if (fEqual) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_EQUALVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          //\n          // Numeric\n          //\n          case OpCode.OP_1ADD:\n          case OpCode.OP_1SUB:\n          case OpCode.OP_NEGATE:\n          case OpCode.OP_ABS:\n          case OpCode.OP_NOT:\n          case OpCode.OP_0NOTEQUAL:\n            {\n              // (in -- out)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              let bn = new Bn().fromScriptNumBuffer(buf, fRequireMinimal)\n              switch (opCodeNum) {\n                case OpCode.OP_1ADD:\n                  bn = bn.add(1)\n                  break\n                case OpCode.OP_1SUB:\n                  bn = bn.sub(1)\n                  break\n                case OpCode.OP_NEGATE:\n                  bn = bn.neg()\n                  break\n                case OpCode.OP_ABS:\n                  if (bn.lt(0)) bn = bn.neg()\n                  break\n                case OpCode.OP_NOT:\n                  bn = new Bn(bn.eq(0) + 0)\n                  break\n                case OpCode.OP_0NOTEQUAL:\n                  bn = new Bn(bn.neq(0) + 0)\n                  break\n                // default:      assert(!\"invalid opCode\"); break; // TODO: does this ever occur?\n              }\n              this.stack.pop()\n              this.stack.push(bn.toScriptNumBuffer())\n            }\n            break\n\n          case OpCode.OP_ADD:\n          case OpCode.OP_SUB:\n          case OpCode.OP_MUL:\n          case OpCode.OP_DIV:\n          case OpCode.OP_MOD:\n          case OpCode.OP_BOOLAND:\n          case OpCode.OP_BOOLOR:\n          case OpCode.OP_NUMEQUAL:\n          case OpCode.OP_NUMEQUALVERIFY:\n          case OpCode.OP_NUMNOTEQUAL:\n          case OpCode.OP_LESSTHAN:\n          case OpCode.OP_GREATERTHAN:\n          case OpCode.OP_LESSTHANOREQUAL:\n          case OpCode.OP_GREATERTHANOREQUAL:\n          case OpCode.OP_MIN:\n          case OpCode.OP_MAX:\n            {\n              // (x1 x2 -- out)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let bn1 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 2],\n                fRequireMinimal\n              )\n              let bn2 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 1],\n                fRequireMinimal\n              )\n              let bn = new Bn(0)\n\n              switch (opCodeNum) {\n                case OpCode.OP_ADD:\n                  bn = bn1.add(bn2)\n                  break\n\n                case OpCode.OP_SUB:\n                  bn = bn1.sub(bn2)\n                  break\n\n                case OpCode.OP_MUL:\n                  bn = bn1.mul(bn2)\n                  break\n\n                case OpCode.OP_DIV:\n                  if (bn2 == 0) {\n                    this.errStr = \"SCRIPT_ERR_DIV_BY_ZERO\"\n                    return false\n                  }\n                  bn = bn1.div(bn2)\n                  break\n\n                case OpCode.OP_MOD:\n                  if (bn2 == 0) {\n                    this.errStr = \"SCRIPT_ERR_DIV_BY_ZERO\"\n                    return false\n                  }\n                  bn = bn1.mod(bn2)\n                  break\n\n                // case OpCode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break\n                case OpCode.OP_BOOLAND:\n                  bn = new Bn((bn1.neq(0) && bn2.neq(0)) + 0)\n                  break\n                // case OpCode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break\n                case OpCode.OP_BOOLOR:\n                  bn = new Bn((bn1.neq(0) || bn2.neq(0)) + 0)\n                  break\n                // case OpCode.OP_NUMEQUAL:      bn = (bn1 == bn2); break\n                case OpCode.OP_NUMEQUAL:\n                  bn = new Bn(bn1.eq(bn2) + 0)\n                  break\n                // case OpCode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break\n                case OpCode.OP_NUMEQUALVERIFY:\n                  bn = new Bn(bn1.eq(bn2) + 0)\n                  break\n                // case OpCode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break\n                case OpCode.OP_NUMNOTEQUAL:\n                  bn = new Bn(bn1.neq(bn2) + 0)\n                  break\n                // case OpCode.OP_LESSTHAN:      bn = (bn1 < bn2); break\n                case OpCode.OP_LESSTHAN:\n                  bn = new Bn(bn1.lt(bn2) + 0)\n                  break\n                // case OpCode.OP_GREATERTHAN:     bn = (bn1 > bn2); break\n                case OpCode.OP_GREATERTHAN:\n                  bn = new Bn(bn1.gt(bn2) + 0)\n                  break\n                // case OpCode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break\n                case OpCode.OP_LESSTHANOREQUAL:\n                  bn = new Bn(bn1.leq(bn2) + 0)\n                  break\n                // case OpCode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break\n                case OpCode.OP_GREATERTHANOREQUAL:\n                  bn = new Bn(bn1.geq(bn2) + 0)\n                  break\n                case OpCode.OP_MIN:\n                  bn = bn1.lt(bn2) ? bn1 : bn2\n                  break\n                case OpCode.OP_MAX:\n                  bn = bn1.gt(bn2) ? bn1 : bn2\n                  break\n                // default:           assert(!\"invalid opCode\"); break; //TODO: does this ever occur?\n              }\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.push(bn.toScriptNumBuffer())\n\n              if (opCodeNum === OpCode.OP_NUMEQUALVERIFY) {\n                // if (CastToBool(stacktop(-1)))\n                if (Interp.castToBool(this.stack[this.stack.length - 1])) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_NUMEQUALVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          case OpCode.OP_WITHIN:\n            {\n              // (x min max -- out)\n              if (this.stack.length < 3) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let bn1 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 3],\n                fRequireMinimal\n              )\n              let bn2 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 2],\n                fRequireMinimal\n              )\n              let bn3 = new Bn().fromScriptNumBuffer(\n                this.stack[this.stack.length - 1],\n                fRequireMinimal\n              )\n              // bool fValue = (bn2 <= bn1 && bn1 < bn3)\n              let fValue = bn2.leq(bn1) && bn1.lt(bn3)\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.pop()\n              this.stack.push(fValue ? Interp.true : Interp.false)\n            }\n            break\n\n          //\n          // Crypto\n          //\n          case OpCode.OP_RIPEMD160:\n          case OpCode.OP_SHA1:\n          case OpCode.OP_SHA256:\n          case OpCode.OP_HASH160:\n          case OpCode.OP_HASH256:\n            {\n              // (in -- hash)\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              let buf = this.stack[this.stack.length - 1]\n              // valtype vchnew Hash((opCode == OpCode.OP_RIPEMD160 || opCode == OpCode.OP_SHA1 || opCode == OpCode.OP_HASH160) ? 20 : 32)\n              let bufHash\n              if (opCodeNum === OpCode.OP_RIPEMD160) {\n                bufHash = Hash.ripemd160(buf)\n              } else if (opCodeNum === OpCode.OP_SHA1) {\n                bufHash = Hash.sha1(buf)\n              } else if (opCodeNum === OpCode.OP_SHA256) {\n                bufHash = Hash.sha256(buf)\n              } else if (opCodeNum === OpCode.OP_HASH160) {\n                bufHash = Hash.sha256Ripemd160(buf)\n              } else if (opCodeNum === OpCode.OP_HASH256) {\n                bufHash = Hash.sha256Sha256(buf)\n              }\n              this.stack.pop()\n              this.stack.push(bufHash)\n            }\n            break\n\n          case OpCode.OP_CODESEPARATOR:\n            // Hash starts after the code separator\n            this.pBeginCodeHash = this.pc\n            break\n\n          case OpCode.OP_CHECKSIG:\n          case OpCode.OP_CHECKSIGVERIFY:\n            {\n              // (sig pubKey -- bool)\n              if (this.stack.length < 2) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let bufSig = this.stack[this.stack.length - 2]\n              let bufPubKey = this.stack[this.stack.length - 1]\n\n              // Subset of script starting at the most recent codeseparator\n              // CScript scriptCode(pBeginCodeHash, pend)\n              let subScript = new Script().fromObject({\n                chunks: this.script.chunks.slice(this.pBeginCodeHash)\n              })\n\n              // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n              let nHashType =\n                bufSig.length > 0 ? bufSig.readUInt8(bufSig.length - 1) : 0\n              if (nHashType & Sig.SIGHASH_FORKID) {\n                if (!(this.flags & Interp.SCRIPT_ENABLE_SIGHASH_FORKID)) {\n                  this.errStr = 'SCRIPT_ERR_ILLEGAL_FORKID'\n                  return false\n                }\n              } else {\n                subScript.findAndDelete(new Script().writeBuffer(bufSig))\n              }\n\n              if (\n                !this.checkSigEncoding(bufSig) ||\n                !this.checkPubKeyEncoding(bufPubKey)\n              ) {\n                // serror is set\n                return false\n              }\n\n              let fSuccess\n              try {\n                let sig = new Sig().fromTxFormat(bufSig)\n                let pubKey = new PubKey().fromBuffer(bufPubKey, false)\n                fSuccess = this.tx.verify(\n                  sig,\n                  pubKey,\n                  this.nIn,\n                  subScript,\n                  Boolean(this.flags & Interp.SCRIPT_VERIFY_LOW_S),\n                  this.valueBn,\n                  this.flags\n                )\n              } catch (e) {\n                // invalid sig or pubKey\n                fSuccess = false\n              }\n\n              this.stack.pop()\n              this.stack.pop()\n              // stack.push_back(fSuccess ? vchTrue : vchFalse)\n              this.stack.push(fSuccess ? Interp.true : Interp.false)\n              if (opCodeNum === OpCode.OP_CHECKSIGVERIFY) {\n                if (fSuccess) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_CHECKSIGVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          case OpCode.OP_CHECKMULTISIG:\n          case OpCode.OP_CHECKMULTISIGVERIFY:\n            {\n              // ([sig ...] num_of_signatures [pubKey ...] num_of_pubKeys -- bool)\n\n              let i = 1\n              if (this.stack.length < i) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let nKeysCount = new Bn()\n                .fromScriptNumBuffer(\n                  this.stack[this.stack.length - i],\n                  fRequireMinimal\n                )\n                .toNumber()\n              if (nKeysCount < 0 || nKeysCount > 20) {\n                this.errStr = 'SCRIPT_ERR_PUBKEY_COUNT'\n                return false\n              }\n              this.nOpCount += nKeysCount\n              if (this.nOpCount > 201) {\n                this.errStr = 'SCRIPT_ERR_OP_COUNT'\n                return false\n              }\n              // int ikey = ++i\n              let ikey = ++i\n              i += nKeysCount\n              if (this.stack.length < i) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              let nSigsCount = new Bn()\n                .fromScriptNumBuffer(\n                  this.stack[this.stack.length - i],\n                  fRequireMinimal\n                )\n                .toNumber()\n              if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n                this.errStr = 'SCRIPT_ERR_SIG_COUNT'\n                return false\n              }\n              // int isig = ++i\n              let isig = ++i\n              i += nSigsCount\n              if (this.stack.length < i) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n\n              // Subset of script starting at the most recent codeseparator\n              let subScript = new Script().fromObject({\n                chunks: this.script.chunks.slice(this.pBeginCodeHash)\n              })\n\n              for (let k = 0; k < nSigsCount; k++) {\n                let bufSig = this.stack[this.stack.length - isig - k]\n\n                // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n                let nHashType =\n                  bufSig.length > 0 ? bufSig.readUInt8(bufSig.length - 1) : 0\n                if (nHashType & Sig.SIGHASH_FORKID) {\n                  if (!(this.flags & Interp.SCRIPT_ENABLE_SIGHASH_FORKID)) {\n                    this.errStr = 'SCRIPT_ERR_ILLEGAL_FORKID'\n                    return false\n                  }\n                } else {\n                  // Drop the signature, since there's no way for a signature to sign itself\n                  subScript.findAndDelete(new Script().writeBuffer(bufSig))\n                }\n              }\n\n              let fSuccess = true\n              while (fSuccess && nSigsCount > 0) {\n                // valtype& vchSig  = stacktop(-isig)\n                let bufSig = this.stack[this.stack.length - isig]\n                // valtype& vchPubKey = stacktop(-ikey)\n                let bufPubKey = this.stack[this.stack.length - ikey]\n\n                if (\n                  !this.checkSigEncoding(bufSig) ||\n                  !this.checkPubKeyEncoding(bufPubKey)\n                ) {\n                  // serror is set\n                  return false\n                }\n\n                let fOk\n                try {\n                  let sig = new Sig().fromTxFormat(bufSig)\n                  let pubKey = new PubKey().fromBuffer(bufPubKey, false)\n                  fOk = this.tx.verify(\n                    sig,\n                    pubKey,\n                    this.nIn,\n                    subScript,\n                    Boolean(this.flags & Interp.SCRIPT_VERIFY_LOW_S),\n                    this.valueBn,\n                    this.flags\n                  )\n                } catch (e) {\n                  // invalid sig or pubKey\n                  fOk = false\n                }\n\n                if (fOk) {\n                  isig++\n                  nSigsCount--\n                }\n                ikey++\n                nKeysCount--\n\n                // If there are more signatures left than keys left,\n                // then too many signatures have failed\n                if (nSigsCount > nKeysCount) {\n                  fSuccess = false\n                }\n              }\n\n              // Clean up stack of actual arguments\n              while (i-- > 1) {\n                this.stack.pop()\n              }\n\n              // A bug causes CHECKMULTISIG to consume one extra argument\n              // whose contents were not checked in any way.\n              //\n              // Unfortunately this is a potential source of mutability,\n              // so optionally verify it is exactly equal to zero prior\n              // to removing it from the stack.\n              if (this.stack.length < 1) {\n                this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n                return false\n              }\n              if (\n                this.flags & Interp.SCRIPT_VERIFY_NULLDUMMY &&\n                this.stack[this.stack.length - 1].length\n              ) {\n                this.errStr = 'SCRIPT_ERR_SIG_NULLDUMMY'\n                return false\n              }\n              this.stack.pop()\n\n              // stack.push_back(fSuccess ? vchTrue : vchFalse)\n              this.stack.push(fSuccess ? Interp.true : Interp.false)\n\n              if (opCodeNum === OpCode.OP_CHECKMULTISIGVERIFY) {\n                if (fSuccess) {\n                  this.stack.pop()\n                } else {\n                  this.errStr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY'\n                  return false\n                }\n              }\n            }\n            break\n\n          //\n          // Byte string operations\n          //\n          case OpCode.OP_CAT:\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n\n            let vch1 = this.stack[this.stack.length - 2]\n            let vch2 = this.stack[this.stack.length - 1]\n            \n            this.stack[this.stack.length - 2] = Buffer.concat([vch1, vch2])\n            this.stack.pop()\n            break\n\n          case OpCode.OP_SPLIT:\n            if (this.stack.length < 2) {\n              this.errStr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n              return false\n            }\n\n            let data = this.stack[this.stack.length - 2]\n            let position = new Bn().fromScriptNumBuffer(\n              this.stack[this.stack.length - 1],\n              fRequireMinimal\n            )\n\n            if(position.lt(0) || position.gt(data.length)) {\n              this.errStr = 'SCRIPT_ERR_INVALID_SPLIT_RANGE'\n              return false\n            }\n\n            let n1 = data.slice(0, position)\n            let n2 = data.slice(position)\n\n            this.stack.pop()\n            this.stack.pop()\n\n            this.stack.push(n1)\n            this.stack.push(n2)\n\n            break\n\n          default:\n            this.errStr = 'SCRIPT_ERR_BAD_OPCODE'\n            return false\n        }\n      }\n\n      return true\n    }\n\n    /**\n     * This function has the same interface as bitcoin core's VerifyScript and is\n     * the function you want to use to know if a particular input in a\n     * transaction is valid or not. It simply iterates over the results generated\n     * by the results method.\n     */\n    verify (scriptSig, scriptPubKey, tx, nIn, flags, valueBn) {\n      let results = this.results(\n        scriptSig,\n        scriptPubKey,\n        tx,\n        nIn,\n        flags,\n        valueBn\n      )\n      for (let success of results) {\n        if (!success) {\n          return false\n        }\n      }\n      return true\n    }\n\n    /**\n     * Gives you the results of the execution each operation of the scripSig and\n     * scriptPubKey corresponding to a particular input (nIn) for the concerned\n     * transaction (tx). Each result can be either true or false. If true, then\n     * the operation did not invalidate the transaction. If false, then the\n     * operation has invalidated the script, and the transaction is not valid.\n     * flags is a number that can pass in some special flags, such as whether or\n     * not to execute the redeemScript in a p2sh transaction.\n     *\n     * This method is translated from bitcoin core's VerifyScript.  This function\n     * is a generator, thus you can and need to iterate through it.  To\n     * automatically return true or false, use the verify method.\n     */\n    * results (scriptSig, scriptPubKey, tx, nIn, flags, valueBn) {\n      let stackCopy\n\n      this.fromObject({\n        script: scriptSig,\n        tx: tx,\n        nIn: nIn,\n        flags: flags,\n        valueBn: valueBn\n      })\n\n      if (\n        (flags & Interp.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 &&\n        !scriptSig.isPushOnly()\n      ) {\n        this.errStr = this.errStr || 'SCRIPT_ERR_SIG_PUSHONLY'\n        yield false\n      }\n\n      yield * this.eval()\n\n      if (flags & Interp.SCRIPT_VERIFY_P2SH) {\n        stackCopy = this.stack.slice()\n      }\n\n      let stack = this.stack\n      this.initialize()\n      this.fromObject({\n        script: scriptPubKey,\n        stack: stack,\n        tx: tx,\n        nIn: nIn,\n        flags: flags,\n        valueBn: valueBn\n      })\n\n      yield * this.eval()\n\n      if (this.stack.length === 0) {\n        this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n        yield false\n      }\n\n      let buf = this.stack[this.stack.length - 1]\n      if (!Interp.castToBool(buf)) {\n        this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n        yield false\n      }\n\n      // Additional validation for spend-to-script-hash transactions:\n      if (flags & Interp.SCRIPT_VERIFY_P2SH && scriptPubKey.isScriptHashOut()) {\n        // scriptSig must be literals-only or validation fails\n        if (!scriptSig.isPushOnly()) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_SIG_PUSHONLY'\n          yield false\n        }\n\n        // Restore stack.\n        let tmp = stack\n        stack = stackCopy\n        stackCopy = tmp\n\n        // stack cannot be empty here, because if it was the\n        // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n        // an empty stack and the EvalScript above would yield false.\n        if (stack.length === 0) {\n          throw new Error('internal error - stack copy empty')\n        }\n\n        let pubKeySerialized = stack[stack.length - 1]\n        let scriptPubKey2 = new Script().fromBuffer(pubKeySerialized)\n        stack.pop()\n\n        this.initialize()\n        this.fromObject({\n          script: scriptPubKey2,\n          stack: stack,\n          tx: tx,\n          nIn: nIn,\n          flags: flags,\n          valueBn: valueBn\n        })\n\n        yield * this.eval()\n\n        if (stack.length === 0) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n          yield false\n        }\n\n        if (!Interp.castToBool(stack[stack.length - 1])) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_EVAL_FALSE'\n          yield false\n        } else {\n          yield true\n        }\n      }\n\n      // The CLEANSTACK check is only performed after potential P2SH evaluation,\n      // as the non-P2SH evaluation of a P2SH script will obviously not result in\n      // a clean stack (the P2SH inputs remain).\n      if ((flags & Interp.SCRIPT_VERIFY_CLEANSTACK) !== 0) {\n        // Disallow CLEANSTACK without P2SH, as otherwise a switch\n        // CLEANSTACK->P2SH+CLEANSTACK would be possible, which is not a softfork\n        // (and P2SH should be one).\n        if (!(flags & Interp.SCRIPT_VERIFY_P2SH)) {\n          throw new Error('cannot use CLEANSTACK without P2SH')\n        }\n        if (stack.length !== 1) {\n          this.errStr = this.errStr || 'SCRIPT_ERR_CLEANSTACK'\n          yield false\n        }\n      }\n\n      yield true\n    }\n\n    /**\n     * If the script has failed, this methods returns valuable debug\n     * information about exactly where the script failed. It is a\n     * JSON-compatible object so it can be easily stringified. pc refers to the\n     * currently executing opcode.\n     */\n    getDebugObject () {\n      let pc = this.pc - 1 // pc is incremented immediately after getting\n      return {\n        errStr: this.errStr,\n        scriptStr: this.script ? this.script.toString() : 'no script found',\n        pc: pc,\n        stack: this.stack.map(buf => buf.toString('hex')),\n        altStack: this.altStack.map(buf => buf.toString('hex')),\n        opCodeStr: this.script\n          ? OpCode.fromNumber(this.script.chunks[pc].opCodeNum).toString()\n          : 'no script found'\n      }\n    }\n\n    getDebugString () {\n      return JSON.stringify(this.getDebugObject(), null, 2)\n    }\n  }\n\n  Interp.true = Buffer.from([1])\n  Interp.false = Buffer.from([])\n\n  Interp.MAX_SCRIPT_ELEMENT_SIZE = 520\n  Interp.LOCKTIME_THRESHOLD = 500000000 // Tue Nov  5 00:53:20 1985 UTC\n\n  // flags taken from bitcoin core\n  // bitcoin core commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n  Interp.SCRIPT_VERIFY_NONE = 0\n\n  // Evaluate P2SH subScripts (softfork safe, Bip16).\n  Interp.SCRIPT_VERIFY_P2SH = 1 << 0\n\n  // Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n  // Passing a pubKey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubKey to be\n  // skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\n  Interp.SCRIPT_VERIFY_STRICTENC = 1 << 1\n\n  // Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, Bip62 rule 1)\n  Interp.SCRIPT_VERIFY_DERSIG = 1 << 2\n\n  // Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n  // (softfork safe, Bip62 rule 5).\n  Interp.SCRIPT_VERIFY_LOW_S = 1 << 3\n\n  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, Bip62 rule 7).\n  Interp.SCRIPT_VERIFY_NULLDUMMY = 1 << 4\n\n  // Using a non-push operator in the scriptSig causes script failure (softfork safe, Bip62 rule 2).\n  Interp.SCRIPT_VERIFY_SIGPUSHONLY = 1 << 5\n\n  // Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n  // pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n  // any other push causes the script to fail (Bip62 rule 3).\n  // In addition, whenever a stack element is interpreted as a number, it must be of minimal length (Bip62 rule 4).\n  // (softfork safe)\n  Interp.SCRIPT_VERIFY_MINIMALDATA = 1 << 6\n\n  // Discourage use of NOPs reserved for upgrades (NOP1-10)\n  //\n  // Provided so that nodes can avoid accepting or mining transactions\n  // containing executed NOP's whose meaning may change after a soft-fork,\n  // thus rendering the script invalid; with this flag set executing\n  // discouraged NOPs fails the script. This verification flag will never be\n  // a mandatory flag applied to scripts in a block. NOPs that are not\n  // executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\n  Interp.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = 1 << 7\n\n  // Require that only a single stack element remains after evaluation. This\n  // changes the success criterion from \"At least one stack element must\n  // remain, and when interpreted as a boolean, it must be true\" to \"Exactly\n  // one stack element must remain, and when interpreted as a boolean, it must\n  // be true\".  (softfork safe, Bip62 rule 6)\n  // Note: CLEANSTACK should never be used without P2SH.\n  Interp.SCRIPT_VERIFY_CLEANSTACK = 1 << 8\n\n  // Verify CHECKLOCKTIMEVERIFY\n  //\n  // See Bip65 for details.\n  Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = 1 << 9\n\n  // support CHECKSEQUENCEVERIFY opCode\n  //\n  // See Bip112 for details\n  Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = 1 << 10\n\n  // used for UAHF\n  // https://github.com/Bitcoin-UAHF/spec/blob/master/replay-protected-sighash.md\n  Interp.SCRIPT_ENABLE_SIGHASH_FORKID = 1 << 16\n\n  // These are the things we wish to verify by default. At the time of writing,\n  // P2SH and CHECKLOCKTIMEVERIFY are both active, but CHECKSEQUENCEVERIFY is\n  // not.\n  Interp.defaultFlags =\n    Interp.SCRIPT_VERIFY_P2SH | Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY\n  // Interp.defaultFlags = Interp.SCRIPT_VERIFY_P2SH | Interp.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY | Interp.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY\n\nexport { Interp }\n","/**\n * PubKey Map\n * ==========\n *\n * A map from (transaction hash, output number) to (script chunk index, pubKey).\n * Whening signing a bitcoin transaction, we need to be able to sign an input\n * with the correct key and also we need to know where to put signature when we\n * get it. This mapping allows us to find the key for an associated input (which\n * is identified by tx output hash and number) with which to sign the\n * transaction and then also to know where to insert the signature into the\n * input script. This gets us the public key, and we need a different method to\n * get the private key. That is because we often know the public key to be used\n * but may not have access to the private key until the entire tx is sent to\n * where the private keys are.\n */\n'use strict'\n\nimport { Struct } from './struct'\nimport { Sig } from './sig'\n\nclass SigOperations extends Struct {\n  constructor (map = new Map()) {\n    super({ map })\n  }\n\n  toJSON () {\n    const json = {}\n    this.map.forEach((arr, label) => {\n      json[label] = arr.map(obj => ({\n        nScriptChunk: obj.nScriptChunk,\n        type: obj.type, // 'sig' or 'pubKey'\n        addressStr: obj.addressStr,\n        nHashType: obj.nHashType,\n        log: obj.log\n      }))\n    })\n    return json\n  }\n\n  fromJSON (json) {\n    Object.keys(json).forEach(label => {\n      this.map.set(label, json[label].map(obj => ({\n        nScriptChunk: obj.nScriptChunk,\n        type: obj.type,\n        addressStr: obj.addressStr,\n        nHashType: obj.nHashType,\n        log: obj.log\n      })))\n    })\n    return this\n  }\n\n  /**\n   * Set an address to in the map for use with single-sig.\n   *\n   * @param {Buffer} txHashBuf The hash of a transsaction. Note that this is\n   * *not* the reversed transaction id, but is the raw hash.\n   * @param {Number} txOutNum The output number, a.k.a. the \"vout\".\n   * @param {Number} nScriptChunk The index of the chunk of the script where\n   * we are going to place the signature.\n   * @param {String} addressStr The addressStr coresponding to this (txHashBuf,\n   * txOutNum, nScriptChunk) where we are going to sign and insert the\n   * signature or public key.\n   * @param {Number} nHashType Usually = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID\n   */\n  setOne (txHashBuf, txOutNum, nScriptChunk, type = 'sig', addressStr, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    const obj = { nScriptChunk, type, addressStr, nHashType }\n    this.map.set(label, [obj])\n    return this\n  }\n\n  /**\n   * Set a bunch of addresses for signing an input such as for use with multi-sig.\n   *\n   * @param {Buffer} txHashBuf The hash of a transsaction. Note that this is\n   * *not* the reversed transaction id, but is the raw hash.\n   * @param {Number} txOutNum The output number, a.k.a. the \"vout\".\n   * @param {Array} arr Must take the form of [{nScriptChunk, type, addressStr, nHashType}, ...]\n   */\n  setMany (txHashBuf, txOutNum, arr) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    arr = arr.map(obj => ({\n      type: obj.type || 'sig',\n      nHashType: obj.nHashType || Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID,\n      ...obj\n    }))\n    this.map.set(label, arr)\n    return this\n  }\n\n  addOne (txHashBuf, txOutNum, nScriptChunk, type = 'sig', addressStr, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID) {\n    const arr = this.get(txHashBuf, txOutNum) || []\n    arr.push({\n      nScriptChunk,\n      type,\n      addressStr,\n      nHashType\n    })\n    this.setMany(txHashBuf, txOutNum, arr)\n    return this\n  }\n\n  /**\n   * Get an address from the map\n   *\n   * @param {Buffer} txHashBuf The hash of a transction. Note that this is *not*\n   * the reversed transaction id, but is the raw hash.\n   * @param {Number} txOutNum The output number, a.k.a. the \"vout\".\n   * @param {Number} nScriptChunk The index of the chunk of the script where\n   * we are going to place the signature.\n   * @returns {PubKey}\n   */\n  get (txHashBuf, txOutNum) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    return this.map.get(label) || []\n  }\n}\n\nexport { SigOperations }\n","/**\n * Transaction Output Map\n * ======================\n *\n * A map from a transaction hash and output number to that particular output.\n * Note that the map is from the transaction *hash*, which is the value that\n * occurs in the blockchain, not the id, which is the reverse of the hash. The\n * TxOutMap is necessary when signing a transction to get the script and value\n * of that output which is plugged into the sighash algorithm.\n */\n'use strict'\n\nimport { Struct } from './struct'\nimport { TxOut } from './tx-out'\n\nclass TxOutMap extends Struct {\n  constructor (map = new Map()) {\n    super({ map })\n  }\n\n  toJSON () {\n    const json = {}\n    this.map.forEach((txOut, label) => {\n      json[label] = txOut.toHex()\n    })\n    return json\n  }\n\n  fromJSON (json) {\n    Object.keys(json).forEach(label => {\n      this.map.set(label, TxOut.fromHex(json[label]))\n    })\n    return this\n  }\n\n  set (txHashBuf, txOutNum, txOut) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    this.map.set(label, txOut)\n    return this\n  }\n\n  get (txHashBuf, txOutNum) {\n    const label = txHashBuf.toString('hex') + ':' + txOutNum\n    return this.map.get(label)\n  }\n\n  setTx (tx) {\n    const txhashhex = tx.hash().toString('hex')\n    tx.txOuts.forEach((txOut, index) => {\n      const label = txhashhex + ':' + index\n      this.map.set(label, txOut)\n    })\n    return this\n  }\n}\n\nexport { TxOutMap }\n","/**\n * Transaction Builder\n * ===================\n */\n'use strict'\n\nimport { Address } from './address'\nimport { Constants as Cst } from './constants'\nimport { Bn } from './bn'\nimport { HashCache } from './hash-cache'\nimport { Script } from './script'\nimport { SigOperations } from './sig-operations'\nimport { Sig } from './sig'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { TxIn } from './tx-in'\nimport { TxOut } from './tx-out'\nimport { TxOutMap } from './tx-out-map'\nimport { VarInt } from './var-int'\n\nconst Constants = Cst.Default.TxBuilder\n\nclass TxBuilder extends Struct {\n  constructor (\n    tx = new Tx(),\n    txIns = [],\n    txOuts = [],\n    uTxOutMap = new TxOutMap(),\n    sigOperations = new SigOperations(),\n    changeScript,\n    changeAmountBn,\n    feeAmountBn,\n    feePerKbNum = Constants.feePerKbNum,\n    nLockTime = 0,\n    versionBytesNum = 1,\n    sigsPerInput = 1,\n    dust = Constants.dust,\n    dustChangeToFees = false,\n    hashCache = new HashCache()\n  ) {\n    super({\n      tx,\n      txIns,\n      txOuts,\n      uTxOutMap,\n      sigOperations,\n      changeScript,\n      changeAmountBn,\n      feeAmountBn,\n      feePerKbNum,\n      nLockTime,\n      versionBytesNum,\n      sigsPerInput,\n      dust,\n      dustChangeToFees,\n      hashCache\n    })\n  }\n\n  toJSON () {\n    const json = {}\n    json.tx = this.tx.toHex()\n    json.txIns = this.txIns.map(txIn => txIn.toHex())\n    json.txOuts = this.txOuts.map(txOut => txOut.toHex())\n    json.uTxOutMap = this.uTxOutMap.toJSON()\n    json.sigOperations = this.sigOperations.toJSON()\n    json.changeScript = this.changeScript ? this.changeScript.toHex() : undefined\n    json.changeAmountBn = this.changeAmountBn ? this.changeAmountBn.toNumber() : undefined\n    json.feeAmountBn = this.feeAmountBn ? this.feeAmountBn.toNumber() : undefined\n    json.feePerKbNum = this.feePerKbNum\n    json.sigsPerInput = this.sigsPerInput\n    json.dust = this.dust\n    json.dustChangeToFees = this.dustChangeToFees\n    json.hashCache = this.hashCache.toJSON()\n    return json\n  }\n\n  fromJSON (json) {\n    this.tx = new Tx().fromHex(json.tx)\n    this.txIns = json.txIns.map(txIn => TxIn.fromHex(txIn))\n    this.txOuts = json.txOuts.map(txOut => TxOut.fromHex(txOut))\n    this.uTxOutMap = new TxOutMap().fromJSON(json.uTxOutMap)\n    this.sigOperations = new SigOperations().fromJSON(json.sigOperations)\n    this.changeScript = json.changeScript ? new Script().fromHex(json.changeScript) : undefined\n    this.changeAmountBn = json.changeAmountBn ? new Bn(json.changeAmountBn) : undefined\n    this.feeAmountBn = json.feeAmountBn ? new Bn(json.feeAmountBn) : undefined\n    this.feePerKbNum = json.feePerKbNum || this.feePerKbNum\n    this.sigsPerInput = json.sigsPerInput || this.sigsPerInput\n    this.dust = json.dust || this.dust\n    this.dustChangeToFees =\n        json.dustChangeToFees || this.dustChangeToFees\n    this.hashCache = HashCache.fromJSON(json.hashCache)\n    return this\n  }\n\n  setFeePerKbNum (feePerKbNum) {\n    if (typeof feePerKbNum !== 'number' || feePerKbNum < 0) {\n      throw new Error('cannot set a fee of zero or less')\n    }\n    this.feePerKbNum = feePerKbNum\n    return this\n  }\n\n  setChangeAddress (changeAddress) {\n    this.changeScript = changeAddress.toTxOutScript()\n    return this\n  }\n\n  setChangeScript (changeScript) {\n    this.changeScript = changeScript\n    return this\n  }\n\n  /**\n     * nLockTime is an unsigned integer.\n     */\n  setNLocktime (nLockTime) {\n    this.nLockTime = nLockTime\n    return this\n  }\n\n  setVersion (versionBytesNum) {\n    this.versionBytesNum = versionBytesNum\n    return this\n  }\n\n  /**\n     * Sometimes one of your outputs or the change output will be less than\n     * dust. Values less than dust cannot be broadcast. If you are OK with\n     * sending dust amounts to fees, then set this value to true.\n     */\n  setDust (dust = Constants.dust) {\n    this.dust = dust\n    return this\n  }\n\n  /**\n     * Sometimes one of your outputs or the change output will be less than\n     * dust. Values less than dust cannot be broadcast. If you are OK with\n     * sending dust amounts to fees, then set this value to true. We\n     * preferentially send all dust to the change if possible. However, that\n     * might not be possible if the change itself is less than dust, in which\n     * case all dust goes to fees.\n     */\n  sendDustChangeToFees (dustChangeToFees = false) {\n    this.dustChangeToFees = dustChangeToFees\n    return this\n  }\n\n  /**\n     * Import a transaction partially signed by someone else. The only thing you\n     * can do after this is sign one or more inputs. Usually used for multisig\n     * transactions. uTxOutMap is optional. It is not necessary so long as you\n     * pass in the txOut when you sign. You need to know the output when signing\n     * an input, including the script in the output, which is why this is\n     * necessary when signing an input.\n     */\n  importPartiallySignedTx (tx, uTxOutMap = this.uTxOutMap, sigOperations = this.sigOperations) {\n    this.tx = tx\n    this.uTxOutMap = uTxOutMap\n    this.sigOperations = sigOperations\n    return this\n  }\n\n  /**\n     * Pay \"from\" a script - in other words, add an input to the transaction.\n     */\n  inputFromScript (txHashBuf, txOutNum, txOut, script, nSequence) {\n    if (\n      !Buffer.isBuffer(txHashBuf) ||\n        !(typeof txOutNum === 'number') ||\n        !(txOut instanceof TxOut) ||\n        !(script instanceof Script)\n    ) {\n      throw new Error('invalid one of: txHashBuf, txOutNum, txOut, script')\n    }\n    this.txIns.push(\n      TxIn.fromProperties(txHashBuf, txOutNum, script, nSequence)\n    )\n    this.uTxOutMap.set(txHashBuf, txOutNum, txOut)\n    return this\n  }\n\n  addSigOperation (txHashBuf, txOutNum, nScriptChunk, type, addressStr, nHashType) {\n    this.sigOperations.addOne(txHashBuf, txOutNum, nScriptChunk, type, addressStr, nHashType)\n    return this\n  }\n\n  /**\n     * Pay \"from\" a pubKeyHash output - in other words, add an input to the\n     * transaction.\n     */\n  inputFromPubKeyHash (txHashBuf, txOutNum, txOut, pubKey, nSequence, nHashType) {\n    if (\n      !Buffer.isBuffer(txHashBuf) ||\n        typeof txOutNum !== 'number' ||\n        !(txOut instanceof TxOut)\n    ) {\n      throw new Error('invalid one of: txHashBuf, txOutNum, txOut')\n    }\n    this.txIns.push(\n      new TxIn()\n        .fromObject({ nSequence })\n        .fromPubKeyHashTxOut(txHashBuf, txOutNum, txOut, pubKey)\n    )\n    this.uTxOutMap.set(txHashBuf, txOutNum, txOut)\n    const addressStr = Address.fromTxOutScript(txOut.script).toString()\n    this.addSigOperation(txHashBuf, txOutNum, 0, 'sig', addressStr, nHashType)\n    this.addSigOperation(txHashBuf, txOutNum, 1, 'pubKey', addressStr)\n    return this\n  }\n\n  /**\n     * An address to send funds to, along with the amount. The amount should be\n     * denominated in satoshis, not bitcoins.\n     */\n  outputToAddress (valueBn, addr) {\n    if (!(addr instanceof Address) || !(valueBn instanceof Bn)) {\n      throw new Error('addr must be an Address, and valueBn must be a Bn')\n    }\n    const script = new Script().fromPubKeyHash(addr.hashBuf)\n    this.outputToScript(valueBn, script)\n    return this\n  }\n\n  /**\n     * A script to send funds to, along with the amount. The amount should be\n     * denominated in satoshis, not bitcoins.\n     */\n  outputToScript (valueBn, script) {\n    if (!(script instanceof Script) || !(valueBn instanceof Bn)) {\n      throw new Error('script must be a Script, and valueBn must be a Bn')\n    }\n    const txOut = TxOut.fromProperties(valueBn, script)\n    this.txOuts.push(txOut)\n    return this\n  }\n\n  buildOutputs () {\n    let outAmountBn = new Bn(0)\n    this.txOuts.forEach(txOut => {\n      if (txOut.valueBn.lt(this.dust) && !txOut.script.isNonSpendable()) {\n        throw new Error('cannot create output lesser than dust')\n      }\n      outAmountBn = outAmountBn.add(txOut.valueBn)\n      this.tx.addTxOut(txOut)\n    })\n    return outAmountBn\n  }\n\n  buildInputs (outAmountBn, extraInputsNum = 0) {\n    let inAmountBn = new Bn(0)\n    for (const txIn of this.txIns) {\n      const txOut = this.uTxOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n      inAmountBn = inAmountBn.add(txOut.valueBn)\n      this.tx.addTxIn(txIn)\n      if (inAmountBn.geq(outAmountBn)) {\n        if (extraInputsNum <= 0) {\n          break\n        }\n        extraInputsNum--\n      }\n    }\n    if (inAmountBn.lt(outAmountBn)) {\n      throw new Error(\n        'not enough funds for outputs: inAmountBn ' +\n            inAmountBn.toNumber() +\n            ' outAmountBn ' +\n            outAmountBn.toNumber()\n      )\n    }\n    return inAmountBn\n  }\n\n  // Thanks to SigOperations, if those are accurately used, then we can\n  // accurately estimate what the size of the transaction is going to be once\n  // all the signatures and public keys are inserted.\n  estimateSize () {\n    // largest possible sig size. final 1 is for pushdata at start. second to\n    // final is sighash byte. the rest are DER encoding.\n    const sigSize = 1 + 1 + 1 + 1 + 32 + 1 + 1 + 32 + 1 + 1\n    // length of script, y odd, x value - assumes compressed public key\n    const pubKeySize = 1 + 1 + 33\n\n    let size = this.tx.toBuffer().length\n\n    this.tx.txIns.forEach((txIn) => {\n      const { txHashBuf, txOutNum } = txIn\n      const sigOperations = this.sigOperations.get(txHashBuf, txOutNum)\n      sigOperations.forEach((obj) => {\n        const { nScriptChunk, type } = obj\n        const script = new Script([txIn.script.chunks[nScriptChunk]])\n        const scriptSize = script.toBuffer().length\n        size -= scriptSize\n        if (type === 'sig') {\n          size += sigSize\n        } else if (obj.type === 'pubKey') {\n          size += pubKeySize\n        } else {\n          throw new Error('unsupported sig operations type')\n        }\n      })\n    })\n\n    // size = size + sigSize * this.tx.txIns.length\n    size = size + 1 // assume txInsVi increases by 1 byte\n    return Math.round(size)\n  }\n\n  estimateFee (extraFeeAmount = new Bn(0)) {\n    // old style rounding up per kb - pays too high fees:\n    // const fee = Math.ceil(this.estimateSize() / 1000) * this.feePerKbNum\n\n    // new style pays lower fees - rounds up to satoshi, not per kb:\n    const fee = Math.ceil(this.estimateSize() / 1000 * this.feePerKbNum)\n\n    return new Bn(fee).add(extraFeeAmount)\n  }\n\n  /**\n     * Builds the transaction and adds the appropriate fee by subtracting from\n     * the change output. Note that by default the TxBuilder will use as many\n     * inputs as necessary to pay the output amounts and the required fee. The\n     * TxBuilder will not necessarily us all the inputs. To force the TxBuilder\n     * to use all the inputs (such as if you wish to spend the entire balance\n     * of a wallet), set the argument useAllInputs = true.\n     */\n  build (opts = { useAllInputs: false }) {\n    let minFeeAmountBn\n    if (this.txIns.length <= 0) {\n      throw Error('tx-builder number of inputs must be greater than 0')\n    }\n    if (!this.changeScript) {\n      throw new Error('must specify change script to use build method')\n    }\n    for (\n      let extraInputsNum = opts.useAllInputs ? this.txIns.length - 1 : 0;\n      extraInputsNum < this.txIns.length;\n      extraInputsNum++\n    ) {\n      this.tx = new Tx()\n      const outAmountBn = this.buildOutputs()\n      const changeTxOut = TxOut.fromProperties(new Bn(0), this.changeScript)\n      this.tx.addTxOut(changeTxOut)\n\n      let inAmountBn\n      try {\n        inAmountBn = this.buildInputs(outAmountBn, extraInputsNum)\n      } catch (err) {\n        if (err.message.includes('not enough funds for outputs')) {\n          throw new Error('unable to gather enough inputs for outputs and fee')\n        } else {\n          throw err\n        }\n      }\n\n      // Set change amount from inAmountBn - outAmountBn\n      this.changeAmountBn = inAmountBn.sub(outAmountBn)\n      changeTxOut.valueBn = this.changeAmountBn\n\n      minFeeAmountBn = this.estimateFee()\n      if (\n        this.changeAmountBn.geq(minFeeAmountBn) &&\n          this.changeAmountBn.sub(minFeeAmountBn).gt(this.dust)\n      ) {\n        break\n      }\n    }\n    if (this.changeAmountBn.geq(minFeeAmountBn)) {\n      // Subtract fee from change\n      this.feeAmountBn = minFeeAmountBn\n      this.changeAmountBn = this.changeAmountBn.sub(this.feeAmountBn)\n      this.tx.txOuts[this.tx.txOuts.length - 1].valueBn = this.changeAmountBn\n\n      if (this.changeAmountBn.lt(this.dust)) {\n        if (this.dustChangeToFees) {\n          // Remove the change amount since it is less than dust and the\n          // builder has requested dust be sent to fees.\n          this.tx.txOuts.pop()\n          this.tx.txOutsVi = VarInt.fromNumber(this.tx.txOutsVi.toNumber() - 1)\n          this.feeAmountBn = this.feeAmountBn.add(this.changeAmountBn)\n          this.changeAmountBn = new Bn(0)\n        } else {\n          throw new Error('unable to create change amount greater than dust')\n        }\n      }\n\n      this.tx.nLockTime = this.nLockTime\n      this.tx.versionBytesNum = this.versionBytesNum\n      if (this.tx.txOuts.length === 0) {\n        throw new Error(\n          'outputs length is zero - unable to create any outputs greater than dust'\n        )\n      }\n      return this\n    } else {\n      throw new Error('unable to gather enough inputs for outputs and fee')\n    }\n  }\n\n  // BIP 69 sorting. call after build() but before sign()\n  sort () {\n    this.tx.sort()\n    return this\n  }\n\n  /**\n     * Check if all signatures are present in a multisig input script.\n     */\n  static allSigsPresent (m, script) {\n    // The first element is a Famous MultiSig Bug OP_0, and last element is the\n    // redeemScript. The rest are signatures.\n    let present = 0\n    for (let i = 1; i < script.chunks.length - 1; i++) {\n      if (script.chunks[i].buf) {\n        present++\n      }\n    }\n    return present === m\n  }\n\n  /**\n     * Remove blank signatures in a multisig input script.\n     */\n  static removeBlankSigs (script) {\n    // The first element is a Famous MultiSig Bug OP_0, and last element is the\n    // redeemScript. The rest are signatures.\n    script = new Script(script.chunks.slice()) // copy the script\n    for (let i = 1; i < script.chunks.length - 1; i++) {\n      if (!script.chunks[i].buf) {\n        script.chunks.splice(i, 1) // remove ith element\n      }\n    }\n    return script\n  }\n\n  fillSig (nIn, nScriptChunk, sig) {\n    const txIn = this.tx.txIns[nIn]\n    txIn.script.chunks[nScriptChunk] = new Script().writeBuffer(\n      sig.toTxFormat()\n    ).chunks[0]\n    txIn.scriptVi = VarInt.fromNumber(txIn.script.toBuffer().length)\n    return this\n  }\n\n  /**\n     * Sign an input, but do not fill the signature into the transaction. Return\n     * the signature.\n     *\n     * For a normal transaction, subScript is usually the scriptPubKey. If\n     * you're not normal because you're using OP_CODESEPARATORs, you know what\n     * to do.\n     */\n  getSig (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    let valueBn\n    if (\n      nHashType & Sig.SIGHASH_FORKID &&\n        flags & Tx.SCRIPT_ENABLE_SIGHASH_FORKID\n    ) {\n      const txHashBuf = this.tx.txIns[nIn].txHashBuf\n      const txOutNum = this.tx.txIns[nIn].txOutNum\n      const txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n      if (!txOut) {\n        throw new Error('for SIGHASH_FORKID must provide UTXOs')\n      }\n      valueBn = txOut.valueBn\n    }\n    return this.tx.sign(keyPair, nHashType, nIn, subScript, valueBn, flags, this.hashCache)\n  }\n\n  /**\n     * Asynchronously sign an input in a worker, but do not fill the signature\n     * into the transaction. Return the signature.\n     */\n  asyncGetSig (keyPair, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, nIn, subScript, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    let valueBn\n    if (\n      nHashType & Sig.SIGHASH_FORKID &&\n        flags & Tx.SCRIPT_ENABLE_SIGHASH_FORKID\n    ) {\n      const txHashBuf = this.tx.txIns[nIn].txHashBuf\n      const txOutNum = this.tx.txIns[nIn].txOutNum\n      const txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n      if (!txOut) {\n        throw new Error('for SIGHASH_FORKID must provide UTXOs')\n      }\n      valueBn = txOut.valueBn\n    }\n    return this.tx.asyncSign(\n      keyPair,\n      nHashType,\n      nIn,\n      subScript,\n      valueBn,\n      flags,\n      this.hashCache\n    )\n  }\n\n  /**\n     * Sign ith input with keyPair and insert the signature into the transaction.\n     * This method only works for some standard transaction types. For\n     * non-standard transaction types, use getSig.\n     */\n  signTxIn (nIn, keyPair, txOut, nScriptChunk, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    const txIn = this.tx.txIns[nIn]\n    const script = txIn.script\n    if (nScriptChunk === undefined && script.isPubKeyHashIn()) {\n      nScriptChunk = 0\n    }\n    if (nScriptChunk === undefined) {\n      throw new Error('cannot sign unknown script type for input ' + nIn)\n    }\n    const txHashBuf = txIn.txHashBuf\n    const txOutNum = txIn.txOutNum\n    if (!txOut) {\n      txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n    }\n    const outScript = txOut.script\n    const subScript = outScript // true for standard script types\n    const sig = this.getSig(keyPair, nHashType, nIn, subScript, flags, this.hashCache)\n    this.fillSig(nIn, nScriptChunk, sig)\n    return this\n  }\n\n  /**\n     * Asynchronously sign ith input with keyPair in a worker and insert the\n     * signature into the transaction.  This method only works for some standard\n     * transaction types. For non-standard transaction types, use asyncGetSig.\n     */\n  async asyncSignTxIn (nIn, keyPair, txOut, nScriptChunk, nHashType = Sig.SIGHASH_ALL | Sig.SIGHASH_FORKID, flags = Tx.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    const txIn = this.tx.txIns[nIn]\n    const script = txIn.script\n    if (nScriptChunk === undefined && script.isPubKeyHashIn()) {\n      nScriptChunk = 0\n    }\n    if (nScriptChunk === undefined) {\n      throw new Error('cannot sign unknown script type for input ' + nIn)\n    }\n    const txHashBuf = txIn.txHashBuf\n    const txOutNum = txIn.txOutNum\n    if (!txOut) {\n      txOut = this.uTxOutMap.get(txHashBuf, txOutNum)\n    }\n    const outScript = txOut.script\n    const subScript = outScript // true for standard script types\n    const sig = await this.asyncGetSig(keyPair, nHashType, nIn, subScript, flags, this.hashCache)\n    this.fillSig(nIn, nScriptChunk, sig)\n    return this\n  }\n\n  signWithKeyPairs (keyPairs) {\n    // produce map of addresses to private keys\n    const addressStrMap = {}\n    for (const keyPair of keyPairs) {\n      const addressStr = Address.fromPubKey(keyPair.pubKey).toString()\n      addressStrMap[addressStr] = keyPair\n    }\n    // loop through all inputs\n    for (const nIn in this.tx.txIns) {\n      const txIn = this.tx.txIns[nIn]\n      // for each input, use sigOperations to get list of signatures and pubkeys\n      // to be produced and inserted\n      const arr = this.sigOperations.get(txIn.txHashBuf, txIn.txOutNum)\n      for (const obj of arr) {\n        // for each pubkey, get the privkey from the privkey map and sign the input\n        const { nScriptChunk, type, addressStr, nHashType } = obj\n        const keyPair = addressStrMap[addressStr]\n        if (!keyPair) {\n          obj.log = `cannot find keyPair for addressStr ${addressStr}`\n          continue\n        }\n        const txOut = this.uTxOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n        if (type === 'sig') {\n          this.signTxIn(nIn, keyPair, txOut, nScriptChunk, nHashType)\n          obj.log = 'successfully inserted signature'\n        } else if (type === 'pubKey') {\n          txIn.script.chunks[nScriptChunk] = new Script().writeBuffer(\n            keyPair.pubKey.toBuffer()\n          ).chunks[0]\n          txIn.setScript(txIn.script)\n          obj.log = 'successfully inserted public key'\n        } else {\n          obj.log = `cannot perform operation of type ${type}`\n          continue\n        }\n      }\n    }\n    return this\n  }\n}\n\nexport { TxBuilder }\n","/**\n * Transaction Verifier\n * ====================\n */\n'use strict'\n\nimport { Bn } from './bn'\nimport { Block } from './block'\nimport { Interp } from './interp'\nimport { Struct } from './struct'\nimport { Tx } from './tx'\nimport { Workers } from './workers'\n\nclass TxVerifier extends Struct {\n  constructor (tx, txOutMap, errStr, interp) {\n    super({ tx, txOutMap, errStr, interp })\n  }\n\n  /**\n     * Verifies that the transaction is valid both by performing basic checks, such\n     * as ensuring that no two inputs are the same, as well as by verifying every\n     * script. The two checks are checkStr, which is analagous to bitcoind's\n     * CheckTransaction, and verifyStr, which runs the script interpreter.\n     *\n     * This does NOT check that any possible claimed fees are accurate; checking\n     * that the fees are accurate requires checking that the input transactions are\n     * valid, which is not performed by this test. That check is done with the\n     * normal verify function.\n     */\n  verify (flags = Interp.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    return !this.checkStr() && !this.verifyStr(flags)\n  }\n\n  /*\n     * Returns true if the transaction was verified successfully (that is no\n     * error was found), and false otherwise. In case an error was found the\n     * error message can be accessed by calling this.getDebugString().\n     */\n  async asyncVerify (flags) {\n    const verifyStr = await this.asyncVerifyStr(flags)\n    return !this.checkStr() && !verifyStr\n  }\n\n  /**\n     * Convenience method to verify a transaction.\n     */\n  static verify (tx, txOutMap, flags) {\n    return new TxVerifier(tx, txOutMap).verify(flags)\n  }\n\n  static asyncVerify (tx, txOutMap, flags) {\n    return new TxVerifier(tx, txOutMap).asyncVerify(flags)\n  }\n\n  /**\n     * Check that a transaction passes basic sanity tests. If not, return a string\n     * describing the error. This function contains the same logic as\n     * CheckTransaction in bitcoin core.\n     */\n  checkStr () {\n    // Basic checks that don't depend on any context\n    if (this.tx.txIns.length === 0 || this.tx.txInsVi.toNumber() === 0) {\n      this.errStr = 'transaction txIns empty'\n      return this.errStr\n    }\n    if (this.tx.txOuts.length === 0 || this.tx.txOutsVi.toNumber() === 0) {\n      this.errStr = 'transaction txOuts empty'\n      return this.errStr\n    }\n\n    // Size limits\n    if (this.tx.toBuffer().length > Block.MAX_BLOCK_SIZE) {\n      this.errStr = 'transaction over the maximum block size'\n      return this.errStr\n    }\n\n    // Check for negative or overflow output values\n    let valueoutbn = new Bn(0)\n    for (let i = 0; i < this.tx.txOuts.length; i++) {\n      const txOut = this.tx.txOuts[i]\n      if (txOut.valueBn.lt(0)) {\n        this.errStr = 'transaction txOut ' + i + ' negative'\n        return this.errStr\n      }\n      if (txOut.valueBn.gt(Tx.MAX_MONEY)) {\n        this.errStr = 'transaction txOut ' + i + ' greater than MAX_MONEY'\n        return this.errStr\n      }\n      valueoutbn = valueoutbn.add(txOut.valueBn)\n      if (valueoutbn.gt(Tx.MAX_MONEY)) {\n        this.errStr =\n            'transaction txOut ' + i + ' total output greater than MAX_MONEY'\n        return this.errStr\n      }\n    }\n\n    // Check for duplicate inputs\n    const txInmap = {}\n    for (let i = 0; i < this.tx.txIns.length; i++) {\n      const txIn = this.tx.txIns[i]\n      const inputid = txIn.txHashBuf.toString('hex') + ':' + txIn.txOutNum\n      if (txInmap[inputid] !== undefined) {\n        this.errStr = 'transaction input ' + i + ' duplicate input'\n        return this.errStr\n      }\n      txInmap[inputid] = true\n    }\n\n    if (this.tx.isCoinbase()) {\n      const buf = this.tx.txIns[0].script.toBuffer()\n      if (buf.length < 2 || buf.length > 100) {\n        this.errStr = 'coinbase trasaction script size invalid'\n        return this.errStr\n      }\n    } else {\n      for (let i = 0; i < this.tx.txIns.length; i++) {\n        if (this.tx.txIns[i].hasNullInput()) {\n          this.errStr = 'transaction input ' + i + ' has null input'\n          return this.errStr\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n     * verify the transaction inputs by running the script interpreter. Returns a\n     * string of the script interpreter is invalid, otherwise returns false.\n     */\n  verifyStr (flags) {\n    for (let i = 0; i < this.tx.txIns.length; i++) {\n      if (!this.verifyNIn(i, flags)) {\n        this.errStr = 'input ' + i + ' failed script verify'\n        return this.errStr\n      }\n    }\n    return false\n  }\n\n  async asyncVerifyStr (flags) {\n    for (let i = 0; i < this.tx.txIns.length; i++) {\n      const verifyNIn = await this.asyncVerifyNIn(i, flags)\n      if (!verifyNIn) {\n        this.errStr = 'input ' + i + ' failed script verify'\n        return this.errStr\n      }\n    }\n    return false\n  }\n\n  /**\n     * Verify a particular input by running the script interpreter. Returns true if\n     * the input is valid, false otherwise.\n     */\n  verifyNIn (nIn, flags) {\n    const txIn = this.tx.txIns[nIn]\n    const scriptSig = txIn.script\n    const txOut = this.txOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n    if (!txOut) {\n      console.log('output ' + txIn.txOutNum + ' not found')\n      return false\n    }\n    const scriptPubKey = txOut.script\n    const valueBn = txOut.valueBn\n    this.interp = new Interp()\n    const verified = this.interp.verify(\n      scriptSig,\n      scriptPubKey,\n      this.tx,\n      nIn,\n      flags,\n      valueBn\n    )\n    return verified\n  }\n\n  async asyncVerifyNIn (nIn, flags) {\n    const txIn = this.tx.txIns[nIn]\n    const scriptSig = txIn.script\n    const txOut = this.txOutMap.get(txIn.txHashBuf, txIn.txOutNum)\n    if (!txOut) {\n      console.log('output ' + txIn.txOutNum + ' not found')\n      return false\n    }\n    const scriptPubKey = txOut.script\n    const valueBn = txOut.valueBn\n    this.interp = new Interp()\n    const workersResult = await Workers.asyncObjectMethod(\n      this.interp,\n      'verify',\n      [scriptSig, scriptPubKey, this.tx, nIn, flags, valueBn]\n    )\n    const verified = JSON.parse(workersResult.resbuf.toString())\n    return verified\n  }\n\n  getDebugObject () {\n    return {\n      errStr: this.errStr,\n      interpFailure: this.interp ? this.interp.getDebugObject() : undefined\n    }\n  }\n\n  getDebugString () {\n    return JSON.stringify(this.getDebugObject(), null, 2)\n  }\n}\n\nexport { TxVerifier }\n","/**\n * Aes (experimental)\n * ==================\n *\n * Advanced Encryption Standard (Aes). This is a low-level tool for encrypting\n * or decrypting blocks of data. There is almost never a reason to use this -\n * don't use it unless you need to encrypt or decrypt individual blocks.\n */\n'use strict'\n\nimport _Aes from 'aes'\n\nclass Aes { }\n\nAes.encrypt = function (messageBuf, keyBuf) {\n  const key = Aes.buf2Words(keyBuf)\n  const message = Aes.buf2Words(messageBuf)\n  const a = new _Aes(key)\n  const enc = a.encrypt(message)\n  const encBuf = Aes.words2Buf(enc)\n  return encBuf\n}\n\nAes.decrypt = function (encBuf, keyBuf) {\n  const enc = Aes.buf2Words(encBuf)\n  const key = Aes.buf2Words(keyBuf)\n  const a = new _Aes(key)\n  const message = a.decrypt(enc)\n  const messageBuf = Aes.words2Buf(message)\n  return messageBuf\n}\n\nAes.buf2Words = function (buf) {\n  if (buf.length % 4) {\n    throw new Error('buf length must be a multiple of 4')\n  }\n\n  const words = []\n\n  for (let i = 0; i < buf.length / 4; i++) {\n    words.push(buf.readUInt32BE(i * 4))\n  }\n\n  return words\n}\n\nAes.words2Buf = function (words) {\n  const buf = Buffer.alloc(words.length * 4)\n\n  for (let i = 0; i < words.length; i++) {\n    buf.writeUInt32BE(words[i], i * 4)\n  }\n\n  return buf\n}\n\nexport { Aes }\n","/**\n * Cbc\n * ===\n *\n * Cipher Block Chaining (Cbc). This is a low-level tool for chaining multiple\n * encrypted blocks together, usually with Aes. This is a low-level tool that\n * does not include authentication. You should only be using this if you have\n * authentication at another step. It is best combined with Hmac.\n *\n * http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher-block_chaining_.28Cbc.29\n */\n'use strict'\n\nimport { cmp } from './cmp'\n\nclass Cbc {}\n\nCbc.buf2BlocksBuf = function (buf, blockSize) {\n  const bytesize = blockSize / 8\n  const blockBufs = []\n\n  for (let i = 0; i <= buf.length / bytesize; i++) {\n    let blockBuf = buf.slice(i * bytesize, i * bytesize + bytesize)\n\n    if (blockBuf.length < blockSize) {\n      blockBuf = Cbc.pkcs7Pad(blockBuf, blockSize)\n    }\n\n    blockBufs.push(blockBuf)\n  }\n\n  return blockBufs\n}\n\nCbc.blockBufs2Buf = function (blockBufs) {\n  let last = blockBufs[blockBufs.length - 1]\n  last = Cbc.pkcs7Unpad(last)\n  blockBufs[blockBufs.length - 1] = last\n\n  const buf = Buffer.concat(blockBufs)\n\n  return buf\n}\n\nCbc.encrypt = function (messageBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const blockSize = ivBuf.length * 8\n  const blockBufs = Cbc.buf2BlocksBuf(messageBuf, blockSize)\n  const encBufs = Cbc.encryptBlocks(blockBufs, ivBuf, blockCipher, cipherKeyBuf)\n  const encBuf = Buffer.concat(encBufs)\n  return encBuf\n}\n\nCbc.decrypt = function (encBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const bytesize = ivBuf.length\n  const encBufs = []\n  for (let i = 0; i < encBuf.length / bytesize; i++) {\n    encBufs.push(encBuf.slice(i * bytesize, i * bytesize + bytesize))\n  }\n  const blockBufs = Cbc.decryptBlocks(encBufs, ivBuf, blockCipher, cipherKeyBuf)\n  const buf = Cbc.blockBufs2Buf(blockBufs)\n  return buf\n}\n\nCbc.encryptBlock = function (blockBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const xorbuf = Cbc.xorBufs(blockBuf, ivBuf)\n  const encBuf = blockCipher.encrypt(xorbuf, cipherKeyBuf)\n  return encBuf\n}\n\nCbc.decryptBlock = function (encBuf, ivBuf, blockCipher, cipherKeyBuf) {\n  const xorbuf = blockCipher.decrypt(encBuf, cipherKeyBuf)\n  const blockBuf = Cbc.xorBufs(xorbuf, ivBuf)\n  return blockBuf\n}\n\nCbc.encryptBlocks = function (blockBufs, ivBuf, blockCipher, cipherKeyBuf) {\n  const encBufs = []\n\n  for (let i = 0; i < blockBufs.length; i++) {\n    const blockBuf = blockBufs[i]\n    const encBuf = Cbc.encryptBlock(blockBuf, ivBuf, blockCipher, cipherKeyBuf)\n\n    encBufs.push(encBuf)\n\n    ivBuf = encBuf\n  }\n\n  return encBufs\n}\n\nCbc.decryptBlocks = function (encBufs, ivBuf, blockCipher, cipherKeyBuf) {\n  const blockBufs = []\n\n  for (let i = 0; i < encBufs.length; i++) {\n    const encBuf = encBufs[i]\n    const blockBuf = Cbc.decryptBlock(encBuf, ivBuf, blockCipher, cipherKeyBuf)\n\n    blockBufs.push(blockBuf)\n\n    ivBuf = encBuf\n  }\n\n  return blockBufs\n}\n\nCbc.pkcs7Pad = function (buf, blockSize) {\n  const bytesize = blockSize / 8\n  const padbytesize = bytesize - buf.length\n  const pad = Buffer.alloc(padbytesize)\n  pad.fill(padbytesize)\n  const paddedbuf = Buffer.concat([buf, pad])\n  return paddedbuf\n}\n\nCbc.pkcs7Unpad = function (paddedbuf) {\n  const padlength = paddedbuf[paddedbuf.length - 1]\n  const padbuf = paddedbuf.slice(paddedbuf.length - padlength, paddedbuf.length)\n  const padbuf2 = Buffer.alloc(padlength)\n  padbuf2.fill(padlength)\n  if (!cmp(padbuf, padbuf2)) {\n    throw new Error('invalid padding')\n  }\n  return paddedbuf.slice(0, paddedbuf.length - padlength)\n}\n\nCbc.xorBufs = function (buf1, buf2) {\n  if (buf1.length !== buf2.length) {\n    throw new Error('bufs must have the same length')\n  }\n\n  const buf = Buffer.alloc(buf1.length)\n\n  for (let i = 0; i < buf1.length; i++) {\n    buf[i] = buf1[i] ^ buf2[i]\n  }\n\n  return buf\n}\n\nexport { Cbc }\n","/**\n * Aescbc (experimental)\n * =====================\n *\n * This is a convenience class for using Aes with Cbc. This is a low-level tool\n * that does not include authentication. You should only use this if you are\n * authenticating your data somehow else.\n */\n'use strict'\n\nimport { Aes } from './aes'\nimport { Cbc } from './cbc'\nimport { Random } from './random'\n\nclass Aescbc { }\n\nAescbc.encrypt = function (messageBuf, cipherKeyBuf, ivBuf, concatIvBuf = true) {\n  ivBuf = ivBuf || Random.getRandomBuffer(128 / 8)\n  const ctBuf = Cbc.encrypt(messageBuf, ivBuf, Aes, cipherKeyBuf)\n  if (concatIvBuf) {\n    return Buffer.concat([ivBuf, ctBuf])\n  } else {\n    return ctBuf\n  }\n}\n\nAescbc.decrypt = function (encBuf, cipherKeyBuf, ivBuf = false) {\n  if (!ivBuf) {\n    const ivBuf = encBuf.slice(0, 128 / 8)\n    const ctBuf = encBuf.slice(128 / 8)\n    return Cbc.decrypt(ctBuf, ivBuf, Aes, cipherKeyBuf)\n  } else {\n    const ctBuf = encBuf\n    return Cbc.decrypt(ctBuf, ivBuf, Aes, cipherKeyBuf)\n  }\n}\n\nexport { Aescbc }\n","/**\n * Ach (Aes+Cbc+Hmac) (experimental)\n * =================================\n *\n * An \"encrypt-then-MAC\" that uses Aes, Cbc and SHA256 Hmac. This is suitable\n * for general encryption of data.\n *\n * The encrypted data takes the form:\n * (256 bit hmac)(128 bit iv)(128+ bits Aes+Cbc encrypted message)\n */\n'use strict'\n\nimport { Aescbc } from './aescbc'\nimport { Hash } from './hash'\nimport { Random } from './random'\nimport { Workers } from './workers'\nimport { cmp } from './cmp'\n\nclass Ach { }\n\nAch.encrypt = function (messageBuf, cipherKeyBuf, ivBuf) {\n  const encBuf = Aescbc.encrypt(messageBuf, cipherKeyBuf, ivBuf)\n  const hmacbuf = Hash.sha256Hmac(encBuf, cipherKeyBuf)\n  return Buffer.concat([hmacbuf, encBuf])\n}\n\nAch.asyncEncrypt = async function (messageBuf, cipherKeyBuf, ivBuf) {\n  if (!ivBuf) {\n    ivBuf = Random.getRandomBuffer(128 / 8)\n  }\n  const args = [messageBuf, cipherKeyBuf, ivBuf]\n  const workersResult = await Workers.asyncClassMethod(Ach, 'encrypt', args)\n  return workersResult.resbuf\n}\n\nAch.decrypt = function (encBuf, cipherKeyBuf) {\n  if (encBuf.length < (256 + 128 + 128) / 8) {\n    throw new Error(\n      'The encrypted data must be at least 256+128+128 bits, which is the length of the Hmac plus the iv plus the smallest encrypted data size'\n    )\n  }\n  const hmacbuf = encBuf.slice(0, 256 / 8)\n  encBuf = encBuf.slice(256 / 8, encBuf.length)\n  const hmacbuf2 = Hash.sha256Hmac(encBuf, cipherKeyBuf)\n  if (!cmp(hmacbuf, hmacbuf2)) {\n    throw new Error(\n      'Message authentication failed - Hmacs are not equivalent'\n    )\n  }\n  return Aescbc.decrypt(encBuf, cipherKeyBuf)\n}\n\nAch.asyncDecrypt = async function (encBuf, cipherKeyBuf) {\n  const args = [encBuf, cipherKeyBuf]\n  const workersResult = await Workers.asyncClassMethod(Ach, 'decrypt', args)\n  return workersResult.resbuf\n}\n\nexport { Ach }\n","/**\n * Ecies\n * =====\n */\n'use strict'\n\nimport { Aescbc } from './aescbc'\nimport { cmp } from './cmp'\nimport { Hash } from './hash'\nimport { KeyPair } from './key-pair'\nimport { Point } from './point'\nimport { PubKey } from './pub-key'\nimport { Random } from './random'\nimport { Workers } from './workers'\n\nclass Ecies {}\n\nEcies.ivkEkM = function (privKey, pubKey) {\n  const r = privKey.bn\n  const KB = pubKey.point\n  const P = KB.mul(r)\n  const S = new PubKey(P)\n  const Sbuf = S.toBuffer()\n  const hash = Hash.sha512(Sbuf)\n  return {\n    iv: hash.slice(0, 16),\n    kE: hash.slice(16, 32),\n    kM: hash.slice(32, 64)\n  }\n}\n\nEcies.electrumEncrypt = function (messageBuf, toPubKey, fromKeyPair, noKey = false) {\n  if (!Buffer.isBuffer(messageBuf)) {\n    throw new Error('messageBuf must be a buffer')\n  }\n  let Rbuf\n  if (fromKeyPair === null) {\n    fromKeyPair = KeyPair.fromRandom()\n  }\n  if (!noKey) {\n    Rbuf = fromKeyPair.pubKey.toDer(true)\n  }\n  const { iv, kE, kM } = Ecies.ivkEkM(fromKeyPair.privKey, toPubKey)\n  const ciphertext = Aescbc.encrypt(messageBuf, kE, iv, false)\n  const BIE1 = Buffer.from('BIE1')\n  let encBuf\n  if (Rbuf) {\n    encBuf = Buffer.concat([BIE1, Rbuf, ciphertext])\n  } else {\n    encBuf = Buffer.concat([BIE1, ciphertext])\n  }\n  const hmac = Hash.sha256Hmac(encBuf, kM)\n  return Buffer.concat([encBuf, hmac])\n}\n\nEcies.electrumDecrypt = function (encBuf, toPrivKey, fromPubKey = null) {\n  if (!Buffer.isBuffer(encBuf)) {\n    throw new Error('encBuf must be a buffer')\n  }\n  const tagLength = 32\n\n  const magic = encBuf.slice(0, 4)\n  if (!magic.equals(Buffer.from('BIE1'))) {\n    throw new Error('Invalid Magic')\n  }\n  let offset = 4\n  if (fromPubKey === null) {\n    // BIE1 use compressed public key, length is always 33.\n    const pub = encBuf.slice(4, 37)\n    fromPubKey = PubKey.fromDer(pub)\n    offset = 37\n  }\n  const { iv, kE, kM } = Ecies.ivkEkM(toPrivKey, fromPubKey)\n  const ciphertext = encBuf.slice(offset, encBuf.length - tagLength)\n  const hmac = encBuf.slice(encBuf.length - tagLength, encBuf.length)\n\n  const hmac2 = Hash.sha256Hmac(encBuf.slice(0, encBuf.length - tagLength), kM)\n\n  if (!hmac.equals(hmac2)) {\n    throw new Error('Invalid checksum')\n  }\n  return Aescbc.decrypt(ciphertext, kE, iv)\n}\n\nEcies.bitcoreEncrypt = function (messageBuf, toPubKey, fromKeyPair, ivBuf) {\n  if (!fromKeyPair) {\n    fromKeyPair = KeyPair.fromRandom()\n  }\n  const r = fromKeyPair.privKey.bn\n  const RPubKey = fromKeyPair.pubKey\n  const RBuf = RPubKey.toDer(true)\n  const KB = toPubKey.point\n  const P = KB.mul(r)\n  const S = P.getX()\n  const Sbuf = S.toBuffer({ size: 32 })\n  const kEkM = Hash.sha512(Sbuf)\n  const kE = kEkM.slice(0, 32)\n  const kM = kEkM.slice(32, 64)\n  const c = Aescbc.encrypt(messageBuf, kE, ivBuf)\n  const d = Hash.sha256Hmac(c, kM)\n  const encBuf = Buffer.concat([RBuf, c, d])\n  return encBuf\n}\n\nEcies.asyncBitcoreEncrypt = async function (\n  messageBuf,\n  toPubKey,\n  fromKeyPair,\n  ivBuf\n) {\n  if (!fromKeyPair) {\n    fromKeyPair = await KeyPair.asyncFromRandom()\n  }\n  if (!ivBuf) {\n    ivBuf = Random.getRandomBuffer(128 / 8)\n  }\n  const args = [messageBuf, toPubKey, fromKeyPair, ivBuf]\n  const workersResult = await Workers.asyncClassMethod(Ecies, 'bitcoreEncrypt', args)\n  return workersResult.resbuf\n}\n\nEcies.bitcoreDecrypt = function (encBuf, toPrivKey) {\n  const kB = toPrivKey.bn\n  const fromPubKey = PubKey.fromDer(encBuf.slice(0, 33))\n  const R = fromPubKey.point\n  const P = R.mul(kB)\n  if (P.eq(new Point())) {\n    throw new Error('P equals 0')\n  }\n  const S = P.getX()\n  const Sbuf = S.toBuffer({ size: 32 })\n  const kEkM = Hash.sha512(Sbuf)\n  const kE = kEkM.slice(0, 32)\n  const kM = kEkM.slice(32, 64)\n  const c = encBuf.slice(33, encBuf.length - 32)\n  const d = encBuf.slice(encBuf.length - 32, encBuf.length)\n  const d2 = Hash.sha256Hmac(c, kM)\n  if (!cmp(d, d2)) {\n    throw new Error('Invalid checksum')\n  }\n  const messageBuf = Aescbc.decrypt(c, kE)\n  return messageBuf\n}\n\nEcies.asyncBitcoreDecrypt = async function (encBuf, toPrivKey) {\n  const args = [encBuf, toPrivKey]\n  const workersResult = await Workers.asyncClassMethod(Ecies, 'bitcoreDecrypt', args)\n  return workersResult.resbuf\n}\n\nexport { Ecies }\n","/**\n * bsv\n * ===\n *\n * entry.js is the entry point for a the js bundlers.\n * Webpack and microbundlers, both start use this file as\n * the entry point to bundle the entire library.\n */\nimport aes from 'aes'\nimport bnjs from 'bn.js'\nimport bs58 from 'bs58'\n\nimport elliptic from 'bitcoin-elliptic'\nimport hashjs from 'hash.js'\nimport pbkdf2 from 'pbkdf2'\n\n// version string.\nimport pkgInfo from './package.json'\n\n// Dependencies, subject to change.\nconst deps = {\n  aes,\n  bnjs,\n  bs58,\n  elliptic,\n  hashjs,\n  pbkdf2,\n  Buffer\n}\n\nexport { deps }\nconst version = pkgInfo.version\nexport { version }\n\n// Main bitcoin library - bitcoin protocols, standards, cryptography, and\n// utilities.\nexport * from './lib/address'\nexport * from './lib/bip-32'\nexport * from './lib/bip-39'\nexport * from './lib/bip-39-words'\nexport * from './lib/bn'\nexport * from './lib/br'\nexport * from './lib/bsm'\nexport * from './lib/bw'\nexport * from './lib/base-58'\nexport * from './lib/base-58-check'\nexport * from './lib/block'\nexport * from './lib/block-header'\nexport * from './lib/constants'\nexport * from './lib/ecdsa'\nexport * from './lib/hash'\nexport * from './lib/interp'\nexport * from './lib/key-pair'\nexport * from './lib/op-code'\nexport * from './lib/point'\nexport * from './lib/priv-key'\nexport * from './lib/pub-key'\nexport * from './lib/random'\nexport * from './lib/script'\nexport * from './lib/sig'\nexport * from './lib/sig-operations'\nexport * from './lib/struct'\nexport * from './lib/tx'\nexport * from './lib/tx-builder'\nexport * from './lib/tx-in'\nexport * from './lib/tx-out'\nexport * from './lib/tx-out-map'\nexport * from './lib/tx-verifier'\nexport * from './lib/var-int'\nexport * from './lib/workers'\nexport * from './lib/workers-result'\nexport * from './lib/cmp'\n\n// Encryption tools. Some bitcoin standards use Aes encryption, so that's why\n// these are available.\nexport * from './lib/ach'\nexport * from './lib/aes'\nexport * from './lib/aescbc'\nexport * from './lib/cbc'\nexport * from './lib/ecies'\n","\n\nmodule.exports = AES;\n\n//@param {Array} key The key as an array of 4, 6 or 8 words.\nfunction AES (key) {\n  if (!this._tables[0][0][0]) this._precompute();\n  \n  var tmp, encKey, decKey;\n  var sbox = this._tables[0][4];\n  var decTable = this._tables[1];\n  var keyLen = key.length; \n  var rcon = 1;\n  \n  if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n    throw new Error(\"invalid aes key size\");\n  }\n  \n  this._key = [encKey = key.slice(0), decKey = []];\n  \n  // schedule encryption keys\n  for (var i = keyLen; i < 4 * keyLen + 28; i++) {\n    tmp = encKey[i-1];\n    \n    // apply sbox\n    if (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n      tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255]<< 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n      \n      // shift rows and add rcon\n      if (i % keyLen === 0) {\n        tmp = tmp << 8 ^ tmp >>> 24 ^ rcon<<24;\n        rcon = rcon << 1 ^ (rcon >> 7) * 283;\n      }\n    }\n    \n    encKey[i] = encKey[i-keyLen] ^ tmp;\n  }\n  \n  // schedule decryption keys\n  for (var j = 0; i; j++, i--) {\n    tmp = encKey[j&3 ? i : i - 4];\n    if (i<=4 || j<4) {\n      decKey[j] = tmp;\n    } else {\n      decKey[j] = decTable[0][sbox[tmp>>>24      ]] ^\n                  decTable[1][sbox[tmp>>16  & 255]] ^\n                  decTable[2][sbox[tmp>>8   & 255]] ^\n                  decTable[3][sbox[tmp      & 255]];\n    }\n  }\n};\n\nAES.prototype = {\n  \n  /**\n   * Encrypt an array of 4 big-endian words.\n   * @param {Array} data The plaintext.\n   * @return {Array} The ciphertext.\n   */\n  encrypt:function (data) { return this._crypt(data, 0); },\n  \n  /**\n   * Decrypt an array of 4 big-endian words.\n   * @param {Array} data The ciphertext.\n   * @return {Array} The plaintext.\n   */\n  decrypt:function (data) { return this._crypt(data, 1); },\n  \n  /**\n   * The expanded S-box and inverse S-box tables.  These will be computed\n   * on the client so that we don't have to send them down the wire.\n   *\n   * There are two tables, _tables[0] is for encryption and\n   * _tables[1] is for decryption.\n   *\n   * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n   * last (_tables[01][4]) is the S-box itself.\n   *\n   * @private\n   */\n  _tables: [\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ],\n    [ new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256) ]\n  ],\n\n  //Expand the S-box tables.\n  _precompute: function () {\n    var encTable = this._tables[0], decTable = this._tables[1],\n       sbox = encTable[4], sboxInv = decTable[4],\n       i, x, xInv, d=new Uint8Array(256), th=new Uint8Array(256), x2, x4, x8, s, tEnc, tDec;\n\n    // Compute double and third tables\n    for (i = 0; i < 256; i++) {\n      th[( d[i] = i<<1 ^ (i>>7)*283 )^i]=i;\n    }\n   \n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x;\n       \n      // Compute MixColumns\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8*0x1010101 ^ x4*0x10001 ^ x2*0x101 ^ x*0x1010100;\n      tEnc = d[s]*0x101 ^ s*0x1010100;\n       \n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc<<24 ^ tEnc>>>8;\n        decTable[i][s] = tDec = tDec<<24 ^ tDec>>>8;\n      }\n    }\n  },\n  \n  /**\n   * Encryption and decryption core.\n   * @param {Array} input Four words to be encrypted or decrypted.\n   * @param dir The direction, 0 for encrypt and 1 for decrypt.\n   * @return {Array} The four encrypted or decrypted words.\n   * @private\n   */\n  _crypt:function (input, dir) {\n    if (input.length !== 4) {\n      throw new Error(\"invalid aes block size\");\n    }\n    \n    var key = this._key[dir],\n        // state variables a,b,c,d are loaded with pre-whitened data\n        a = input[0]           ^ key[0],\n        b = input[dir ? 3 : 1] ^ key[1],\n        c = input[2]           ^ key[2],\n        d = input[dir ? 1 : 3] ^ key[3],\n        a2, b2, c2,\n        \n        nInnerRounds = key.length/4 - 2,\n        i,\n        kIndex = 4,\n        out = new Uint32Array(4),// <--- this is slower in Node.js, about the same in Chrome */ \n        table = this._tables[dir],\n        \n        // load up the tables\n        t0    = table[0],\n        t1    = table[1],\n        t2    = table[2],\n        t3    = table[3],\n        sbox  = table[4];\n \n    // Inner rounds.  Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = t0[a>>>24] ^ t1[b>>16 & 255] ^ t2[c>>8 & 255] ^ t3[d & 255] ^ key[kIndex];\n      b2 = t0[b>>>24] ^ t1[c>>16 & 255] ^ t2[d>>8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n      c2 = t0[c>>>24] ^ t1[d>>16 & 255] ^ t2[a>>8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n      d  = t0[d>>>24] ^ t1[a>>16 & 255] ^ t2[b>>8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a=a2; b=b2; c=c2;\n    }\n        \n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[dir ? 3&-i : i] =\n        sbox[a>>>24      ]<<24 ^ \n        sbox[b>>16  & 255]<<16 ^\n        sbox[c>>8   & 255]<<8  ^\n        sbox[d      & 255]     ^\n        key[kIndex++];\n      a2=a; a=b; b=c; c=d; d=a2;\n    }\n    \n    return out;\n  }\n};\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type !== 'short')\n    throw new Error('invalid curve type')\n  this.curve = new curve.short(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","module.exports = require('crypto').createHmac\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict'\n\nvar hexRegEx = /([0-9]|[a-f])/gim\n\nmodule.exports = function (input) {\n  return typeof input === 'string' &&\n    (input.match(hexRegEx) || []).length === input.length\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var native = require('crypto')\n\nvar checkParameters = require('./lib/precondition')\nvar defaultEncoding = require('./lib/default-encoding')\nvar toBuffer = require('./lib/to-buffer')\n\nfunction nativePBKDF2 (password, salt, iterations, keylen, digest, callback) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = 'sha1'\n  }\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  return native.pbkdf2(password, salt, iterations, keylen, digest, callback)\n}\n\nfunction nativePBKDF2Sync (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  digest = digest || 'sha1'\n  return native.pbkdf2Sync(password, salt, iterations, keylen, digest)\n}\n\n/* istanbul ignore next */\nif (!native.pbkdf2Sync || native.pbkdf2Sync.toString().indexOf('keylen, digest') === -1) {\n  exports.pbkdf2Sync = require('./lib/sync')\n  exports.pbkdf2 = require('./lib/async')\n\n// native\n} else {\n  exports.pbkdf2Sync = nativePBKDF2Sync\n  exports.pbkdf2 = nativePBKDF2\n}\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nvar createHmac = require('create-hmac')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = createHmac(digest, password).update(block1).digest()\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","module.exports = require('crypto').randomBytes\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = require(\"buffer\");;","module.exports = require(\"crypto\");;","module.exports = require(\"util\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(671);\n"],"mappings":"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M,CAAA,CAAUC,OAAA,CAAQM,KAAA,EAClBuL,CAAA,CAAA7L,OAAA;UAAA;QAAA,GAKN6R,CAAA,CAAMxQ,OAAA,GAAU,cAAcwQ,CAAA;UAC5B5d,YACEhB,CAAA,EACAC,CAAA,EACAC,CAAA,EACA6B,CAAA,EACAe,CAAA,EACAwE,CAAA,EACAnH,CAAA;YAEA,MACEH,CAAA,EACAC,CAAA,EACAC,CAAA,EACA6B,CAAA,EACAe,CAAA,EACAwE,CAAA,EACAnH,CAAA,EACA2M,CAAA,CAAUsB,OAAA,CAAQf,KAAA,EAClBuL,CAAA,CAAAxK,OAAA;UAAA;QAAA;QCjdN,MAAMqR,CAAA,GAAW,CACf,WACA,WACA,QACA,SACA,SACA,UACA,UACA,YACA,UACA,SACA,UACA,YACA,WACA,UACA,WACA,QACA,YACA,WACA,UACA,OACA,UACA,SACA,WACA,UACA,SACA,OACA,UACA,WACA,UACA,SACA,SACA,WACA,UACA,WACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,OACA,OACA,WACA,SACA,SACA,SACA,WACA,SACA,SACA,OACA,SACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,SACA,UACA,UACA,WACA,UACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,UACA,WACA,UACA,UACA,SACA,OACA,YACA,UACA,WACA,OACA,UACA,WACA,SACA,UACA,UACA,UACA,WACA,QACA,UACA,UACA,YACA,WACA,WACA,SACA,UACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,SACA,SACA,QACA,WACA,SACA,WACA,QACA,QACA,YACA,SACA,SACA,OACA,WACA,WACA,QACA,UACA,UACA,UACA,OACA,UACA,WACA,UACA,QACA,SACA,UACA,UACA,SACA,QACA,UACA,WACA,UACA,QACA,UACA,SACA,UACA,UACA,WACA,SACA,QACA,SACA,WACA,QACA,UACA,UACA,WACA,UACA,WACA,OACA,QACA,QACA,WACA,QACA,SACA,UACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,WACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,OACA,OACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,YACA,UACA,UACA,SACA,WACA,SACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,SACA,OACA,YACA,QACA,UACA,SACA,QACA,WACA,SACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,OACA,UACA,QACA,SACA,UACA,SACA,QACA,QACA,QACA,UACA,UACA,UACA,OACA,WACA,SACA,YACA,UACA,UACA,SACA,WACA,QACA,WACA,UACA,UACA,UACA,WACA,UACA,WACA,SACA,SACA,YACA,UACA,SACA,WACA,UACA,SACA,QACA,SACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,SACA,WACA,UACA,UACA,WACA,WACA,SACA,SACA,SACA,YACA,UACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,WACA,UACA,SACA,SACA,WACA,QACA,UACA,QACA,QACA,WACA,SACA,UACA,WACA,QACA,WACA,SACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,YACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,QACA,WACA,SACA,SACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,UACA,WACA,UACA,SACA,OACA,WACA,QACA,WACA,OACA,YACA,WACA,WACA,WACA,SACA,WACA,UACA,QACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,QACA,YACA,QACA,OACA,QACA,UACA,UACA,UACA,YACA,UACA,WACA,YACA,YACA,QACA,WACA,UACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,QACA,UACA,UACA,WACA,SACA,UACA,UACA,YACA,UACA,UACA,QACA,WACA,WACA,UACA,UACA,WACA,UACA,UACA,WACA,QACA,WACA,SACA,QACA,UACA,QACA,UACA,WACA,WACA,WACA,UACA,YACA,UACA,QACA,YACA,YACA,WACA,QACA,WACA,YACA,WACA,YACA,UACA,UACA,WACA,SACA,UACA,YACA,OACA,QACA,WACA,UACA,UACA,UACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,SACA,WACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,WACA,SACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,WACA,WACA,QACA,QACA,WACA,UACA,OACA,SACA,UACA,SACA,SACA,YACA,WACA,WACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,SACA,UACA,SACA,OACA,WACA,WACA,SACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,YACA,WACA,SACA,SACA,OACA,SACA,SACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,WACA,UACA,YACA,QACA,SACA,UACA,SACA,WACA,UACA,YACA,UACA,WACA,UACA,WACA,YACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,SACA,OACA,WACA,UACA,QACA,WACA,QACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,OACA,SACA,WACA,QACA,WACA,OACA,SACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,OACA,QACA,QACA,UACA,SACA,YACA,SACA,SACA,OACA,SACA,WACA,SACA,UACA,QACA,QACA,UACA,SACA,QACA,QACA,UACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,WACA,OACA,QACA,SACA,SACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,OACA,QACA,SACA,OACA,QACA,QACA,UACA,QACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,WACA,UACA,UACA,SACA,OACA,WACA,SACA,YACA,SACA,UACA,UACA,QACA,SACA,SACA,SACA,UACA,SACA,QACA,OACA,SACA,WACA,QACA,UACA,UACA,QACA,UACA,WACA,QACA,OACA,UACA,WACA,UACA,UACA,WACA,OACA,QACA,QACA,UACA,SACA,QACA,WACA,UACA,SACA,UACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,WACA,UACA,UACA,UACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,WACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,OACA,OACA,SACA,QACA,QACA,UACA,WACA,QACA,SACA,UACA,QACA,SACA,WACA,OACA,QACA,QACA,UACA,QACA,UACA,SACA,SACA,YACA,UACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,WACA,SACA,UACA,QACA,QACA,WACA,UACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,YACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,UACA,SACA,WACA,UACA,QACA,UACA,SACA,QACA,WACA,UACA,OACA,QACA,QACA,YACA,QACA,UACA,OACA,WACA,WACA,SACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,QACA,WACA,UACA,YACA,SACA,YACA,UACA,YACA,UACA,WACA,UACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,YACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,YACA,QACA,UACA,UACA,WACA,QACA,UACA,WACA,SACA,QACA,SACA,UACA,UACA,OACA,QACA,WACA,SACA,SACA,SACA,OACA,QACA,QACA,WACA,OACA,SACA,SACA,QACA,UACA,UACA,QACA,QACA,YACA,QACA,QACA,WACA,OACA,QACA,OACA,UACA,QACA,WACA,QACA,OACA,WACA,QACA,UACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,UACA,QACA,QACA,QACA,YACA,UACA,SACA,SACA,SACA,SACA,WACA,QACA,OACA,QACA,WACA,SACA,QACA,UACA,QACA,SACA,SACA,WACA,QACA,OACA,SACA,UACA,WACA,SACA,QACA,UACA,QACA,WACA,UACA,UACA,SACA,QACA,WACA,WACA,WACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,WACA,QACA,UACA,QACA,SACA,SACA,WACA,UACA,SACA,SACA,UACA,UACA,WACA,OACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,UACA,OACA,UACA,WACA,SACA,WACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,YACA,QACA,QACA,UACA,SACA,YACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,WACA,QACA,YACA,SACA,SACA,UACA,QACA,UACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,QACA,WACA,SACA,UACA,UACA,YACA,QACA,WACA,SACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,QACA,WACA,OACA,SACA,WACA,UACA,SACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,QACA,SACA,QACA,WACA,YACA,UACA,UACA,SACA,YACA,SACA,QACA,SACA,QACA,UACA,QACA,YACA,UACA,UACA,YACA,SACA,QACA,UACA,UACA,WACA,QACA,SACA,QACA,UACA,UACA,SACA,UACA,UACA,QACA,QACA,QACA,YACA,WACA,WACA,UACA,SACA,QACA,OACA,WACA,WACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,WACA,UACA,UACA,SACA,QACA,WACA,QACA,WACA,UACA,SACA,OACA,WACA,UACA,SACA,OACA,OACA,QACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,UACA,SACA,OACA,QACA,OACA,SACA,WACA,QACA,QACA,OACA,SACA,UACA,QACA,QACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,SACA,YACA,SACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,UACA,WACA,QACA,QACA,QACA,OACA,SACA,UACA,UACA,SACA,QACA,UACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,WACA,SACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,WACA,UACA,WACA,SACA,QACA,WACA,SACA,UACA,QACA,WACA,WACA,OACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,OACA,SACA,SACA,UACA,YACA,SACA,UACA,WACA,SACA,OACA,UACA,QACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,WACA,WACA,YACA,YACA,QACA,UACA,WACA,WACA,UACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,SACA,YACA,UACA,WACA,SACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,SACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,QACA,QACA,SACA,WACA,SACA,SACA,SACA,YACA,UACA,WACA,SACA,QACA,OACA,UACA,WACA,WACA,WACA,WACA,YACA,SACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,QACA,QACA,UACA,SACA,OACA,SACA,SACA,QACA,UACA,SACA,WACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,YACA,YACA,UACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,OACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,SACA,OACA,UACA,WACA,QACA,QACA,SACA,UACA,SACA,QACA,UACA,QACA,UACA,QACA,WACA,WACA,SACA,WACA,QACA,OACA,SACA,QACA,SACA,WACA,SACA,UACA,UACA,WACA,YACA,YACA,SACA,SACA,UACA,UACA,SACA,OACA,UACA,UACA,QACA,UACA,UACA,WACA,YACA,QACA,QACA,WACA,UACA,QACA,WACA,UACA,SACA,YACA,UACA,WACA,WACA,UACA,SACA,SACA,UACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,SACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,YACA,SACA,UACA,SACA,WACA,OACA,WACA,QACA,QACA,SACA,SACA,QACA,UACA,QACA,SACA,UACA,WACA,UACA,SACA,QACA,SACA,UACA,WACA,OACA,QACA,SACA,UACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,WACA,SACA,SACA,UACA,QACA,UACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,WACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,WACA,SACA,SACA,WACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,SACA,SACA,QACA,SACA,UACA,UACA,OACA,UACA,WACA,YACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,WACA,SACA,WACA,UACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,QACA,UACA,OACA,SACA,UACA,SACA,UACA,WACA,QACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,WACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,SACA,UACA,WACA,SACA,UACA,SACA,UACA,OACA,QACA,UACA,QACA,QACA,QACA,UACA,QACA,SACA,UACA,QACA,SACA,QACA,QACA,OACA,UACA,UACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,SACA,WACA,UACA,QACA,SACA,QACA,UACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,WACA,SACA,WACA,OACA,YACA,UACA,SACA,UACA,YACA,QACA,UACA,WACA,QACA,SACA,OACA,SACA,UACA,SACA,WACA,YACA,QACA,SACA,WACA,UACA,SACA,QACA,OACA,SACA,SACA,WACA,UACA,SACA,YACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,QACA,SACA,WACA,SACA,SACA,OACA,QACA,WACA,UACA,QACA,UACA,UACA,QACA,UACA,UACA,UACA,SACA,QACA,SACA,OACA,QACA,WACA,QACA,YACA,UACA,WACA,SACA,WACA,SACA,QACA,UACA,UACA,WACA,WACA,UACA,QACA,YACA,WACA,UACA,SACA,WACA,UACA,UACA,WACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,OACA,QACA,UACA,WACA,SACA,WACA,UACA,UACA,SACA,SACA,UACA,SACA,OACA,UACA,SACA,WACA,QACA,SACA,WACA,UACA,UACA,WACA,SACA,QACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,QACA,WACA,WACA,UACA,WACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,WACA,UACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,WACA,QACA,WACA,QACA,QACA,SACA,SACA,QACA,OACA,UACA,UACA,QACA,UACA,WACA,OACA,WACA,WACA,SACA,WACA,QACA,OACA,SACA,QACA,SACA,SACA,QACA,SACA,QACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,UACA,QACA,QACA,QACA,UACA,UACA,QACA,UACA,QACA,QACA,WACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,WACA,SACA,SACA,SACA,QACA,QACA,UACA,OACA,SACA,SACA,SACA,QACA,QACA;QAEFA,CAAA,CAASC,KAAA,GAAQ;QCz+DjB,MAAMC,CAAA,SAAc5Y,CAAA;UAClB/F,YAAahB,CAAA,EAAUC,CAAA,EAAMC,CAAA,GAAWuf,CAAA;YACtC,MAAM;cAAEG,QAAA,EAAA5f,CAAA;cAAU6f,IAAA,EAAA5f;YAAA,IAClB,KAAK6f,QAAA,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ACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,mEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,mEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,mEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA;UAAA;UAINiB,GAAA,EAAK;YACHb,GAAA,EAAK;YACLJ,MAAA,EAAQ,CACN,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,mEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,mEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,mEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,mEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,kEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,mEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEACA,qEAEF,CACE,oEACA,oEAEF,CACE,oEACA,qEAEF,CACE,oEA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"},"metadata":{},"sourceType":"script","externalDependencies":[]}