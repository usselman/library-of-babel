{"ast":null,"code":"// Import Axios at the top of your file\nimport axios from 'axios';\n\n// Create a function to fetch data from the endpoint\nconst getOGBook = async () => {\n  try {\n    // Define the request body\n    const requestBody = {\n      \"insc\": {\n        \"words\": [\"og\"]\n      }\n    };\n\n    // Make a POST request with the request body\n    const response = await axios.post('https://ordinals.gorillapool.io/api/market?limit=1000&offset=0', requestBody);\n\n    // Check if the request was successful (status code 200)\n    if (response.status === 200) {\n      // Assuming the data you provided is an array of objects\n      const responseData = response.data;\n\n      // Now you can work with the responseData as needed\n      //console.log(responseData);\n\n      // Return the data if needed\n      return responseData;\n    } else {\n      console.error('Request failed with status:', response.status);\n    }\n  } catch (error) {\n    console.error('An error occurred:', error);\n  }\n};\n\n// Export the getHodlBook function without calling it\nexport default getOGBook;","map":{"version":3,"names":["axios","getOGBook","requestBody","response","post","status","responseData","data","console","error"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/page/api/ogbook.js"],"sourcesContent":["// Import Axios at the top of your file\nimport axios from 'axios';\n\n// Create a function to fetch data from the endpoint\nconst getOGBook = async () => {\n    try {\n        // Define the request body\n        const requestBody = {\n            \"insc\": {\n                \"words\": [\"og\"]\n            }\n        }\n\n        // Make a POST request with the request body\n        const response = await axios.post('https://ordinals.gorillapool.io/api/market?limit=1000&offset=0', requestBody);\n\n        // Check if the request was successful (status code 200)\n        if (response.status === 200) {\n            // Assuming the data you provided is an array of objects\n            const responseData = response.data;\n\n            // Now you can work with the responseData as needed\n            //console.log(responseData);\n\n            // Return the data if needed\n            return responseData;\n        } else {\n            console.error('Request failed with status:', response.status);\n        }\n    } catch (error) {\n        console.error('An error occurred:', error);\n    }\n}\n\n// Export the getHodlBook function without calling it\nexport default getOGBook;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI;IACA;IACA,MAAMC,WAAW,GAAG;MAChB,MAAM,EAAE;QACJ,OAAO,EAAE,CAAC,IAAI;MAClB;IACJ,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,gEAAgE,EAAEF,WAAW,CAAC;;IAEhH;IACA,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MACzB;MACA,MAAMC,YAAY,GAAGH,QAAQ,CAACI,IAAI;;MAElC;MACA;;MAEA;MACA,OAAOD,YAAY;IACvB,CAAC,MAAM;MACHE,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEN,QAAQ,CAACE,MAAM,CAAC;IACjE;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC9C;AACJ,CAAC;;AAED;AACA,eAAeR,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}