{"ast":null,"code":"var _jsxFileName = \"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OGCards = ({\n  ordinal,\n  address\n}) => {\n  _s();\n  const [verificationStatus, setVerificationStatus] = useState('Pending');\n  const isDigit = item => {\n    var _item$data, _item$data$insc, _item$data2, _item$data2$insc;\n    const selectedIndex = ((_item$data = item.data) === null || _item$data === void 0 ? void 0 : (_item$data$insc = _item$data.insc) === null || _item$data$insc === void 0 ? void 0 : _item$data$insc.words[0]) === 'og' ? 1 : 0;\n    const parsed = parseInt((_item$data2 = item.data) === null || _item$data2 === void 0 ? void 0 : (_item$data2$insc = _item$data2.insc) === null || _item$data2$insc === void 0 ? void 0 : _item$data2$insc.words[selectedIndex], 10);\n    return !isNaN(parsed);\n  };\n  const checkOnOrdinalsGorillaPool = async txid => {\n    try {\n      const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/origin/${txid}`);\n      const ordinalsData = await ordinalsResponse.json();\n      console.log(\"response: \", ordinalsData);\n      if (ordinalsData.length > 0 && ordinalsData[0].satoshis >= 1000000 && ordinalsData[0].data && ordinalsData[0].data.lock && ordinalsData[0].data.lock.until === 1050000) {\n        setVerificationStatus(\"Verified (✓)\");\n      } else {\n        setVerificationStatus(\"Not Verified (✗)\");\n      }\n    } catch (error) {\n      console.error('Error checking on Ordinals GorillaPool:', error);\n      setVerificationStatus(\"Verification Error\");\n    }\n  };\n  const verifyRecord = async () => {\n    if (isDigit(ordinal)) {\n      try {\n        const searchResponse = await fetch('https://v3.ordinals.gorillapool.io/api/inscriptions/search?sort=ASC&limit=1&offset=0', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            insc: {\n              file: {\n                hash: ordinal.data.insc.file.hash\n              }\n            }\n          })\n        });\n        const searchData = await searchResponse.json();\n        if (searchData[0] && searchData[0].txid === ordinal.txid) {\n          checkOnOrdinalsGorillaPool(ordinal.txid);\n        } else {\n          setVerificationStatus(\"Not the first inscription (✗)\");\n        }\n      } catch (error) {\n        console.error('Error verifying record:', error);\n        setVerificationStatus(\"Verification Error\");\n      }\n    } else {\n      setVerificationStatus(\"Not A Number (✗)\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl hover:bg-gray-300`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold text-lg mb-2\",\n        children: ordinal.data.insc.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyRecord,\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-4\",\n        style: {\n          color: verificationStatus.includes(\"✓\") ? 'green' : 'red'\n        },\n        children: verificationStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-black text-md rounded-xl p-4 bg-white mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold mb-2 underline\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://whatsonchain.com/tx/${ordinal.txid}`,\n            children: \"tx\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold mb-2 underline\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://whatsonchain.com/block-height/${ordinal.height}`,\n            children: [\"blk: \", ordinal.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold mb-2 underline\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://1satordinals.com/inscription/${ordinal.origin.num}`,\n            children: [\"#\", ordinal.origin.num]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(OGCards, \"h/4OOwWdMqk+8FN2CjvZh/mtlGw=\");\n_c = OGCards;\nexport default OGCards;\nvar _c;\n$RefreshReg$(_c, \"OGCards\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","OGCards","ordinal","address","_s","verificationStatus","setVerificationStatus","isDigit","item","_item$data","_item$data$insc","_item$data2","_item$data2$insc","selectedIndex","data","insc","words","parsed","parseInt","isNaN","checkOnOrdinalsGorillaPool","txid","ordinalsResponse","fetch","ordinalsData","json","console","log","length","satoshis","lock","until","error","verifyRecord","searchResponse","method","headers","body","JSON","stringify","file","hash","searchData","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","includes","href","height","origin","num","_c","$RefreshReg$"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst OGCards = ({ ordinal, address }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n\n    const isDigit = (item) => {\n        const selectedIndex = item.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    const checkOnOrdinalsGorillaPool = async (txid) => {\n        try {\n            const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/origin/${txid}`);\n            const ordinalsData = await ordinalsResponse.json();\n            console.log(\"response: \", ordinalsData);\n\n            if (ordinalsData.length > 0 && ordinalsData[0].satoshis >= 1000000 && ordinalsData[0].data && ordinalsData[0].data.lock && ordinalsData[0].data.lock.until === 1050000) {\n                setVerificationStatus(\"Verified (✓)\");\n            } else {\n                setVerificationStatus(\"Not Verified (✗)\");\n            }\n        } catch (error) {\n            console.error('Error checking on Ordinals GorillaPool:', error);\n            setVerificationStatus(\"Verification Error\");\n        }\n    };\n\n    const verifyRecord = async () => {\n        if (isDigit(ordinal)) {\n            try {\n                const searchResponse = await fetch('https://v3.ordinals.gorillapool.io/api/inscriptions/search?sort=ASC&limit=1&offset=0', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ insc: { file: { hash: ordinal.data.insc.file.hash } } })\n                });\n                const searchData = await searchResponse.json();\n\n                if (searchData[0] && searchData[0].txid === ordinal.txid) {\n                    checkOnOrdinalsGorillaPool(ordinal.txid);\n                } else {\n                    setVerificationStatus(\"Not the first inscription (✗)\");\n                }\n            } catch (error) {\n                console.error('Error verifying record:', error);\n                setVerificationStatus(\"Verification Error\");\n            }\n        } else {\n            setVerificationStatus(\"Not A Number (✗)\");\n        }\n    };\n\n    return (\n        <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl hover:bg-gray-300`}>\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-lg mb-2\">{ordinal.data.insc.text}</div>\n                <button onClick={verifyRecord} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                    Verify\n                </button>\n                <div \n                className=\"m-4\"\n                style={{ color: verificationStatus.includes(\"✓\") ? 'green' : 'red' }}>\n                    {verificationStatus}\n                </div>\n                <div className=\"border-2 border-black text-md rounded-xl p-4 bg-white mt-4\">\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>tx</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OGCards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}