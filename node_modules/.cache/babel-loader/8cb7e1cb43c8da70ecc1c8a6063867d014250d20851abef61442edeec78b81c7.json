{"ast":null,"code":"import React,{useEffect}from\"react\";import{Buffer}from\"buffer\";// Import the Buffer module from the 'buffer' library\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var bsOrderToTxFormat=function bsOrderToTxFormat(bsvOrder){// Parse the input BSV ordinal outpoint into its components\nvar txidHex=bsvOrder.substring(0,64);// Extract the first 64 characters as txid\nvar outputIndexHex=bsvOrder.substring(65);// Extract the remainder as outputIndex in hexadecimal\n// Convert txid to little-endian format\nvar txidBytes=Buffer.from(txidHex,'hex').reverse();// Convert output index to uint32LE (4 bytes)\nvar outputIndex=Buffer.alloc(4);outputIndex.writeUInt32LE(parseInt(outputIndexHex,16));// Concatenate txid and output index to get the final buffer\nvar txFormatBuffer=Buffer.concat([txidBytes,outputIndex]);// Convert the buffer to a hexadecimal string\nvar txFormatHex=txFormatBuffer.toString('hex');//console.log(\"converted txformat: \", txFormatHex);\nreturn txFormatHex;};var LRCCard=function LRCCard(_ref){var ordinal=_ref.ordinal,setHodlSum=_ref.setHodlSum,locations=_ref.locations;var lrcName;var verificationMessage=null;var verificationStyle={};var valid;var amount=parseFloat(ordinal.data.insc.json.amt);if(ordinal.data.insc.json.id==='bfd3bfe2d65a131e9792ee04a2da9594d9dc8741a7ab362c11945bfc368d2063_1'){lrcName='$hodl';var txFormat=bsOrderToTxFormat(ordinal.outpoint);if(locations.includes(txFormat)){verificationMessage='Valid mint';verificationStyle={color:'green'};valid=true;}else{verificationMessage='Invalid mint';verificationStyle={color:'red'};valid=false;}}else{lrcName='unknown LRC-20';}useEffect(function(){if(valid){setHodlSum(function(prev){return prev+amount;});}},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl hover:bg-gray-300\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold text-lg mb-2\",children:lrcName}),verificationMessage&&/*#__PURE__*/_jsx(\"div\",{style:verificationStyle,children:verificationMessage}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-bold text-lg mb-2\",children:[\"Amount: \",ordinal.data.insc.json.amt]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-2 border-black text-md rounded-xl p-4 bg-white\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://whatsonchain.com/tx/\".concat(ordinal.txid),children:[ordinal.data.insc.json.op,\" tx\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://whatsonchain.com/block-height/\".concat(ordinal.height),children:[\"blk: \",ordinal.height]})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://1satordinals.com/inscription/\".concat(ordinal.origin.num),children:[\"#\",ordinal.origin.num]})})]})]})});};export default LRCCard;","map":{"version":3,"names":["React","useEffect","Buffer","jsx","_jsx","jsxs","_jsxs","bsOrderToTxFormat","bsvOrder","txidHex","substring","outputIndexHex","txidBytes","from","reverse","outputIndex","alloc","writeUInt32LE","parseInt","txFormatBuffer","concat","txFormatHex","toString","LRCCard","_ref","ordinal","setHodlSum","locations","lrcName","verificationMessage","verificationStyle","valid","amount","parseFloat","data","insc","json","amt","id","txFormat","outpoint","includes","color","prev","className","children","style","href","txid","op","height","origin","num"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/LRCCard.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Buffer } from \"buffer\"; // Import the Buffer module from the 'buffer' library\n\nexport const bsOrderToTxFormat = (bsvOrder) => {\n  // Parse the input BSV ordinal outpoint into its components\n  const txidHex = bsvOrder.substring(0, 64); // Extract the first 64 characters as txid\n  const outputIndexHex = bsvOrder.substring(65); // Extract the remainder as outputIndex in hexadecimal\n\n  // Convert txid to little-endian format\n  const txidBytes = Buffer.from(txidHex, 'hex').reverse();\n\n  // Convert output index to uint32LE (4 bytes)\n  const outputIndex = Buffer.alloc(4);\n  outputIndex.writeUInt32LE(parseInt(outputIndexHex, 16));\n\n  // Concatenate txid and output index to get the final buffer\n  const txFormatBuffer = Buffer.concat([txidBytes, outputIndex]);\n\n  // Convert the buffer to a hexadecimal string\n  const txFormatHex = txFormatBuffer.toString('hex');\n  //console.log(\"converted txformat: \", txFormatHex);\n  return txFormatHex;\n};\n\nconst LRCCard = ({ ordinal, setHodlSum, locations }) => {\n  let lrcName;\n  let verificationMessage = null;\n  let verificationStyle = {};\n  let valid;\n  const amount = parseFloat(ordinal.data.insc.json.amt);\n\n  if (ordinal.data.insc.json.id === 'bfd3bfe2d65a131e9792ee04a2da9594d9dc8741a7ab362c11945bfc368d2063_1') {\n    lrcName = '$hodl';\n\n    const txFormat = bsOrderToTxFormat(ordinal.outpoint);\n\n    if (locations.includes(txFormat)) {\n      verificationMessage = 'Valid mint';\n      verificationStyle = { color: 'green' };\n      valid = true;\n    } else {\n      verificationMessage = 'Invalid mint';\n      verificationStyle = { color: 'red' };\n      valid = false;\n    }\n  } else {\n    lrcName = 'unknown LRC-20';\n  }\n\n\n  useEffect(() => {\n    if (valid) {\n      setHodlSum(prev => prev + amount);\n    }\n  }, []);\n\n\n  return (\n    <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl hover:bg-gray-300`}>\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-lg mb-2\">{lrcName}</div>\n        {verificationMessage && <div style={verificationStyle}>{verificationMessage}</div>}\n        <div className=\"font-bold text-lg mb-2\">Amount: {ordinal.data.insc.json.amt}</div>\n        <div className=\"border-2 border-black text-md rounded-xl p-4 bg-white\">\n          <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>{ordinal.data.insc.json.op} tx</a></div>\n          <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n          <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LRCCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}