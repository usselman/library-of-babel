{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OGCards=function OGCards(_ref){var _ordinal$data,_ordinal$data$insc;var ordinal=_ref.ordinal,address=_ref.address,transferOrdinal=_ref.transferOrdinal;var _useState=useState('Pending'),_useState2=_slicedToArray(_useState,2),verificationStatus=_useState2[0],setVerificationStatus=_useState2[1];var isDigit=function isDigit(item){var _item$data,_item$data$insc,_item$data2,_item$data2$insc;var selectedIndex=((_item$data=item.data)===null||_item$data===void 0?void 0:(_item$data$insc=_item$data.insc)===null||_item$data$insc===void 0?void 0:_item$data$insc.words[0])==='og'?1:0;var parsed=parseInt((_item$data2=item.data)===null||_item$data2===void 0?void 0:(_item$data2$insc=_item$data2.insc)===null||_item$data2$insc===void 0?void 0:_item$data2$insc.words[selectedIndex],10);return!isNaN(parsed);};var checkOnOrdinalsGorillaPool=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(txid){var ordinalsResponse,ordinalsData,isVerified,_iterator,_step,item;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://ordinals.gorillapool.io/api/locks/txid/\".concat(txid));case 3:ordinalsResponse=_context.sent;_context.next=6;return ordinalsResponse.json();case 6:ordinalsData=_context.sent;// Iterate over the returned items and check for verification\nisVerified=false;_iterator=_createForOfIteratorHelper(ordinalsData);_context.prev=9;_iterator.s();case 11:if((_step=_iterator.n()).done){_context.next=18;break;}item=_step.value;if(!(item.satoshis>=1000000&&item.data&&item.data.lock&&item.data.lock.until===1050000)){_context.next=16;break;}isVerified=true;return _context.abrupt(\"break\",18);case 16:_context.next=11;break;case 18:_context.next=23;break;case 20:_context.prev=20;_context.t0=_context[\"catch\"](9);_iterator.e(_context.t0);case 23:_context.prev=23;_iterator.f();return _context.finish(23);case 26:if(isVerified){setVerificationStatus(\"Verified (✓)\");}else{setVerificationStatus(\"Not Verified (✗)\");}_context.next=33;break;case 29:_context.prev=29;_context.t1=_context[\"catch\"](0);console.error('Error checking on Ordinals GorillaPool:',_context.t1);setVerificationStatus(\"Verification Error\");case 33:case\"end\":return _context.stop();}},_callee,null,[[0,29],[9,20,23,26]]);}));return function checkOnOrdinalsGorillaPool(_x){return _ref2.apply(this,arguments);};}();var verifyRecord=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var searchResponse,searchData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!isDigit(ordinal)){_context2.next=17;break;}_context2.prev=1;_context2.next=4;return fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({insc:{file:{hash:ordinal.data.insc.file.hash}}})});case 4:searchResponse=_context2.sent;_context2.next=7;return searchResponse.json();case 7:searchData=_context2.sent;if(searchData[0]&&searchData[0].txid===ordinal.txid){checkOnOrdinalsGorillaPool(ordinal.txid);}else{setVerificationStatus(\"Not the first inscription (✗)\");}_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);console.error('Error verifying record:',_context2.t0);setVerificationStatus(\"Verification Error\");case 15:_context2.next=18;break;case 17:setVerificationStatus(\"Not A Number (✗)\");case 18:case\"end\":return _context2.stop();}},_callee2,null,[[1,11]]);}));return function verifyRecord(){return _ref3.apply(this,arguments);};}();useEffect(function(){verifyRecord();},[]);var handleTransfer=function handleTransfer(){// Prompt for the receiver's address\nvar receiverAddress=prompt(\"Enter the receiver's address:\");if(!receiverAddress)return;// Extract origin and outpoint from the ordinal\nvar origin=ordinal.origin,outpoint=ordinal.outpoint;// Call transferOrdinal function passed as a prop\ntransferOrdinal(receiverAddress,origin,outpoint);};return/*#__PURE__*/_jsx(\"div\",{className:\"rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold text-2xl mb-2 tracking-widest\",children:ordinal===null||ordinal===void 0?void 0:(_ordinal$data=ordinal.data)===null||_ordinal$data===void 0?void 0:(_ordinal$data$insc=_ordinal$data.insc)===null||_ordinal$data$insc===void 0?void 0:_ordinal$data$insc.text}),/*#__PURE__*/_jsx(\"div\",{className:\"m-4\",style:{color:verificationStatus.includes(\"✓\")?'green':'red'},children:verificationStatus}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleTransfer,className:\"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\",children:\"Transfer\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-0 border-black text-md rounded-xl p-4 bg-white mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://whatsonchain.com/tx/\".concat(ordinal.txid),children:\"tx\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://whatsonchain.com/block-height/\".concat(ordinal.height),children:[\"blk: \",ordinal.height]})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://1satordinals.com/inscription/\".concat(ordinal.origin.num),children:[\"#\",ordinal.origin.num]})})]})]})});};export default OGCards;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","OGCards","_ref","_ordinal$data","_ordinal$data$insc","ordinal","address","transferOrdinal","_useState","_useState2","_slicedToArray","verificationStatus","setVerificationStatus","isDigit","item","_item$data","_item$data$insc","_item$data2","_item$data2$insc","selectedIndex","data","insc","words","parsed","parseInt","isNaN","checkOnOrdinalsGorillaPool","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","txid","ordinalsResponse","ordinalsData","isVerified","_iterator","_step","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","_createForOfIteratorHelper","s","n","done","value","satoshis","lock","until","abrupt","t0","e","f","finish","t1","console","error","stop","_x","apply","arguments","verifyRecord","_ref3","_callee2","searchResponse","searchData","_callee2$","_context2","method","headers","body","JSON","stringify","file","hash","handleTransfer","receiverAddress","prompt","origin","outpoint","className","children","text","style","color","includes","onClick","href","height","num"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst OGCards = ({ ordinal, address, transferOrdinal }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n\n    const isDigit = (item) => {\n        const selectedIndex = item.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    const checkOnOrdinalsGorillaPool = async (txid) => {\n        try {\n            const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n            const ordinalsData = await ordinalsResponse.json();\n\n            // Iterate over the returned items and check for verification\n            let isVerified = false;\n            for (const item of ordinalsData) {\n                if (item.satoshis >= 1000000 && item.data && item.data.lock && item.data.lock.until === 1050000) {\n                    isVerified = true;\n                    break; // Found a verified item, no need to check further\n                }\n            }\n\n            if (isVerified) {\n                setVerificationStatus(\"Verified (✓)\");\n            } else {\n                setVerificationStatus(\"Not Verified (✗)\");\n            }\n        } catch (error) {\n            console.error('Error checking on Ordinals GorillaPool:', error);\n            setVerificationStatus(\"Verification Error\");\n        }\n    };\n\n\n    const verifyRecord = async () => {\n        if (isDigit(ordinal)) {\n            try {\n                const searchResponse = await fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ insc: { file: { hash: ordinal.data.insc.file.hash } } })\n                });\n                const searchData = await searchResponse.json();\n\n                if (searchData[0] && searchData[0].txid === ordinal.txid) {\n                    checkOnOrdinalsGorillaPool(ordinal.txid);\n                } else {\n                    setVerificationStatus(\"Not the first inscription (✗)\");\n                }\n            } catch (error) {\n                console.error('Error verifying record:', error);\n                setVerificationStatus(\"Verification Error\");\n            }\n        } else {\n            setVerificationStatus(\"Not A Number (✗)\");\n        }\n    };\n\n    useEffect(() => {\n        verifyRecord();\n    }, []);\n\n    const handleTransfer = () => {\n        // Prompt for the receiver's address\n        const receiverAddress = prompt(\"Enter the receiver's address:\");\n        if (!receiverAddress) return;\n\n        // Extract origin and outpoint from the ordinal\n        const { origin, outpoint } = ordinal;\n\n        // Call transferOrdinal function passed as a prop\n        transferOrdinal(receiverAddress, origin, outpoint);\n    };\n\n    return (\n        <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl`}>\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-2xl mb-2 tracking-widest\">{ordinal?.data?.insc?.text}</div>\n                {/* <button onClick={verifyRecord} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                    Verify\n                </button> */}\n                <div\n                    className=\"m-4\"\n                    style={{ color: verificationStatus.includes(\"✓\") ? 'green' : 'red' }}>\n                    {verificationStatus}\n                </div>\n                <div className=\"text-center mt-4\">\n                    <button\n                        onClick={handleTransfer}\n                        className=\"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\">\n                        Transfer\n                    </button>\n                </div>\n                <div className=\"border-0 border-black text-md rounded-xl p-4 bg-white mt-4\">\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>tx</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default OGCards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}