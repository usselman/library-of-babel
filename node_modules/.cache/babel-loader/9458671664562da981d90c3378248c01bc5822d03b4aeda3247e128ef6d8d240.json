{"ast":null,"code":"var _jsxFileName = \"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/components/OrdinalCard.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdinalCard = ({\n  ordinal\n}) => {\n  const getRarity = name => {\n    const hasSuffix = name.includes(' of '); // Check for ' of ' as a separator for suffix\n\n    // Split the name by spaces and check the first and last parts for prefix/suffix\n    const parts = name.split(' ');\n    const firstPart = parts[0];\n    const lastPart = parts[parts.length - 1];\n\n    // Define what constitutes a prefix or suffix\n    const prefixes = ['Mystic', 'Ancient', 'Legendary']; // Add more as needed\n    const suffixes = ['Fox', 'Eagle', 'Dragon']; // Add more as needed\n\n    const hasPrefix = prefixes.includes(firstPart);\n    const hasExplicitSuffix = suffixes.includes(lastPart);\n    if (hasPrefix && (hasSuffix || hasExplicitSuffix)) return 'Rare';\n    if (hasPrefix || hasSuffix || hasExplicitSuffix) return 'Uncommon';\n    return 'Common';\n  };\n  const rarity = getRarity(ordinal.data.insc.text);\n  const rarityStyles = {\n    Common: 'border-black text-black',\n    Uncommon: 'border-blue-500 text-blue-500',\n    Rare: 'border-yellow-500 text-yellow-500'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rounded overflow-hidden shadow-lg m-4 p-4 bg-white border-2 ${rarityStyles[rarity]}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold text-lg mb-2\",\n        children: ordinal.data.insc.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 text-base\",\n        children: rarity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = OrdinalCard;\nexport default OrdinalCard;\nvar _c;\n$RefreshReg$(_c, \"OrdinalCard\");","map":{"version":3,"names":["OrdinalCard","ordinal","getRarity","name","hasSuffix","includes","parts","split","firstPart","lastPart","length","prefixes","suffixes","hasPrefix","hasExplicitSuffix","rarity","data","insc","text","rarityStyles","Common","Uncommon","Rare","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/components/OrdinalCard.jsx"],"sourcesContent":["const OrdinalCard = ({ ordinal }) => {\n\n  const getRarity = (name) => {\n  const hasSuffix = name.includes(' of '); // Check for ' of ' as a separator for suffix\n\n  // Split the name by spaces and check the first and last parts for prefix/suffix\n  const parts = name.split(' ');\n  const firstPart = parts[0];\n  const lastPart = parts[parts.length - 1];\n\n  // Define what constitutes a prefix or suffix\n  const prefixes = ['Mystic', 'Ancient', 'Legendary']; // Add more as needed\n  const suffixes = ['Fox', 'Eagle', 'Dragon']; // Add more as needed\n\n  const hasPrefix = prefixes.includes(firstPart);\n  const hasExplicitSuffix = suffixes.includes(lastPart);\n\n  if (hasPrefix && (hasSuffix || hasExplicitSuffix)) return 'Rare';\n  if (hasPrefix || hasSuffix || hasExplicitSuffix) return 'Uncommon';\n  return 'Common';\n};\n\n  const rarity = getRarity(ordinal.data.insc.text);\n\n  const rarityStyles = {\n    Common: 'border-black text-black',\n    Uncommon: 'border-blue-500 text-blue-500',\n    Rare: 'border-yellow-500 text-yellow-500',\n  };\n\n  return (\n    <div className={`rounded overflow-hidden shadow-lg m-4 p-4 bg-white border-2 ${rarityStyles[rarity]}`}>\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-lg mb-2\">{ordinal.data.insc.text}</div>\n        <p className=\"text-gray-700 text-base\">{rarity}</p>\n        {/* <p className=\"text-gray-600 text-sm\">\n          Description: {ordinal.description || \"N/A\"}\n        </p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default OrdinalCard;\n"],"mappings":";;AAAA,MAAMA,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAEnC,MAAMC,SAAS,GAAIC,IAAI,IAAK;IAC5B,MAAMC,SAAS,GAAGD,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;IAEzC;IACA,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;IAC7B,MAAMC,SAAS,GAAGF,KAAK,CAAC,CAAC,CAAC;IAC1B,MAAMG,QAAQ,GAAGH,KAAK,CAACA,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC;;IAExC;IACA,MAAMC,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;IACrD,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;;IAE7C,MAAMC,SAAS,GAAGF,QAAQ,CAACN,QAAQ,CAACG,SAAS,CAAC;IAC9C,MAAMM,iBAAiB,GAAGF,QAAQ,CAACP,QAAQ,CAACI,QAAQ,CAAC;IAErD,IAAII,SAAS,KAAKT,SAAS,IAAIU,iBAAiB,CAAC,EAAE,OAAO,MAAM;IAChE,IAAID,SAAS,IAAIT,SAAS,IAAIU,iBAAiB,EAAE,OAAO,UAAU;IAClE,OAAO,QAAQ;EACjB,CAAC;EAEC,MAAMC,MAAM,GAAGb,SAAS,CAACD,OAAO,CAACe,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;EAEhD,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE,yBAAyB;IACjCC,QAAQ,EAAE,+BAA+B;IACzCC,IAAI,EAAE;EACR,CAAC;EAED,oBACEC,OAAA;IAAKC,SAAS,EAAG,+DAA8DL,YAAY,CAACJ,MAAM,CAAE,EAAE;IAAAU,QAAA,eACpGF,OAAA;MAAKC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBF,OAAA;QAAKC,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAExB,OAAO,CAACe,IAAI,CAACC,IAAI,CAACC;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtEN,OAAA;QAAGC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAEV;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAzCI9B,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}