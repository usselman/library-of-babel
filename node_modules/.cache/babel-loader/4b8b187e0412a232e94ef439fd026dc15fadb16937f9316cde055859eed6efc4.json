{"ast":null,"code":"var _jsxFileName = \"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OGCards = ({\n  ordinal,\n  address,\n  transferOrdinal\n}) => {\n  _s();\n  var _ordinal$data, _ordinal$data$insc;\n  const [verificationStatus, setVerificationStatus] = useState < string > 'Pending';\n  const isDigit = item => {\n    var _item$data, _item$data$insc, _item$data$insc$words, _item$data2, _item$data2$insc, _item$data2$insc$word;\n    const selectedIndex = ((_item$data = item.data) === null || _item$data === void 0 ? void 0 : (_item$data$insc = _item$data.insc) === null || _item$data$insc === void 0 ? void 0 : (_item$data$insc$words = _item$data$insc.words) === null || _item$data$insc$words === void 0 ? void 0 : _item$data$insc$words[0]) === 'og' ? 1 : 0;\n    const parsed = parseInt(((_item$data2 = item.data) === null || _item$data2 === void 0 ? void 0 : (_item$data2$insc = _item$data2.insc) === null || _item$data2$insc === void 0 ? void 0 : (_item$data2$insc$word = _item$data2$insc.words) === null || _item$data2$insc$word === void 0 ? void 0 : _item$data2$insc$word[selectedIndex]) || '', 10);\n    return !isNaN(parsed);\n  };\n  const checkOnOrdinalsGorillaPool = async txid => {\n    try {\n      const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n      const ordinalsData = await ordinalsResponse.json();\n      let isVerified = false;\n      for (const item of ordinalsData) {\n        if (item.satoshis >= 1000000 && item.data && item.data.lock && item.data.lock.until === 1050000) {\n          isVerified = true;\n          break;\n        }\n      }\n      if (isVerified) {\n        setVerificationStatus(\"Verified (✓)\");\n      } else {\n        setVerificationStatus(\"Not Verified (✗)\");\n      }\n    } catch (error) {\n      console.error('Error checking on Ordinals GorillaPool:', error);\n      setVerificationStatus(\"Verification Error\");\n    }\n  };\n  const verifyRecord = async () => {\n    if (isDigit(ordinal)) {\n      try {\n        const searchResponse = await fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            insc: {\n              file: {\n                hash: ordinal.data.insc.file.hash\n              }\n            }\n          })\n        });\n        const searchData = await searchResponse.json();\n        if (searchData[0] && searchData[0].txid === ordinal.txid) {\n          checkOnOrdinalsGorillaPool(ordinal.txid);\n        } else {\n          setVerificationStatus(\"Not the first inscription (✗)\");\n        }\n      } catch (error) {\n        console.error('Error verifying record:', error);\n        setVerificationStatus(\"Verification Error\");\n      }\n    } else {\n      setVerificationStatus(\"Not A Number (✗)\");\n    }\n  };\n  useEffect(() => {\n    verifyRecord();\n  }, []);\n  const handleTransfer = () => {\n    const receiverAddress = prompt(\"Enter the receiver's address:\");\n    if (!receiverAddress) return;\n    const {\n      origin,\n      outpoint\n    } = ordinal;\n    transferOrdinal(receiverAddress, origin, outpoint);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold text-2xl mb-2 tracking-widest\",\n        children: ordinal === null || ordinal === void 0 ? void 0 : (_ordinal$data = ordinal.data) === null || _ordinal$data === void 0 ? void 0 : (_ordinal$data$insc = _ordinal$data.insc) === null || _ordinal$data$insc === void 0 ? void 0 : _ordinal$data$insc.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-4\",\n        style: {\n          color: verificationStatus.includes(\"✓\") ? 'green' : 'red'\n        },\n        children: verificationStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTransfer,\n          className: \"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\",\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-0 border-black text-md rounded-xl p-4 bg-white mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold mb-2 underline\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://whatsonchain.com/tx/${ordinal.txid}`,\n            children: \"tx\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold mb-2 underline\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://whatsonchain.com/block-height/${ordinal.height}`,\n            children: [\"blk: \", ordinal.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold mb-2 underline\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://1satordinals.com/inscription/${ordinal.origin.num}`,\n            children: [\"#\", ordinal.origin.num]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(OGCards, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = OGCards;\nexport default OGCards;\nvar _c;\n$RefreshReg$(_c, \"OGCards\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","OGCards","ordinal","address","transferOrdinal","_s","_ordinal$data","_ordinal$data$insc","verificationStatus","setVerificationStatus","string","isDigit","item","_item$data","_item$data$insc","_item$data$insc$words","_item$data2","_item$data2$insc","_item$data2$insc$word","selectedIndex","data","insc","words","parsed","parseInt","isNaN","checkOnOrdinalsGorillaPool","txid","ordinalsResponse","fetch","ordinalsData","json","isVerified","satoshis","lock","until","error","console","verifyRecord","searchResponse","method","headers","body","JSON","stringify","file","hash","searchData","handleTransfer","receiverAddress","prompt","origin","outpoint","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","style","color","includes","onClick","href","height","num","_c","$RefreshReg$"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\ninterface OrdinalData {\n    txid: string;\n    height: number;\n    origin: { num: number };\n    data: {\n        insc: {\n            text: string;\n            file: { hash: string };\n            words?: string[];\n        };\n    };\n}\n\ninterface OGCardsProps {\n    ordinal: OrdinalData;\n    address: any;\n    transferOrdinal: (receiverAddress: string, origin: string, outpoint: string) => Promise<void>;\n}\n\n\nconst OGCards: React.FC<OGCardsProps> = ({ ordinal, address, transferOrdinal }) => {\n    const [verificationStatus, setVerificationStatus] = useState<string>('Pending');\n\n    const isDigit = (item: OrdinalData): boolean => {\n        const selectedIndex = item.data?.insc?.words?.[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.data?.insc?.words?.[selectedIndex] || '', 10);\n        return !isNaN(parsed);\n    };\n\n    const checkOnOrdinalsGorillaPool = async (txid: string): Promise<void> => {\n        try {\n            const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n            const ordinalsData = await ordinalsResponse.json();\n\n            let isVerified = false;\n            for (const item of ordinalsData) {\n                if (item.satoshis >= 1000000 && item.data && item.data.lock && item.data.lock.until === 1050000) {\n                    isVerified = true;\n                    break;\n                }\n            }\n\n            if (isVerified) {\n                setVerificationStatus(\"Verified (✓)\");\n            } else {\n                setVerificationStatus(\"Not Verified (✗)\");\n            }\n        } catch (error) {\n            console.error('Error checking on Ordinals GorillaPool:', error);\n            setVerificationStatus(\"Verification Error\");\n        }\n    };\n\n    const verifyRecord = async (): Promise<void> => {\n        if (isDigit(ordinal)) {\n            try {\n                const searchResponse = await fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ insc: { file: { hash: ordinal.data.insc.file.hash } } })\n                });\n                const searchData = await searchResponse.json();\n\n                if (searchData[0] && searchData[0].txid === ordinal.txid) {\n                    checkOnOrdinalsGorillaPool(ordinal.txid);\n                } else {\n                    setVerificationStatus(\"Not the first inscription (✗)\");\n                }\n            } catch (error) {\n                console.error('Error verifying record:', error);\n                setVerificationStatus(\"Verification Error\");\n            }\n        } else {\n            setVerificationStatus(\"Not A Number (✗)\");\n        }\n    };\n\n    useEffect(() => {\n        verifyRecord();\n    }, []);\n\n    const handleTransfer = () => {\n        const receiverAddress = prompt(\"Enter the receiver's address:\");\n        if (!receiverAddress) return;\n\n        const { origin, outpoint } = ordinal;\n\n        transferOrdinal(receiverAddress, origin, outpoint);\n    };\n\n    return (\n        <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl`}>\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-2xl mb-2 tracking-widest\">{ordinal?.data?.insc?.text}</div>\n                {/* <button onClick={verifyRecord} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                    Verify\n                </button> */}\n                <div\n                    className=\"m-4\"\n                    style={{ color: verificationStatus.includes(\"✓\") ? 'green' : 'red' }}>\n                    {verificationStatus}\n                </div>\n                <div className=\"text-center mt-4\">\n                    <button\n                        onClick={handleTransfer}\n                        className=\"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\">\n                        Transfer\n                    </button>\n                </div>\n                <div className=\"border-0 border-black text-md rounded-xl p-4 bg-white mt-4\">\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>tx</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default OGCards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}