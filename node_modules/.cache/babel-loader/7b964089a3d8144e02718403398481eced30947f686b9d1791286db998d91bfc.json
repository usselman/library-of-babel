{"ast":null,"code":"var _jsxFileName = \"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGMarketplaceCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OGMarketplaceCard = ({\n  listing,\n  purchaseOrdinal,\n  exchangeRate\n}) => {\n  _s();\n  const [verificationStatus, setVerificationStatus] = useState('Pending');\n  const [verificationStyle, setVerificationStyle] = useState({});\n  let price = (listing.data.list.price / 100000000).toFixed(4);\n  let USDprice = (price * exchangeRate).toFixed(2);\n  useEffect(() => {\n    verifyRecord();\n  }, [listing]);\n  if (!listing || listing.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No listing available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  const isDigit = item => {\n    var _item$origin, _item$origin$data, _item$origin$data$ins, _item$origin2, _item$origin2$data, _item$origin2$data$in;\n    const selectedIndex = ((_item$origin = item.origin) === null || _item$origin === void 0 ? void 0 : (_item$origin$data = _item$origin.data) === null || _item$origin$data === void 0 ? void 0 : (_item$origin$data$ins = _item$origin$data.insc) === null || _item$origin$data$ins === void 0 ? void 0 : _item$origin$data$ins.words[0]) === 'og' ? 1 : 0;\n    const parsed = parseInt((_item$origin2 = item.origin) === null || _item$origin2 === void 0 ? void 0 : (_item$origin2$data = _item$origin2.data) === null || _item$origin2$data === void 0 ? void 0 : (_item$origin2$data$in = _item$origin2$data.insc) === null || _item$origin2$data$in === void 0 ? void 0 : _item$origin2$data$in.words[selectedIndex], 10);\n    return !isNaN(parsed);\n  };\n  const handleBuyClick = () => {\n    const outpoint = listing.outpoint;\n    const marketplaceRate = 0.025; // Example rate, adjust as needed\n    const marketplaceAddress = \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\"; // Replace with actual address\n\n    purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n  };\n  const checkOnOrdinalsGorillaPool = async txid => {\n    try {\n      const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n      const ordinalsData = await ordinalsResponse.json();\n      console.log(\"ordinal locks: \", ordinalsData);\n      let isVerified = false;\n      for (const item of ordinalsData) {\n        if (item.satoshis >= 1000000 && item.data && item.data.lock && item.data.lock.until === 1050000) {\n          isVerified = true;\n          break;\n        }\n      }\n      if (isVerified) {\n        setVerificationStatus(\"Verified (✓)\");\n        setVerificationStyle({\n          color: 'green'\n        });\n      } else {\n        setVerificationStatus(\"Not Verified (✗)\");\n        setVerificationStyle({\n          color: 'red'\n        });\n      }\n    } catch (error) {\n      console.error('Error checking on Ordinals GorillaPool:', error);\n      setVerificationStatus(\"Verification Error\");\n    }\n  };\n  const verifyRecord = async () => {\n    if (isDigit(listing)) {\n      try {\n        var _listing$origin, _listing$origin$data, _listing$origin$data$, _listing$origin$data$2;\n        const searchResponse = await fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            insc: {\n              file: {\n                hash: listing === null || listing === void 0 ? void 0 : (_listing$origin = listing.origin) === null || _listing$origin === void 0 ? void 0 : (_listing$origin$data = _listing$origin.data) === null || _listing$origin$data === void 0 ? void 0 : (_listing$origin$data$ = _listing$origin$data.insc) === null || _listing$origin$data$ === void 0 ? void 0 : (_listing$origin$data$2 = _listing$origin$data$.file) === null || _listing$origin$data$2 === void 0 ? void 0 : _listing$origin$data$2.hash\n              }\n            }\n          })\n        });\n        const searchData = await searchResponse.json();\n        console.log(\"searchData: \", searchData);\n        if (searchData[0] && searchData[0].spend === listing.txid) {\n          var _listing$origin2;\n          checkOnOrdinalsGorillaPool(listing === null || listing === void 0 ? void 0 : (_listing$origin2 = listing.origin) === null || _listing$origin2 === void 0 ? void 0 : _listing$origin2.outpoint);\n        } else {\n          setVerificationStatus(\"Not the first inscription (✗)\");\n          setVerificationStyle({\n            color: 'red'\n          });\n        }\n      } catch (error) {\n        console.error('Error verifying record:', error);\n        setVerificationStatus(\"Verification Error\");\n        setVerificationStyle({\n          color: 'red'\n        });\n      }\n    } else {\n      setVerificationStatus(\"Not A Number (✗)\");\n    }\n  };\n\n  // useEffect(() => {\n  //     switch (verificationStatus) {\n  //         case 'Verified (✓)':\n  //             setVerificationStyle({ color: 'green' });\n  //             break;\n  //         case 'Not Verified (✗)':\n  //         case 'Verification Error':\n  //         case 'Not A Number (✗)':\n  //         case 'Not the first inscription (✗)':\n  //             setVerificationStyle({ color: 'red' });\n  //             break;\n  //         default:\n  //             setVerificationStyle({});\n  //     }\n  // }, [verificationStatus]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marketplace-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listing-card rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl hover:bg-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-2xl mb-2\",\n          children: listing.origin.data.insc.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: verificationStyle,\n          children: verificationStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-0 border-black text-md rounded-xl p-2 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold mb-2 underline\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://whatsonchain.com/tx/${listing.txid}`,\n              children: \"tx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold mb-2 underline\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://whatsonchain.com/block-height/${listing.height}`,\n              children: [\"blk: \", listing.height]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold mb-2 underline\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://1satordinals.com/inscription/${listing.origin.num}`,\n              children: [\"#\", listing.origin.num]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBuyClick,\n        className: \"buy-btn border-0 text-md bg-blue-400 hover:bg-green-700 hover:text-white border-black rounded-xl p-4\",\n        children: [price, \" BSV ($\", USDprice, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(OGMarketplaceCard, \"nvzNtBuFI4NXG8B3PQyxhWLK140=\");\n_c = OGMarketplaceCard;\nexport default OGMarketplaceCard;\nvar _c;\n$RefreshReg$(_c, \"OGMarketplaceCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OGMarketplaceCard","listing","purchaseOrdinal","exchangeRate","_s","verificationStatus","setVerificationStatus","verificationStyle","setVerificationStyle","price","data","list","toFixed","USDprice","verifyRecord","length","children","fileName","_jsxFileName","lineNumber","columnNumber","isDigit","item","_item$origin","_item$origin$data","_item$origin$data$ins","_item$origin2","_item$origin2$data","_item$origin2$data$in","selectedIndex","origin","insc","words","parsed","parseInt","isNaN","handleBuyClick","outpoint","marketplaceRate","marketplaceAddress","checkOnOrdinalsGorillaPool","txid","ordinalsResponse","fetch","ordinalsData","json","console","log","isVerified","satoshis","lock","until","color","error","_listing$origin","_listing$origin$data","_listing$origin$data$","_listing$origin$data$2","searchResponse","method","headers","body","JSON","stringify","file","hash","searchData","spend","_listing$origin2","className","text","style","href","height","num","onClick","_c","$RefreshReg$"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGMarketplaceCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst OGMarketplaceCard = ({ listing, purchaseOrdinal, exchangeRate }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n    const [verificationStyle, setVerificationStyle] = useState({});\n\n    let price = (listing.data.list.price / 100000000).toFixed(4);\n    let USDprice = (price * exchangeRate).toFixed(2);\n\n\n    useEffect(() => {\n        verifyRecord();\n    }, [listing]);\n\n    if (!listing || listing.length === 0) {\n        return <div>No listing available</div>;\n    }\n\n    const isDigit = (item) => {\n        const selectedIndex = item.origin?.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.origin?.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    const handleBuyClick = () => {\n        const outpoint = listing.outpoint;\n        const marketplaceRate = 0.025; // Example rate, adjust as needed\n        const marketplaceAddress = \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\"; // Replace with actual address\n\n        purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n    };\n\n    const checkOnOrdinalsGorillaPool = async (txid) => {\n        try {\n            const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n            const ordinalsData = await ordinalsResponse.json();\n            console.log(\"ordinal locks: \", ordinalsData);\n\n            let isVerified = false;\n            for (const item of ordinalsData) {\n                if (item.satoshis >= 1000000 && item.data && item.data.lock && item.data.lock.until === 1050000) {\n                    isVerified = true;\n                    break;\n                }\n            }\n\n            if (isVerified) {\n                setVerificationStatus(\"Verified (✓)\");\n                setVerificationStyle({ color: 'green' });\n            } else {\n                setVerificationStatus(\"Not Verified (✗)\");\n                setVerificationStyle({ color: 'red' });\n            }\n        } catch (error) {\n            console.error('Error checking on Ordinals GorillaPool:', error);\n            setVerificationStatus(\"Verification Error\");\n        }\n    };\n\n\n    const verifyRecord = async () => {\n        if (isDigit(listing)) {\n            try {\n                const searchResponse = await fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ insc: { file: { hash: listing?.origin?.data?.insc?.file?.hash } } })\n                });\n                const searchData = await searchResponse.json();\n                console.log(\"searchData: \", searchData);\n\n                if (searchData[0] && searchData[0].spend === listing.txid) {\n                    checkOnOrdinalsGorillaPool(listing?.origin?.outpoint);\n                } else {\n                    setVerificationStatus(\"Not the first inscription (✗)\");\n                    setVerificationStyle({ color: 'red' });\n                }\n            } catch (error) {\n                console.error('Error verifying record:', error);\n                setVerificationStatus(\"Verification Error\");\n                setVerificationStyle({ color: 'red' });\n            }\n        } else {\n            setVerificationStatus(\"Not A Number (✗)\");\n        }\n    };\n\n    // useEffect(() => {\n    //     switch (verificationStatus) {\n    //         case 'Verified (✓)':\n    //             setVerificationStyle({ color: 'green' });\n    //             break;\n    //         case 'Not Verified (✗)':\n    //         case 'Verification Error':\n    //         case 'Not A Number (✗)':\n    //         case 'Not the first inscription (✗)':\n    //             setVerificationStyle({ color: 'red' });\n    //             break;\n    //         default:\n    //             setVerificationStyle({});\n    //     }\n    // }, [verificationStatus]);\n\n    return (\n        <div className=\"marketplace-container\">\n            <div className=\"listing-card rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl hover:bg-gray-300\">\n                <div className=\"px-6 py-4\">\n                    <div className=\"font-bold text-2xl mb-2\">{listing.origin.data.insc.text}</div>\n                    <div style={verificationStyle}>{verificationStatus}</div>\n                    <div className=\"border-0 border-black text-md rounded-xl p-2 \">\n                        <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${listing.txid}`}>tx</a></div>\n                        <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${listing.height}`}>blk: {listing.height}</a></div>\n                        <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${listing.origin.num}`}>#{listing.origin.num}</a></div>\n                    </div>\n                </div>\n                <button\n                    onClick={handleBuyClick}\n                    className=\"buy-btn border-0 text-md bg-blue-400 hover:bg-green-700 hover:text-white border-black rounded-xl p-4\">\n                    {price} BSV (${USDprice})\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default OGMarketplaceCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}