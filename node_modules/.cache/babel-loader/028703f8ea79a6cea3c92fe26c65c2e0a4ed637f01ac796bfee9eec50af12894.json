{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OGMarketplaceCard=function OGMarketplaceCard(_ref){var listing=_ref.listing,purchaseOrdinal=_ref.purchaseOrdinal,exchangeRate=_ref.exchangeRate;var _useState=useState('Pending'),_useState2=_slicedToArray(_useState,2),verificationStatus=_useState2[0],setVerificationStatus=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),verificationStyle=_useState4[0],setVerificationStyle=_useState4[1];var MARKET_FEE_RATE=0.015;var price=(listing.data.list.price/100000000+listing.data.list.price/100000000*MARKET_FEE_RATE).toFixed(4);var USDprice=(price*exchangeRate).toFixed(2);useEffect(function(){verifyRecord();},[listing]);if(!listing||listing.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\"No listing available\"});}var isDigit=function isDigit(item){var _item$origin,_item$origin$data,_item$origin$data$ins,_item$origin2,_item$origin2$data,_item$origin2$data$in;var selectedIndex=((_item$origin=item.origin)===null||_item$origin===void 0?void 0:(_item$origin$data=_item$origin.data)===null||_item$origin$data===void 0?void 0:(_item$origin$data$ins=_item$origin$data.insc)===null||_item$origin$data$ins===void 0?void 0:_item$origin$data$ins.words[0])==='og'?1:0;var parsed=parseInt((_item$origin2=item.origin)===null||_item$origin2===void 0?void 0:(_item$origin2$data=_item$origin2.data)===null||_item$origin2$data===void 0?void 0:(_item$origin2$data$in=_item$origin2$data.insc)===null||_item$origin2$data$in===void 0?void 0:_item$origin2$data$in.words[selectedIndex],10);return!isNaN(parsed);};var handleBuyClick=function handleBuyClick(){var outpoint=listing.outpoint;var marketplaceRate=MARKET_FEE_RATE;// Example rate, adjust as needed\nvar marketplaceAddress=\"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\";// Replace with actual address\npurchaseOrdinal(outpoint,marketplaceRate,marketplaceAddress);};var checkOnOrdinalsGorillaPool=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(txid){var ordinalsResponse,ordinalsData,isVerified,_iterator,_step,item;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://ordinals.gorillapool.io/api/locks/txid/\".concat(txid));case 3:ordinalsResponse=_context.sent;_context.next=6;return ordinalsResponse.json();case 6:ordinalsData=_context.sent;console.log(\"ordinal locks: \",ordinalsData);isVerified=false;_iterator=_createForOfIteratorHelper(ordinalsData);_context.prev=10;_iterator.s();case 12:if((_step=_iterator.n()).done){_context.next=19;break;}item=_step.value;if(!(item.satoshis>=1000000&&item.data&&item.data.lock&&item.data.lock.until===1050000)){_context.next=17;break;}isVerified=true;return _context.abrupt(\"break\",19);case 17:_context.next=12;break;case 19:_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](10);_iterator.e(_context.t0);case 24:_context.prev=24;_iterator.f();return _context.finish(24);case 27:if(isVerified){setVerificationStatus(\"Verified (✓)\");setVerificationStyle({color:'green'});}else{setVerificationStatus(\"Not Verified (✗)\");setVerificationStyle({color:'red'});}_context.next=34;break;case 30:_context.prev=30;_context.t1=_context[\"catch\"](0);console.error('Error checking on Ordinals GorillaPool:',_context.t1);setVerificationStatus(\"Verification Error\");case 34:case\"end\":return _context.stop();}},_callee,null,[[0,30],[10,21,24,27]]);}));return function checkOnOrdinalsGorillaPool(_x){return _ref2.apply(this,arguments);};}();var verifyRecord=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _listing$origin,_listing$origin$data,_listing$origin$data$,_listing$origin$data$2,searchResponse,searchData,_listing$origin2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!isDigit(listing)){_context2.next=19;break;}_context2.prev=1;_context2.next=4;return fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({insc:{file:{hash:listing===null||listing===void 0?void 0:(_listing$origin=listing.origin)===null||_listing$origin===void 0?void 0:(_listing$origin$data=_listing$origin.data)===null||_listing$origin$data===void 0?void 0:(_listing$origin$data$=_listing$origin$data.insc)===null||_listing$origin$data$===void 0?void 0:(_listing$origin$data$2=_listing$origin$data$.file)===null||_listing$origin$data$2===void 0?void 0:_listing$origin$data$2.hash}}})});case 4:searchResponse=_context2.sent;_context2.next=7;return searchResponse.json();case 7:searchData=_context2.sent;console.log(\"searchData: \",searchData);if(searchData[0]&&searchData[0].spend===listing.txid){checkOnOrdinalsGorillaPool(listing===null||listing===void 0?void 0:(_listing$origin2=listing.origin)===null||_listing$origin2===void 0?void 0:_listing$origin2.outpoint);}else{setVerificationStatus(\"Not the first inscription (✗)\");setVerificationStyle({color:'red'});}_context2.next=17;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](1);console.error('Error verifying record:',_context2.t0);setVerificationStatus(\"Verification Error\");setVerificationStyle({color:'red'});case 17:_context2.next=20;break;case 19:setVerificationStatus(\"Not A Number (✗)\");case 20:case\"end\":return _context2.stop();}},_callee2,null,[[1,12]]);}));return function verifyRecord(){return _ref3.apply(this,arguments);};}();// useEffect(() => {\n//     switch (verificationStatus) {\n//         case 'Verified (✓)':\n//             setVerificationStyle({ color: 'green' });\n//             break;\n//         case 'Not Verified (✗)':\n//         case 'Verification Error':\n//         case 'Not A Number (✗)':\n//         case 'Not the first inscription (✗)':\n//             setVerificationStyle({ color: 'red' });\n//             break;\n//         default:\n//             setVerificationStyle({});\n//     }\n// }, [verificationStatus]);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"marketplace-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"listing-card rounded-lg overflow-hidden m-2 p-4 bg-white border-4 border-black shadow-xl hover:bg-blue-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold text-2xl mb-2 tracking-widest\",children:listing.origin.data.insc.text}),/*#__PURE__*/_jsx(\"div\",{style:verificationStyle,children:verificationStatus}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-0 border-black text-md rounded-xl p-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline hover:text-blue-500\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://whatsonchain.com/tx/\".concat(listing.txid),children:\"tx\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline hover:text-blue-500\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://whatsonchain.com/block-height/\".concat(listing.height),children:[\"blk: \",listing.height]})}),/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-2 underline hover:text-blue-500\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"https://1satordinals.com/inscription/\".concat(listing.origin.num),children:[\"#\",listing.origin.num]})})]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleBuyClick,className:\"buy-btn border-0 text-md bg-blue-400 hover:bg-green-700 hover:text-white border-black rounded-xl p-4\",children:[price,\" BSV ($\",USDprice,\")\"]})]})});};export default OGMarketplaceCard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","OGMarketplaceCard","_ref","listing","purchaseOrdinal","exchangeRate","_useState","_useState2","_slicedToArray","verificationStatus","setVerificationStatus","_useState3","_useState4","verificationStyle","setVerificationStyle","MARKET_FEE_RATE","price","data","list","toFixed","USDprice","verifyRecord","length","children","isDigit","item","_item$origin","_item$origin$data","_item$origin$data$ins","_item$origin2","_item$origin2$data","_item$origin2$data$in","selectedIndex","origin","insc","words","parsed","parseInt","isNaN","handleBuyClick","outpoint","marketplaceRate","marketplaceAddress","checkOnOrdinalsGorillaPool","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","txid","ordinalsResponse","ordinalsData","isVerified","_iterator","_step","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","console","log","_createForOfIteratorHelper","s","n","done","value","satoshis","lock","until","abrupt","t0","e","f","finish","color","t1","error","stop","_x","apply","arguments","_ref3","_callee2","_listing$origin","_listing$origin$data","_listing$origin$data$","_listing$origin$data$2","searchResponse","searchData","_listing$origin2","_callee2$","_context2","method","headers","body","JSON","stringify","file","hash","spend","className","text","style","href","height","num","onClick"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGMarketplaceCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst OGMarketplaceCard = ({ listing, purchaseOrdinal, exchangeRate }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n    const [verificationStyle, setVerificationStyle] = useState({});\n\n    const MARKET_FEE_RATE = 0.015;\n    let price = ((listing.data.list.price / 100000000) + (listing.data.list.price / 100000000 * MARKET_FEE_RATE)).toFixed(4);\n    let USDprice = (price * exchangeRate).toFixed(2);\n\n\n    useEffect(() => {\n        verifyRecord();\n    }, [listing]);\n\n    if (!listing || listing.length === 0) {\n        return <div>No listing available</div>;\n    }\n\n    const isDigit = (item) => {\n        const selectedIndex = item.origin?.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.origin?.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    const handleBuyClick = () => {\n        const outpoint = listing.outpoint;\n        const marketplaceRate = MARKET_FEE_RATE; // Example rate, adjust as needed\n        const marketplaceAddress = \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\"; // Replace with actual address\n\n        purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n    };\n\n    const checkOnOrdinalsGorillaPool = async (txid) => {\n        try {\n            const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n            const ordinalsData = await ordinalsResponse.json();\n            console.log(\"ordinal locks: \", ordinalsData);\n\n            let isVerified = false;\n            for (const item of ordinalsData) {\n                if (item.satoshis >= 1000000 && item.data && item.data.lock && item.data.lock.until === 1050000) {\n                    isVerified = true;\n                    break;\n                }\n            }\n\n            if (isVerified) {\n                setVerificationStatus(\"Verified (✓)\");\n                setVerificationStyle({ color: 'green' });\n            } else {\n                setVerificationStatus(\"Not Verified (✗)\");\n                setVerificationStyle({ color: 'red' });\n            }\n        } catch (error) {\n            console.error('Error checking on Ordinals GorillaPool:', error);\n            setVerificationStatus(\"Verification Error\");\n        }\n    };\n\n\n    const verifyRecord = async () => {\n        if (isDigit(listing)) {\n            try {\n                const searchResponse = await fetch('https://ordinals.gorillapool.io/api/inscriptions/search?dir=ASC&limit=1&offset=0', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ insc: { file: { hash: listing?.origin?.data?.insc?.file?.hash } } })\n                });\n                const searchData = await searchResponse.json();\n                console.log(\"searchData: \", searchData);\n\n                if (searchData[0] && searchData[0].spend === listing.txid) {\n                    checkOnOrdinalsGorillaPool(listing?.origin?.outpoint);\n                } else {\n                    setVerificationStatus(\"Not the first inscription (✗)\");\n                    setVerificationStyle({ color: 'red' });\n                }\n            } catch (error) {\n                console.error('Error verifying record:', error);\n                setVerificationStatus(\"Verification Error\");\n                setVerificationStyle({ color: 'red' });\n            }\n        } else {\n            setVerificationStatus(\"Not A Number (✗)\");\n        }\n    };\n\n    // useEffect(() => {\n    //     switch (verificationStatus) {\n    //         case 'Verified (✓)':\n    //             setVerificationStyle({ color: 'green' });\n    //             break;\n    //         case 'Not Verified (✗)':\n    //         case 'Verification Error':\n    //         case 'Not A Number (✗)':\n    //         case 'Not the first inscription (✗)':\n    //             setVerificationStyle({ color: 'red' });\n    //             break;\n    //         default:\n    //             setVerificationStyle({});\n    //     }\n    // }, [verificationStatus]);\n\n    return (\n        <div className=\"marketplace-container\">\n            <div className=\"listing-card rounded-lg overflow-hidden m-2 p-4 bg-white border-4 border-black shadow-xl hover:bg-blue-100\">\n                <div className=\"px-6 py-4\">\n                    <div className=\"font-bold text-2xl mb-2 tracking-widest\">{listing.origin.data.insc.text}</div>\n                    <div style={verificationStyle}>{verificationStatus}</div>\n                    <div className=\"border-0 border-black text-md rounded-xl p-2\">\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/tx/${listing.txid}`}>tx</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/block-height/${listing.height}`}>blk: {listing.height}</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://1satordinals.com/inscription/${listing.origin.num}`}>#{listing.origin.num}</a></div>\n                    </div>\n                </div>\n                <button\n                    onClick={handleBuyClick}\n                    className=\"buy-btn border-0 text-md bg-blue-400 hover:bg-green-700 hover:text-white border-black rounded-xl p-4\">\n                    {price} BSV (${USDprice})\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default OGMarketplaceCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}