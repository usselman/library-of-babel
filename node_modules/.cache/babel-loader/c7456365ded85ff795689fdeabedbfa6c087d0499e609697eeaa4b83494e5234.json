{"ast":null,"code":"import axios from 'axios';\nconst getGayFrogBook = async () => {\n  try {\n    const requestBody = {\n      map: {\n        collectionID: \"Gay-Frogs\"\n      }\n    };\n    const response = await axios.post('https://ordinals.gorillapool.io/api/market?limit=100&offset=0', requestBody);\n    if (response.status === 200) {\n      const responseData = response.data;\n      return responseData;\n    } else {\n      console.error('Request failed with status:', response.status);\n    }\n  } catch (error) {\n    console.error('An error occurred:', error);\n  }\n};\nexport default getGayFrogBook;","map":{"version":3,"names":["axios","getGayFrogBook","requestBody","map","collectionID","response","post","status","responseData","data","console","error"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/page/api/gayfrogbook.js"],"sourcesContent":["import axios from 'axios';\n\nconst getGayFrogBook = async () => {\n\n    try {\n        const requestBody = {\n            map: { collectionID: \"Gay-Frogs\" }\n        }\n\n        const response = await axios.post('https://ordinals.gorillapool.io/api/market?limit=100&offset=0', requestBody);\n\n        if (response.status === 200) {\n            const responseData = response.data;\n            return responseData;\n        } else {\n            console.error('Request failed with status:', response.status);\n        }\n    } catch (error) {\n        console.error('An error occurred:', error);\n    }\n}\n\nexport default getGayFrogBook;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EAE/B,IAAI;IACA,MAAMC,WAAW,GAAG;MAChBC,GAAG,EAAE;QAAEC,YAAY,EAAE;MAAY;IACrC,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,+DAA+D,EAAEJ,WAAW,CAAC;IAE/G,IAAIG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MACzB,MAAMC,YAAY,GAAGH,QAAQ,CAACI,IAAI;MAClC,OAAOD,YAAY;IACvB,CAAC,MAAM;MACHE,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEN,QAAQ,CAACE,MAAM,CAAC;IACjE;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC9C;AACJ,CAAC;AAED,eAAeV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}