{"ast":null,"code":"var _jsxFileName = \"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OrdinalCard.jsx\";\nimport rarityData from './rarity.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateStats = itemName => {\n  // Define base stats for each item type\n  const baseStats = {\n    \"Boots\": {\n      defense: 10\n    } // Example base stat for boots\n    // ... other items\n  };\n\n  // Function to check if item has prefix/suffix and return modifier\n  const getModifier = (itemName, type) => {\n    const modifier = {\n      prefix: 1.1,\n      suffix: 1.2\n    }; // Example modifiers\n    let hasType = false;\n    rarityData[type].forEach(([name]) => {\n      if (itemName.includes(name) && name !== \"\") {\n        hasType = true;\n      }\n    });\n    return hasType ? modifier[type] : 1;\n  };\n\n  // Find the base item type (e.g., \"Boots\" from \"Steel Boots of the Fox\")\n  const baseItem = Object.keys(baseStats).find(item => itemName.includes(item));\n  if (!baseItem) return null; // Item not found in baseStats\n\n  let stats = {\n    ...baseStats[baseItem]\n  }; // Copy base stats\n\n  // Apply modifiers\n  stats.defense *= getModifier(itemName, \"prefixes\");\n  stats.defense *= getModifier(itemName, \"suffixes\");\n  return stats;\n};\nconst OrdinalCard = ({\n  ordinal\n}) => {\n  const getRarity = name => {\n    const parts = name.split(' ');\n    const hasPrefix = parts.length > 1 && parts[0] !== 'of';\n    const hasSuffix = parts.includes('of');\n    if (hasPrefix && hasSuffix) return 'Rare';\n    if (hasPrefix || hasSuffix) return 'Uncommon';\n    return 'Common';\n  };\n  const stats = calculateStats(ordinal.data.insc.text);\n  const rarity = getRarity(ordinal.data.insc.text);\n  const rarityStyles = {\n    Common: 'border-black text-black shadow-common',\n    Uncommon: 'border-blue-500 text-blue-500 shadow-uncommon',\n    Rare: 'border-yellow-500 text-yellow-500 shadow-rare'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rounded overflow-hidden m-4 p-4 bg-white border-2 ${rarityStyles[rarity]} hover:bg-gray-200  hover:extrabold`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold text-lg mb-2\",\n        children: ordinal.data.insc.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 text-base\",\n        children: rarity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = OrdinalCard;\nexport default OrdinalCard;\nvar _c;\n$RefreshReg$(_c, \"OrdinalCard\");","map":{"version":3,"names":["rarityData","jsxDEV","_jsxDEV","calculateStats","itemName","baseStats","defense","getModifier","type","modifier","prefix","suffix","hasType","forEach","name","includes","baseItem","Object","keys","find","item","stats","OrdinalCard","ordinal","getRarity","parts","split","hasPrefix","length","hasSuffix","data","insc","text","rarity","rarityStyles","Common","Uncommon","Rare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OrdinalCard.jsx"],"sourcesContent":["import rarityData from './rarity.json';\n\nconst calculateStats = (itemName) => {\n  // Define base stats for each item type\n  const baseStats = {\n    \"Boots\": { defense: 10 }, // Example base stat for boots\n    // ... other items\n  };\n\n  // Function to check if item has prefix/suffix and return modifier\n  const getModifier = (itemName, type) => {\n    const modifier = { prefix: 1.1, suffix: 1.2 }; // Example modifiers\n    let hasType = false;\n\n    rarityData[type].forEach(([name]) => {\n      if (itemName.includes(name) && name !== \"\") {\n        hasType = true;\n      }\n    });\n\n    return hasType ? modifier[type] : 1;\n  };\n\n  // Find the base item type (e.g., \"Boots\" from \"Steel Boots of the Fox\")\n  const baseItem = Object.keys(baseStats).find(item => itemName.includes(item));\n  if (!baseItem) return null; // Item not found in baseStats\n\n  let stats = { ...baseStats[baseItem] }; // Copy base stats\n\n  // Apply modifiers\n  stats.defense *= getModifier(itemName, \"prefixes\");\n  stats.defense *= getModifier(itemName, \"suffixes\");\n\n  return stats;\n};\n\n\nconst OrdinalCard = ({ ordinal }) => {\n\n  const getRarity = (name) => {\n    const parts = name.split(' ');\n    const hasPrefix = parts.length > 1 && parts[0] !== 'of';\n    const hasSuffix = parts.includes('of');\n\n    if (hasPrefix && hasSuffix) return 'Rare';\n    if (hasPrefix || hasSuffix) return 'Uncommon';\n    return 'Common';\n  };\n\n  const stats = calculateStats(ordinal.data.insc.text);\n  const rarity = getRarity(ordinal.data.insc.text);\n\n  const rarityStyles = {\n    Common: 'border-black text-black shadow-common',\n    Uncommon: 'border-blue-500 text-blue-500 shadow-uncommon',\n    Rare: 'border-yellow-500 text-yellow-500 shadow-rare',\n  };\n\n  return (\n    <div className={`rounded overflow-hidden m-4 p-4 bg-white border-2 ${rarityStyles[rarity]} hover:bg-gray-200  hover:extrabold`}>\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-lg mb-2\">{ordinal.data.insc.text}</div>\n        <p className=\"text-gray-700 text-base\">{rarity}</p>\n        {/* <p className=\"text-gray-600 text-sm\">\n          Description: {ordinal.description || \"N/A\"}\n        </p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default OrdinalCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}