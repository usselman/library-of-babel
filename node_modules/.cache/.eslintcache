[{"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/index.tsx":"1","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/reportWebVitals.ts":"2","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/App.tsx":"3","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/page/SamplePage.tsx":"4","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/components/PandaConnectButton.tsx":"5","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/components/OrdinalCard.jsx":"6","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/index.tsx":"7","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/reportWebVitals.ts":"8","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/App.tsx":"9","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OrdinalCard.jsx":"10","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/PandaConnectButton.tsx":"11","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/statsData.js":"12","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/LRCCard.jsx":"13","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/SonataCard.jsx":"14","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx":"15","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/page/HomePage.tsx":"16","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/page/api/orderbook.js":"17","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/MarketplaceCard.jsx":"18","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/helpers.js":"19"},{"size":580,"mtime":1701655221928,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1701655221929,"results":"22","hashOfConfig":"21"},{"size":124,"mtime":1701655221928,"results":"23","hashOfConfig":"21"},{"size":3213,"mtime":1701660069063,"results":"24","hashOfConfig":"21"},{"size":626,"mtime":1701656414015,"results":"25","hashOfConfig":"21"},{"size":1096,"mtime":1701659482957,"results":"26","hashOfConfig":"21"},{"size":651,"mtime":1702258180484,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1701655221929,"results":"29","hashOfConfig":"28"},{"size":171,"mtime":1702258164179,"results":"30","hashOfConfig":"28"},{"size":7974,"mtime":1702243763772,"results":"31","hashOfConfig":"28"},{"size":612,"mtime":1701677366852,"results":"32","hashOfConfig":"28"},{"size":13856,"mtime":1701672539121,"results":"33","hashOfConfig":"28"},{"size":1903,"mtime":1702093830655,"results":"34","hashOfConfig":"28"},{"size":2407,"mtime":1702101122495,"results":"35","hashOfConfig":"28"},{"size":4393,"mtime":1702101122494,"results":"36","hashOfConfig":"28"},{"size":12769,"mtime":1702323385817,"results":"37","hashOfConfig":"28"},{"size":593,"mtime":1702244837284,"results":"38","hashOfConfig":"28"},{"size":8224,"mtime":1702323872867,"results":"39","hashOfConfig":"28"},{"size":5867,"mtime":1702242047847,"results":"40","hashOfConfig":"28"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"r43vzq",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1c7mgci",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":14,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/index.tsx",[],[],["110"],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/reportWebVitals.ts",[],[],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/App.tsx",[],[],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/page/SamplePage.tsx",["111","112","113","114","115"],[],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/components/PandaConnectButton.tsx",["116"],[],"import pandaIcon from \"../assets/panda-icon.svg\";\n\nexport type PandaConnectButtonProps = {\n  onClick: () => void;\n  className?: string; // Optional className prop\n};\n\nexport const PandaConnectButton = (props: PandaConnectButtonProps) => {\n  const { onClick, className } = props;\n  return (\n    <button\n      onClick={onClick}\n      className={`flex items-center p-4 rounded border-none cursor-pointer text-lg font-bold text-gray-900 bg-green-300 ${className}`}\n    >\n      {/* <img src={pandaIcon} alt=\"icon\" className=\"mr-4 w-6 h-6\" /> */}\n      Connect Panda Wallet\n    </button>\n  );\n};\n\nexport default PandaConnectButton;\n","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/pandawalletsample/src/components/OrdinalCard.jsx",[],[],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/index.tsx",[],[],["117"],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/reportWebVitals.ts",[],[],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/App.tsx",["118"],[],"import \"./App.css\";\nimport { Analytics } from '@vercel/analytics/react';\nimport { HomePage } from \"./page/HomePage\";\n\nexport const App = () => {\n  return <HomePage />;\n};\n","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OrdinalCard.jsx",["119","120"],[],"import rarityData from \"../rarity.json\";\nimport atkIcon from '../assets/atk.png';\nimport defIcon from '../assets/def.png';\nimport { Tooltip } from 'react-tooltip'\nimport { clothingItems, weaponItems, baseDefenseStats, baseAttackStats, weaponTypes, armorTypes, prefixes, suffixes } from './statsData';\n\n// Convert rarityData numbers to modifiers\nconst convertToModifier = (number) => number / 100;\n\nconst modifiers = {\n  prefixes: Object.fromEntries(\n    prefixes.map(([prefix, number]) => [prefix, 1 + convertToModifier(number)])\n  ),\n  suffixes: Object.fromEntries(\n    suffixes.map(([suffix, number]) => [suffix, 1 + convertToModifier(number)])\n  ),\n};\n\nconst calculateStats = (itemName) => {\n  // Split the item name\n  const parts = itemName?.split(\" \");\n  let prefix = \"\";\n  let suffix = \"\";\n  let baseItemName = \"\";\n\n  if (parts?.includes(\"of\")) {\n    // Find the index where 'of' is located\n    const ofIndex = parts.indexOf(\"of\");\n    prefix = parts.slice(0, ofIndex).join(\" \");\n    suffix = parts.slice(ofIndex).join(\" \");\n    baseItemName = parts[ofIndex - 1];\n  } else {\n    baseItemName = parts[parts.length - 1];\n    prefix = parts.slice(0, parts.length - 1).join(\" \");\n  }\n\n  let baseStatValue;\n  let statType;\n  let armorType = null;\n\n  if (weaponItems?.includes(baseItemName)) {\n    baseStatValue = baseAttackStats[baseItemName] || 0;\n    statType = 'attack';\n  } else if (clothingItems?.includes(baseItemName)) {\n    baseStatValue = baseDefenseStats[baseItemName] || 0;\n    statType = 'defense';\n    armorType = armorTypes[baseItemName];\n  } else {\n    return null;\n  }\n\n  // Apply modifiers\n  const prefixModifier = modifiers.prefixes[prefix] ? (modifiers.prefixes[prefix] - 1) * baseStatValue : 0;\n  const suffixModifier = modifiers.suffixes[suffix] ? (modifiers.suffixes[suffix] - 1) * baseStatValue : 0;\n\n  const totalStat = baseStatValue + prefixModifier + suffixModifier;\n\n  // Limiting to two decimal places\n  const finalStatValue = parseFloat(Math.ceil(totalStat));\n\n  // if (!isAttackStat && armorTypes[baseItemName]) {\n\n  // }\n\n  return { [statType]: finalStatValue, baseStatValue, prefixModifier, suffixModifier, armorType };\n};\n\nconst OrdinalCard = ({ ordinal, transferOrdinal, listOrdinal }) => {\n  //console.log(\"passed ordinal\", ordinal);\n  const getRarity = (name) => {\n    const parts = name.split(\" \");\n    const hasPrefix = parts.length > 1 && parts[0] !== \"of\";\n    const hasSuffix = parts.includes(\"of\");\n\n    if (hasPrefix && hasSuffix) return \"Rare\";\n    if (hasPrefix || hasSuffix) return \"Uncommon\";\n    return \"Common\";\n  };\n\n  const stats = calculateStats(ordinal.data.insc.text);\n  const rarity = getRarity(ordinal.data.insc.text);\n  const itemType = ordinal?.data?.insc?.text?.split(\" \")[ordinal?.data?.insc?.text?.split(\" \").length - 1];\n  const weaponType = weaponTypes[itemType];\n  const isAttackStat = stats && stats.attack !== undefined;\n\n  const rarityStyles = {\n    Common: \"border-black text-black shadow-common hover:bg-gray-300\",\n    Uncommon: \"border-blue-500 text-blue-500 shadow-uncommon hover:bg-blue-300\",\n    Rare: \"border-yellow-500 shadow-rare rainbow-text\",\n  };\n\n  const renderRarityBadge = (rarity) => {\n    switch (rarity) {\n      case \"Rare\":\n        return <span className=\"text-yellow-500 font-bold\">Rare</span>;\n      case \"Uncommon\":\n        return <span className=\"text-blue-500 font-bold\">Uncommon</span>;\n      case \"Common\":\n      default:\n        return <span className=\"text-black font-bold\">Common</span>;\n    }\n  };\n\n  const tooltipId = `tooltip-${ordinal.origin.num}`;\n\n  const handleTransfer = () => {\n    // Prompt for the receiver's address\n    const receiverAddress = prompt(\"Enter the receiver's address:\");\n    if (!receiverAddress) return;\n\n    // Extract origin and outpoint from the ordinal\n    const { origin, outpoint } = ordinal;\n\n    // Call transferOrdinal function passed as a prop\n    transferOrdinal(receiverAddress, origin, outpoint);\n  };\n\n  const handleListOnMarketplace = () => {\n    alert(\"Coming soon!\");\n    // const payoutAddress = prompt(\"Enter your payout address:\");\n    // const satoshisPayout = parseInt(prompt(\"Enter the payout amount in satoshis:\"));\n    // if (!payoutAddress || isNaN(satoshisPayout)) return;\n\n    // const txid = ordinal.txid;\n    // const idx = ordinal.idx;\n    // const payPkWIF = \"YourPayPkWIF\"; // Replace with actual private key\n    // const ordPkWIF = \"YourOrdPkWIF\"; // Replace with actual private key\n\n    // listOrdinal(txid, idx, payPkWIF, ordPkWIF, payoutAddress, satoshisPayout)\n    //   .then((response) => {\n    //     console.log(\"Listing successful\", response);\n    //     // Handle successful listing\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"Listing failed\", error);\n    //     // Handle listing failure\n    //   });\n  };\n\n  return (\n    <div className=\"border-0 border-black\">\n      <div className={`relative rounded-lg overflow-hidden m-4 p-4 h-5/6 bg-white border-4 ${rarityStyles[rarity]} `}>\n        <div className=\"px-6 py-4 mb-48\">\n          <div className={`border-0 rounded-lg p-4 bg-white ${rarityStyles[rarity]} hover:bg-white hover:border-0`}>\n            <div className=\"font-bold text-lg mb-2\">{ordinal.data.insc.text}</div>\n            <span className=\"text-sm\">{renderRarityBadge(rarity)}</span>\n            {stats && (\n              <div className=\"mt-4\">\n                <div className=\"flex items-center\">\n                  <img\n                    src={isAttackStat ? atkIcon : defIcon}\n                    alt={isAttackStat ? \"Attack Icon\" : \"Defense Icon\"}\n                    className=\"h-4 w-4 mr-2\"\n                  />\n                  <p className={`${isAttackStat ? \"text-red-500\" : \"text-blue-500\"} text-sm font-bold`}>\n                    <a\n                      data-tooltip-id={tooltipId}\n                      data-tooltip-content={`Base: ${stats.baseStatValue} + \n                  Modifiers: ${stats.prefixModifier.toFixed(1)} / ${stats.suffixModifier.toFixed(1)}`}\n                      data-tooltip-place=\"bottom\"\n                    >\n                      {isAttackStat ? `Attack: ${stats.attack}` : `Defense: ${stats.defense}`}\n                    </a>\n                    <Tooltip id={tooltipId} />\n                  </p>\n                </div>\n                {weaponType && (\n                  <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                    {weaponType}\n                  </p>\n                )}\n                {stats.armorType && (\n                  <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                    {stats.armorType}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n          <div className={`absolute bottom-0 left-0 right-0 border-0 border-black shadow-none text-sm rounded-xl p-4 m-4 bg-white hover:bg-white ${rarityStyles[rarity]} hover:border-0`}>\n            <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/${ordinal.txid}`}>tx</a></div>\n            <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n            <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n\n          </div>\n        </div>\n\n      </div>\n      <div className=\"text-center m-4\">\n        <button\n          onClick={handleTransfer}\n          className=\"transfer-btn text-black border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-2 place-content-center\">\n          Transfer\n        </button>\n        <button\n          onClick={handleListOnMarketplace}\n          className=\"list-btn px-6 text-black border-0 text-md bg-red-500 hover:bg-black hover:text-white border-black rounded-xl p-2 place-content-center\">\n          List\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default OrdinalCard;\n",["121"],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/PandaConnectButton.tsx",["122"],[],"import pandaIcon from \"../assets/panda-icon.svg\";\n\nexport type PandaConnectButtonProps = {\n  onClick: () => void;\n  className?: string; // Optional className prop\n};\n\nexport const PandaConnectButton = (props: PandaConnectButtonProps) => {\n  const { onClick, className } = props;\n  return (\n    <button\n      onClick={onClick}\n      className={`flex items-center p-4 rounded border-none cursor-pointer text-lg font-bold bg-green-500 ${className}`}\n    >\n      {/* <img src={pandaIcon} alt=\"icon\" className=\"mr-4 w-6 h-6\" /> */}\n      Connect Panda Wallet\n    </button>\n  );\n};\n\nexport default PandaConnectButton;\n","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/statsData.js",["123","124"],[],"//Categorize items\nexport const clothingItems = [\n    \"Trousers\",\n    \"Bronze Boots\",\n    \"Amulet\",\n    \"Ninja Mask\",\n    \"Dark Knight Greaves\",\n    \"Hood\",\n    \"Dragoon Boots\",\n    \"Dragoon Helmet\",\n    \"Steel Shield\",\n    \"Kevlar\",\n    \"Leather Gloves\",\n    \"Bronze Gloves\",\n    \"Bandana\",\n    \"Bronze Shield\",\n    \"Wizard Hat\",\n    \"Mythril Helmet\",\n    \"Mask\",\n    \"Tunic\",\n    \"Ring\",\n    \"Leather Armor\",\n    \"Gloves\",\n    \"Boots\",\n    \"Greaves\",\n    \"Leather Boots\",\n    \"Sorceress Circlet\",\n    \"Shield\",\n    \"Headband\",\n    \"Leggings\",\n    \"Skullcap\",\n    \"Silk Leggings\",\n    \"Shoes\",\n    \"Mythril Shield\",\n    \"Wristbands\",\n    \"Leather Shield\",\n    \"Steel Gloves\",\n    \"Feather Cap\",\n    \"Gauntlets\",\n    \"Mythril Armor\",\n    \"Mythril Gloves\",\n    \"Cap\",\n    \"Bracers\",\n    \"Dragoon Gauntlets\",\n    \"Sorceress Slippers\",\n    \"Tiara\",\n    \"Wizard Slippers\",\n    \"Feather Boots\",\n    \"Circlet\",\n    \"Leather Helmet\",\n    \"Mythril Boots\",\n    \"Scales\",\n    \"Dark Knight Gauntlets\",\n    \"Tuxedo\",\n    \"Parrying Shield\",\n    \"Heels\",\n    \"Helmet\",\n    \"Assassin Garb\",\n    \"Dark Knight Helmet\",\n    \"Buckler\",\n    \"Slippers\",\n    \"Horned Helment\",\n    \"Necklace\",\n    \"Wooden Shield\",\n    \"Husk\",\n    \"Charm\",\n    \"Full Plate Armor\",\n    \"Longboots\",\n    \"Mail\",\n    \"Earrings\",\n    \"Top Hat\",\n    \"Dragoon Shield\",\n    \"Vest\",\n    \"Cloak\",\n    \"Sash\",\n    \"Belt\",\n    \"Dress Shoes\",\n    \"Dragoon Armor\",\n    \"Sorceress Robe\",\n    \"Gi\",\n    \"Steel Boots\",\n    \"Silk Robe\",\n    \"Cotton Robe\",\n    \"Robe\",\n    \"Chain Mail\",\n    \"Dark Knight Shield\",\n    \"Wizard Robe\",\n    \"Dark Knight Armor\",\n    \"Bronze Helmet\",\n    \"Gown\",\n    \"Sage Robe\",\n    \"Suit\",\n    \"Bronze Armor\",\n    \"Steel Helmet\",\n    \"Armor\",\n    \"Garb\",\n    \"Ninja Garb\",\n  ];\n  \n export const weaponItems = [\n    \"Water Scroll\",\n    \"Fire Scroll\",\n    \"Thunder Tome\",\n    \"Wind Tome\",\n    \"Dark Scroll\",\n    \"Earth Scroll\",\n    \"Light Wand\",\n    \"Thunder Wand\",\n    \"Ice Wand\",\n    \"Light Scroll\",\n    \"Dark Tome\",\n    \"Fire Staff\",\n    \"Light Staff\",\n    \"Wind Staff\",\n    \"Wind Wand\",\n    \"Dark Staff\",\n    \"Water Tome\",\n    \"Earth Tome\",\n    \"Earth Wand\",\n    \"Ice Staff\",\n    \"Thunder Staff\",\n    \"Earth Staff\",\n    \"Light Tome\",\n    \"Fire Tome\",\n    \"Ice Tome\",\n    \"Wind Scroll\",\n    \"Ice Scroll\",\n    \"Club\",\n    \"Fire Wand\",\n    \"Scroll\",\n    \"Longsword\",\n    \"Tome\",\n    \"Water Wand\",\n    \"Sickle\",\n    \"Thunder Scroll\",\n    \"Sniperbow\",\n    \"Demonica\",\n    \"Kunai\",\n    \"Grenade Launcher\",\n    \"Katana\",\n    \"Lance\",\n    \"Wand\",\n    \"Spear\",\n    \"Knife\",\n    \"Lightsaber\",\n    \"Catclaws\",\n    \"Greatsword\",\n    \"Assault Rifle\",\n    \"Rapier\",\n    \"Sabre\",\n    \"Knuckles\",\n    \"Derringer\",\n    \"Bow\",\n    \"Estoc\",\n    \"Falchion\",\n    \"Naginata\",\n    \"Axe\",\n    \"Scalers\",\n    \"Revolving Pistol\",\n    \"Sniper Rifle\",\n    \"Fists\",\n    \"Dark Wand\",\n    \"Claws\",\n    \"Shortsword\",\n    \"Claymore\",\n    \"Dagger\",\n    \"Needle\",\n    \"Tomahawk\",\n    \"Whip\",\n    \"Gatling Gun\",\n    \"Shotgun\",\n    \"Machete\",\n    \"Scythe\",\n    \"Mace\",\n    \"Blade\",\n    \"Hatchet\",\n    \"Longbow\",\n    \"Hammer\",\n    \"Scimitar\",\n    \"Parrying Dagger\",\n    \"Crossbow\",\n    \"Blunderbuss\",\n    \"Water Staff\",\n    \"Staff\",\n  ];\n  \n export const baseDefenseStats = {\n    \"Trousers\": 2,\n    \"Bronze Boots\": 3,\n    \"Amulet\": 1,\n    \"Ninja Mask\": 2,\n    \"Dark Knight Greaves\": 5,\n    \"Hood\": 1,\n    \"Dragoon Boots\": 4,\n    \"Dragoon Helmet\": 4,\n    \"Steel Shield\": 6,\n    \"Kevlar\": 7,\n    \"Leather Gloves\": 2,\n    \"Bronze Gloves\": 3,\n    \"Bandana\": 1,\n    \"Bronze Shield\": 5,\n    \"Wizard Hat\": 1,\n    \"Mythril Helmet\": 5,\n    \"Mask\": 2,\n    \"Tunic\": 2,\n    \"Ring\": 1,\n    \"Leather Armor\": 4,\n    \"Gloves\": 2,\n    \"Boots\": 3,\n    \"Greaves\": 4,\n    \"Leather Boots\": 3,\n    \"Sorceress Circlet\": 2,\n    \"Shield\": 5,\n    \"Headband\": 1,\n    \"Leggings\": 2,\n    \"Skullcap\": 2,\n    \"Silk Leggings\": 2,\n    \"Shoes\": 1,\n    \"Mythril Shield\": 6,\n    \"Wristbands\": 1,\n    \"Leather Shield\": 4,\n    \"Steel Gloves\": 4,\n    \"Feather Cap\": 1,\n    \"Gauntlets\": 4,\n    \"Mythril Armor\": 7,\n    \"Mythril Gloves\": 5,\n    \"Cap\": 1,\n    \"Bracers\": 3,\n    \"Dragoon Gauntlets\": 5,\n    \"Sorceress Slippers\": 2,\n    \"Tiara\": 1,\n    \"Wizard Slippers\": 2,\n    \"Feather Boots\": 2,\n    \"Circlet\": 1,\n    \"Leather Helmet\": 3,\n    \"Mythril Boots\": 5,\n    \"Scales\": 3,\n    \"Dark Knight Gauntlets\": 5,\n    \"Tuxedo\": 1,\n    \"Parrying Shield\": 6,\n    \"Heels\": 1,\n    \"Helmet\": 4,\n    \"Assassin Garb\": 3,\n    \"Dark Knight Helmet\": 5,\n    \"Buckler\": 3,\n    \"Slippers\": 1,\n    \"Horned Helment\": 4,\n    \"Necklace\": 1,\n    \"Wooden Shield\": 3,\n    \"Husk\": 2,\n    \"Charm\": 1,\n    \"Full Plate Armor\": 8,\n    \"Longboots\": 3,\n    \"Mail\": 5,\n    \"Earrings\": 1,\n    \"Top Hat\": 1,\n    \"Dragoon Shield\": 6,\n    \"Vest\": 2,\n    \"Cloak\": 2,\n    \"Sash\": 1,\n    \"Belt\": 1,\n    \"Dress Shoes\": 1,\n    \"Dragoon Armor\": 7,\n    \"Sorceress Robe\": 2,\n    \"Gi\": 2,\n    \"Steel Boots\": 4,\n    \"Silk Robe\": 2,\n    \"Cotton Robe\": 2,\n    \"Robe\": 2,\n    \"Chain Mail\": 6,\n    \"Dark Knight Shield\": 6,\n    \"Wizard Robe\": 2,\n    \"Dark Knight Armor\": 7,\n    \"Bronze Helmet\": 4,\n    \"Gown\": 1,\n    \"Sage Robe\": 2,\n    \"Suit\": 1,\n    \"Bronze Armor\": 5,\n    \"Steel Helmet\": 5,\n    \"Armor\": 6,\n    \"Garb\": 2,\n    \"Ninja Garb\": 3,\n  };\n  \n export const baseAttackStats = {\n    // Magical Weapons\n    \"Water Scroll\": 8,\n    \"Fire Scroll\": 10,\n    \"Thunder Tome\": 12,\n    \"Wind Tome\": 9,\n    \"Dark Scroll\": 11,\n    \"Earth Scroll\": 7,\n    \"Light Wand\": 6,\n    \"Thunder Wand\": 10,\n    \"Ice Wand\": 8,\n    \"Light Scroll\": 5,\n    \"Dark Tome\": 11,\n    \"Fire Staff\": 10,\n    \"Light Staff\": 6,\n    \"Wind Staff\": 9,\n    \"Wind Wand\": 9,\n    \"Dark Staff\": 12,\n    \"Water Tome\": 8,\n    \"Earth Tome\": 7,\n    \"Earth Wand\": 7,\n    \"Ice Staff\": 8,\n    \"Thunder Staff\": 11,\n    \"Earth Staff\": 7,\n    \"Light Tome\": 6,\n    \"Fire Tome\": 10,\n    \"Ice Tome\": 8,\n    \"Wind Scroll\": 9,\n    \"Ice Scroll\": 8,\n  \n    // Melee Weapons\n    \"Club\": 15,\n    \"Fire Wand\": 6,\n    \"Scroll\": 4,\n    \"Longsword\": 18,\n    \"Tome\": 5,\n    \"Water Wand\": 6,\n    \"Sickle\": 16,\n    \"Thunder Scroll\": 10,\n    \"Sniperbow\": 20,\n    \"Demonica\": 22,\n    \"Kunai\": 7,\n    \"Grenade Launcher\": 25,\n    \"Katana\": 19,\n    \"Lance\": 17,\n    \"Wand\": 5,\n    \"Spear\": 16,\n    \"Knife\": 10,\n    \"Lightsaber\": 23,\n    \"Catclaws\": 13,\n    \"Greatsword\": 21,\n    \"Assault Rifle\": 24,\n    \"Rapier\": 14,\n    \"Sabre\": 15,\n    \"Knuckles\": 13,\n    \"Derringer\": 9,\n    \"Bow\": 14,\n    \"Estoc\": 17,\n    \"Falchion\": 16,\n    \"Naginata\": 18,\n    \"Axe\": 17,\n    \"Scalers\": 12,\n    \"Revolving Pistol\": 11,\n    \"Sniper Rifle\": 20,\n    \"Fists\": 8,\n    \"Dark Wand\": 7,\n    \"Claws\": 12,\n    \"Shortsword\": 14,\n    \"Claymore\": 19,\n    \"Dagger\": 11,\n    \"Needle\": 7,\n    \"Tomahawk\": 12,\n    \"Whip\": 10,\n    \"Gatling Gun\": 26,\n    \"Shotgun\": 22,\n    \"Machete\": 15,\n    \"Scythe\": 18,\n    \"Mace\": 17,\n    \"Blade\": 14,\n    \"Hatchet\": 15,\n    \"Longbow\": 14,\n    \"Hammer\": 18,\n    \"Scimitar\": 16,\n    \"Parrying Dagger\": 10,\n    \"Crossbow\": 15,\n    \"Blunderbuss\": 21,\n    \"Water Staff\": 6,\n    \"Staff\": 5,\n  };\n  \n  export const weaponTypes = {\n    // Scrolls, Tomes, and Wands (Magical Weapons)\n    \"Water Scroll\": \"Water Magic\",\n    \"Fire Scroll\": \"Fire Magic\",\n    \"Thunder Tome\": \"Thunder Magic\",\n    \"Wind Tome\": \"Wind Magic\",\n    \"Dark Scroll\": \"Dark Magic\",\n    \"Earth Scroll\": \"Earth Magic\",\n    \"Light Wand\": \"Light Magic\",\n    \"Thunder Wand\": \"Thunder Magic\",\n    \"Ice Wand\": \"Ice Magic\",\n    \"Light Scroll\": \"Light Magic\",\n    \"Dark Tome\": \"Dark Magic\",\n    \"Fire Staff\": \"Fire Magic\",\n    \"Light Staff\": \"Light Magic\",\n    \"Wind Staff\": \"Wind Magic\",\n    \"Wind Wand\": \"Wind Magic\",\n    \"Dark Staff\": \"Dark Magic\",\n    \"Water Tome\": \"Water Magic\",\n    \"Earth Tome\": \"Earth Magic\",\n    \"Earth Wand\": \"Earth Magic\",\n    \"Ice Staff\": \"Ice Magic\",\n    \"Thunder Staff\": \"Thunder Magic\",\n    \"Earth Staff\": \"Earth Magic\",\n    \"Light Tome\": \"Light Magic\",\n    \"Fire Tome\": \"Fire Magic\",\n    \"Ice Tome\": \"Ice Magic\",\n    \"Wind Scroll\": \"Wind Magic\",\n    \"Ice Scroll\": \"Ice Magic\",\n    \"Fire Wand\": \"Fire Magic\",\n    \"Water Wand\": \"Water Magic\",\n  \n    // Melee and Physical Weapons\n    \"Club\": \"Blunt\",\n    \"Longsword\": \"Slash\",\n    \"Sickle\": \"Slash\",\n    \"Katana\": \"Slash\",\n    \"Lance\": \"Pierce\",\n    \"Wand\": \"Magic Conduit\",\n    \"Spear\": \"Pierce\",\n    \"Knife\": \"Stab\",\n    \"Lightsaber\": \"Energy Slash\",\n    \"Catclaws\": \"Slash\",\n    \"Greatsword\": \"Heavy Slash\",\n    \"Rapier\": \"Finesse Pierce\",\n    \"Sabre\": \"Slash\",\n    \"Knuckles\": \"Blunt\",\n    \"Derringer\": \"Small Firearm\",\n    \"Bow\": \"Ranged\",\n    \"Estoc\": \"Pierce\",\n    \"Falchion\": \"Slash\",\n    \"Naginata\": \"Slash and Pierce\",\n    \"Axe\": \"Chop\",\n    \"Scalers\": \"Climbing Tool\",\n    \"Revolving Pistol\": \"Firearm\",\n    \"Sniper Rifle\": \"Precision Ranged\",\n    \"Fists\": \"Blunt\",\n    \"Dark Wand\": \"Dark Magic\",\n    \"Claws\": \"Slash\",\n    \"Shortsword\": \"Slash\",\n    \"Claymore\": \"Heavy Slash\",\n    \"Dagger\": \"Stab\",\n    \"Needle\": \"Precision Stab\",\n    \"Tomahawk\": \"Chop\",\n    \"Whip\": \"Lash\",\n    \"Gatling Gun\": \"Rapid Firearm\",\n    \"Shotgun\": \"Spread Firearm\",\n    \"Machete\": \"Chop\",\n    \"Scythe\": \"Sweep Slash\",\n    \"Mace\": \"Blunt\",\n    \"Blade\": \"Slash\",\n    \"Hatchet\": \"Chop\",\n    \"Longbow\": \"Ranged\",\n    \"Hammer\": \"Blunt\",\n    \"Scimitar\": \"Curve Slash\",\n    \"Parrying Dagger\": \"Defensive Stab\",\n    \"Crossbow\": \"Ranged\",\n    \"Blunderbuss\": \"Spread Firearm\",\n    \"Water Staff\": \"Water Magic\",\n    \"Staff\": \"Magic Conduit\",\n    \"Kunai\": \"Throwing Weapon\",\n    \"Sniperbow\": \"Precision Ranged\",\n  \n    // Generic or Unclassified\n    \"Scroll\": \"Magic Scroll\",\n    \"Tome\": \"Magic Tome\",\n    \"Demonica\": \"Dark Magic\",\n    \"Scalers\": \"Utility\",\n    \"Fists\": \"Blunt\",\n    \"Assault Rifle\": \"Rapid Firearm\",\n  };\n  \n  export const armorTypes = {\n    \"Trousers\": \"Legs\",\n    \"Bronze Boots\": \"Feet\",\n    \"Amulet\": \"Accessory\",\n    \"Ninja Mask\": \"Head\",\n    \"Dark Knight Greaves\": \"Legs\",\n    \"Hood\": \"Head\",\n    \"Dragoon Boots\": \"Feet\",\n    \"Dragoon Helmet\": \"Head\",\n    \"Steel Shield\": \"Shield\",\n    \"Kevlar\": \"Body\",\n    \"Leather Gloves\": \"Hands\",\n    \"Bronze Gloves\": \"Hands\",\n    \"Bandana\": \"Head\",\n    \"Bronze Shield\": \"Shield\",\n    \"Wizard Hat\": \"Head\",\n    \"Mythril Helmet\": \"Head\",\n    \"Mask\": \"Head\",\n    \"Tunic\": \"Body\",\n    \"Ring\": \"Accessory\",\n    \"Leather Armor\": \"Body\",\n    \"Gloves\": \"Hands\",\n    \"Boots\": \"Feet\",\n    \"Greaves\": \"Legs\",\n    \"Leather Boots\": \"Feet\",\n    \"Sorceress Circlet\": \"Head\",\n    \"Shield\": \"Shield\",\n    \"Headband\": \"Head\",\n    \"Leggings\": \"Legs\",\n    \"Skullcap\": \"Head\",\n    \"Silk Leggings\": \"Legs\",\n    \"Shoes\": \"Feet\",\n    \"Mythril Shield\": \"Shield\",\n    \"Wristbands\": \"Hands\",\n    \"Leather Shield\": \"Shield\",\n    \"Steel Gloves\": \"Hands\",\n    \"Feather Cap\": \"Head\",\n    \"Gauntlets\": \"Hands\",\n    \"Mythril Armor\": \"Body\",\n    \"Mythril Gloves\": \"Hands\",\n    \"Cap\": \"Head\",\n    \"Bracers\": \"Arms\",\n    \"Dragoon Gauntlets\": \"Hands\",\n    \"Sorceress Slippers\": \"Feet\",\n    \"Tiara\": \"Head\",\n    \"Wizard Slippers\": \"Feet\",\n    \"Feather Boots\": \"Feet\",\n    \"Circlet\": \"Head\",\n    \"Leather Helmet\": \"Head\",\n    \"Mythril Boots\": \"Feet\",\n    \"Scales\": \"Body\",\n    \"Dark Knight Gauntlets\": \"Hands\",\n    \"Tuxedo\": \"Body\",\n    \"Parrying Shield\": \"Shield\",\n    \"Heels\": \"Feet\",\n    \"Helmet\": \"Head\",\n    \"Assassin Garb\": \"Body\",\n    \"Dark Knight Helmet\": \"Head\",\n    \"Buckler\": \"Shield\",\n    \"Slippers\": \"Feet\",\n    \"Horned Helment\": \"Head\",\n    \"Necklace\": \"Accessory\",\n    \"Wooden Shield\": \"Shield\",\n    \"Husk\": \"Body\",\n    \"Charm\": \"Accessory\",\n    \"Full Plate Armor\": \"Body\",\n    \"Longboots\": \"Feet\",\n    \"Mail\": \"Body\",\n    \"Earrings\": \"Accessory\",\n    \"Top Hat\": \"Head\",\n    \"Dragoon Shield\": \"Shield\",\n    \"Vest\": \"Body\",\n    \"Cloak\": \"Body\",\n    \"Sash\": \"Accessory\",\n    \"Belt\": \"Accessory\",\n    \"Dress Shoes\": \"Feet\",\n    \"Dragoon Armor\": \"Body\",\n    \"Sorceress Robe\": \"Body\",\n    \"Gi\": \"Body\",\n    \"Steel Boots\": \"Feet\",\n    \"Silk Robe\": \"Body\",\n    \"Cotton Robe\": \"Body\",\n    \"Robe\": \"Body\",\n    \"Chain Mail\": \"Body\",\n    \"Dark Knight Shield\": \"Shield\",\n    \"Wizard Robe\": \"Body\",\n    \"Dark Knight Armor\": \"Body\",\n    \"Bronze Helmet\": \"Head\",\n    \"Gown\": \"Body\",\n    \"Sage Robe\": \"Body\",\n    \"Suit\": \"Body\",\n    \"Bronze Armor\": \"Body\",\n    \"Steel Helmet\": \"Head\",\n    \"Armor\": \"Body\",\n    \"Garb\": \"Body\",\n    \"Ninja Garb\": \"Body\"\n  };\n  \n  \n  export const prefixes = [\n    [\"Gold\", 215],\n    [\"Adamantium\", 243],\n    [\"Black\", 195],\n    [\"Wailing\", 196],\n    [\"Sun\", 217],\n    [\"Holy\", 225],\n    [\"Everbearing\", 219],\n    [\"Bone\", 207],\n    [\"Silver\", 201],\n    [\"Divine\", 223],\n    [\"Demon\", 191],\n    [\"Zephyr\", 205],\n    [\"Fabled\", 212],\n    [\"Angelic\", 210],\n    [\"Crescent Moon\", 189],\n    [\"Profane\", 194],\n    [\"Arcane\", 217],\n    [\"Drake\", 236],\n    [\"Spectral\", 190],\n    [\"Shadow\", 222],\n    [\"Unyielding\", 208],\n    [\"Bright\", 203],\n    [\"Elven\", 226],\n    [\"Undead\", 225],\n    [\"Moon\", 212],\n    [\"Cursed\", 211],\n    [\"Faithful\", 194],\n    [\"Star\", 195],\n  ];\n  \n  export const suffixes = [\n    [\"of Spirit\", 152],\n    [\"of Dexterity\", 152],\n    [\"of Salvation\", 139],\n    [\"of Illumination\", 139],\n    [\"of Strength\", 137],\n    [\"of Tears\", 153],\n    [\"of Ruin\", 143],\n    [\"of Terror\", 132],\n    [\"of Agility\", 157],\n    [\"of Protection\", 156],\n    [\"of Intellect\", 145],\n    [\"of Vigor\", 131],\n    [\"of the Duck\", 121],\n    [\"of Spite\", 140],\n    [\"of Luck\", 128],\n    [\"of Nightmares\", 147],\n    [\"of Vigilance\", 133],\n    [\"of Rapture\", 147],\n    [\"of Fortune\", 134],\n    [\"of the Night\", 151],\n    [\"of the Kraken\", 160],\n    [\"of Destruction\", 130],\n    [\"of Despair\", 130],\n    [\"of the Panda\", 138],\n    [\"of Sorrow\", 153],\n    [\"of Soul\", 124],\n    [\"of the Frog\", 126],\n    [\"of the Ape\", 143],\n    [\"of Dreams\", 133],\n    [\"of Mercy\", 160],\n    [\"of Peace\", 141],\n    [\"of Vitality\", 152],\n    [\"of Tolerance\", 130],\n    [\"of Virtue\", 140],\n    [\"of Sin\", 148],\n    [\"of Titans\", 149],\n    [\"of the Fox\", 152],\n    [\"of the Peacock\", 139],\n    [\"of the Stag\", 126],\n    [\"of Fate\", 120],\n  ];","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/LRCCard.jsx",["125"],[],"import React, { useEffect } from \"react\";\n\nconst LRCCard = ({ ordinal, setHodlSum }) => {\n  console.log(\"passed LRC-20\", ordinal);\n\n  let lrcName;\n  let verificationMessage = null;\n  let verificationStyle = {};\n  let valid;\n  const amount = parseFloat(ordinal.data.insc.json.amt);\n\n  if (ordinal.data.insc.json.id === 'bfd3bfe2d65a131e9792ee04a2da9594d9dc8741a7ab362c11945bfc368d2063_1') {\n    lrcName = '$hodl';\n\n\n    // Check block height for $hodl\n    if (ordinal.height > 821205) {\n      verificationMessage = 'Invalid mint (after blk 821205)';\n      verificationStyle = { color: 'red' };\n      valid = false;\n    } else {\n      verificationMessage = 'Valid mint';\n      verificationStyle = { color: 'green' };\n      valid = true;\n    }\n  } else {\n    lrcName = 'unknown LRC-20';\n  }\n\n  useEffect(() => {\n    if (valid) {\n      setHodlSum(prev => prev + amount);\n    }\n  }, []);\n\n\n  return (\n    <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl hover:bg-gray-300`}>\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-lg mb-2\">{lrcName}</div>\n        {verificationMessage && <div style={verificationStyle}>{verificationMessage}</div>}\n        <div className=\"font-bold text-lg mb-2\">Amount: {ordinal.data.insc.json.amt}</div>\n        <div className=\"border-2 border-black text-md rounded-xl p-4 bg-white\">\n          <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>{ordinal.data.insc.json.op} tx</a></div>\n          <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n          <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LRCCard;\n","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/SonataCard.jsx",[],[],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/OGCards.jsx",["126"],[],"import { useState, useEffect } from 'react';\n\nconst OGCards = ({ ordinal, address, transferOrdinal }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n\n    const isDigit = (item) => {\n        const selectedIndex = item.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    const checkOnOrdinalsGorillaPool = async (txid) => {\n        try {\n            const ordinalsResponse = await fetch(`https://ordinals.gorillapool.io/api/locks/txid/${txid}`);\n            const ordinalsData = await ordinalsResponse.json();\n            if (ordinalsData.length > 0 && ordinalsData[0].satoshis >= 1000000 && ordinalsData[0].data && ordinalsData[0].data.lock && ordinalsData[0].data.lock.until === 1050000) {\n                setVerificationStatus(\"Verified (✓)\");\n            } else {\n                setVerificationStatus(\"Not Verified (✗)\");\n            }\n        } catch (error) {\n            console.error('Error checking on Ordinals GorillaPool:', error);\n            setVerificationStatus(\"Verification Error\");\n        }\n    };\n\n    const verifyRecord = async () => {\n        if (isDigit(ordinal)) {\n            try {\n                const searchResponse = await fetch('https://v3.ordinals.gorillapool.io/api/inscriptions/search?sort=ASC&limit=1&offset=0', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ insc: { file: { hash: ordinal.data.insc.file.hash } } })\n                });\n                const searchData = await searchResponse.json();\n\n                if (searchData[0] && searchData[0].txid === ordinal.txid) {\n                    checkOnOrdinalsGorillaPool(ordinal.txid);\n                } else {\n                    setVerificationStatus(\"Not the first inscription (✗)\");\n                }\n            } catch (error) {\n                console.error('Error verifying record:', error);\n                setVerificationStatus(\"Verification Error\");\n            }\n        } else {\n            setVerificationStatus(\"Not A Number (✗)\");\n        }\n    };\n\n    useEffect(() => {\n        verifyRecord();\n    }, []);\n\n    const handleTransfer = () => {\n        // Prompt for the receiver's address\n        const receiverAddress = prompt(\"Enter the receiver's address:\");\n        if (!receiverAddress) return;\n\n        // Extract origin and outpoint from the ordinal\n        const { origin, outpoint } = ordinal;\n\n        // Call transferOrdinal function passed as a prop\n        transferOrdinal(receiverAddress, origin, outpoint);\n    };\n\n    return (\n        <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-4 border-black shadow-xl`}>\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-lg mb-2\">{ordinal.data.insc.text}</div>\n                {/* <button onClick={verifyRecord} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                    Verify\n                </button> */}\n                <div\n                    className=\"m-4\"\n                    style={{ color: verificationStatus.includes(\"✓\") ? 'green' : 'red' }}>\n                    {verificationStatus}\n                </div>\n                <div className=\"text-center mt-4\">\n                    <button\n                        onClick={handleTransfer}\n                        className=\"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\">\n                        Transfer\n                    </button>\n                </div>\n                <div className=\"border-2 border-black text-md rounded-xl p-4 bg-white mt-4\">\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>tx</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default OGCards;\n","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/page/HomePage.tsx",["127","128","129","130","131","132","133","134","135","136"],[],"import React, { useEffect, useState } from 'react';\nimport getGlobalOrderBook from './api/orderbook';\nimport { PandaConnectButton } from \"../components/PandaConnectButton\";\nimport OrdinalCard from \"../components/OrdinalCard\";\nimport LRCCard from \"../components/LRCCard\";\nimport SonataCard from \"../components/SonataCard\";\nimport OGCards from \"../components/OGCards\";\nimport MarketplaceCard from \"../components/MarketplaceCard\";\nimport MetaTags from 'react-meta-tags';\nimport {\n  Addresses,\n  SignedMessage,\n  usePandaWallet,\n} from \"panda-wallet-provider\";\n\nconst initProvider = () => {\n  if (\"panda\" in window) {\n    const provider = window.panda;\n\n    if (provider?.isReady) {\n      return provider;\n    }\n  }\n\n  window.open(\n    \"https://chromewebstore.google.com/detail/panda-wallet/mlbnicldlpdimbjdcncnklfempedeipj\",\n    \"_blank\"\n  );\n};\n\nexport const HomePage = () => {\n  const wallet = usePandaWallet();\n  const [pubKey, setPubKey] = useState<string | undefined>();\n  const [addresses, setAddresses] = useState<Addresses | undefined>();\n  const [ordinals, setOrdinals] = useState<any[]>([]);\n  const [ordAddress, setOrdAddress] = useState<string | undefined>();\n  const [bsvAddress, setBsvAddress] = useState<string | undefined>();\n  const [identityAddress, setIdentityAddress] = useState<string | undefined>();\n  const [hodlSum, setHodlSum] = useState<number>(0);\n  const [selectedType, setSelectedType] = useState('Tale of Shua Gears');\n  const [orderBook, setOrderBook] = useState<any[]>([]);\n  const [viewMode, setViewMode] = useState('collection');\n\n  useEffect(() => {\n    const fetchOrderBook = async () => {\n      try {\n        const data = await getGlobalOrderBook();\n        setOrderBook(data);\n        console.log('order book: ', data);\n      } catch (error) {\n        console.error(\"Failed to fetch order book\", error);\n      }\n    };\n\n    fetchOrderBook();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (wallet && wallet.isConnected) {\n        const isConnected = await wallet.isConnected();\n        if (isConnected) {\n          const addrs = await wallet.getAddresses();\n          if (addrs) {\n            setAddresses(addrs);\n            setOrdAddress(addrs.ordAddress);\n            setBsvAddress(addrs.bsvAddress);\n            setIdentityAddress(addrs.identityAddress);\n          }\n          console.log(\"addresses: \", addrs);\n          const ords = await wallet.getOrdinals();\n          if (ords) setOrdinals(ords);\n          console.log(\"ords: \", ords);\n        }\n      }\n    };\n\n    if (wallet) {\n      fetchData();\n    }\n  }, [wallet]);\n\n  const handleConnect = async () => {\n    if (!wallet.connect) {\n      window.open(\n        \"https://github.com/Panda-Wallet/panda-wallet#getting-started-alpha\",\n        \"_blank\"\n      );\n      return;\n    }\n    const key = await wallet.connect();\n    if (key) setPubKey(key);\n  };\n\n  const handleChange = (event: any) => {\n    setSelectedType(event.target.value);\n  };\n\n  const listOrdinal = async () => {\n    alert('Coming soon!');\n  }\n\n  const purchaseOrdinal = async (outpoint: any, marketplaceRate: any, marketplaceAddress: string) => {\n    const purchaseParams = {\n      outpoint,\n      marketplaceRate,\n      marketplaceAddress\n    };\n\n    try {\n      const txid = await wallet.purchaseOrdinal(purchaseParams);\n      console.log(`Purchase successful! Transaction ID: ${txid}`);\n      // Update the UI or state as needed\n    } catch (err: any) {\n      console.error(`Purchase failed: ${err.message}`);\n      // Handle errors and update UI accordingly\n    }\n  };\n\n  const renderContent = () => {\n    switch (selectedType) {\n      case 'OGs':\n        return renderOGCards();\n      case 'Sonatas':\n        return renderSonatas();\n      case 'LRC-20s':\n        return renderLRC20Cards();\n      case 'Tale of Shua Gears':\n        return renderOrdinalCards();\n      default:\n      case 'Global Marketplace':\n        return renderGlobalMarketplace();\n        return null;\n    }\n  };\n\n  const renderGlobalMarketplace = () => {\n    const filteredListings = orderBook.filter(\n      (listing: any) =>\n        listing?.origin?.data?.map?.app === \"taleofshua\"\n    );\n    return (\n      <>\n        <div className=\"text-center text-2xl mt-4 mb-4\">\n          Tale of Shua Gear Marketplace\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {filteredListings.map((listing, index) => (\n            <MarketplaceCard key={index} listing={listing} purchaseOrdinal={purchaseOrdinal} />\n          ))}\n        </div>\n      </>\n    )\n  }\n\n  const renderSonatas = () => {\n\n    const filteredSonatas = ordinals.filter(\n      (ordinal) =>\n        ordinal?.data?.insc?.json?.p ===\n        \"sonata\"\n    );\n    return (\n      <>\n        <div className=\"text-center text-2xl mt-4 mb-4\">\n          Sonata is an experimental format to inscribe music metadata on-chain.\n        </div>\n        <div className=\"text-center text-2xl m-8\">\n          <a className=\"hover:text-blue-900 hover:bg-blue-200 bg-gray-100 text-gray-900 border-0 border-black rounded-xl p-4 m-4\" href=\"https://usselman.github.io/distromint/\">Inscribe here</a>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {filteredSonatas.map((ordinal, index) => (\n            <SonataCard key={index} ordinal={ordinal} transferOrdinal={transferOrdinal} />\n          ))}\n        </div>\n      </>\n    );\n\n  }\n\n  const renderLRC20Cards = () => {\n    const filteredLRC20s = ordinals.filter(\n      (ordinal) =>\n        ordinal?.data?.insc?.json?.p ===\n        \"lrc-20\"\n    );\n    return (\n      <>\n        <div className=\"text-center text-2xl mt-4 mb-4\">\n          <span className=\"underline hover:text-blue-500 rounded-xl\"><a href=\"https://v3.ordinals.gorillapool.io/content/1f2d8349d15ef5287c5cada779f7e6875e123fe0ab788b478a17514b5746db90_0\">$hodl</a></span> is the first of its kind LRC-20 token.\n        </div>\n        <div>\n          <h4 className=\"text-2xl font-semibold text-black text-center\">\n            Total $hodl: {hodlSum}\n          </h4>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n\n          {filteredLRC20s.map((ordinal, index) => (\n            <LRCCard key={index} ordinal={ordinal} setHodlSum={setHodlSum} />\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  const extractNumber = (text: string): number | null => {\n    const parts = text.split(\" \");\n    if (parts.length > 0 && !isNaN(parseInt(parts[0], 10))) {\n      return parseInt(parts[0], 10);\n    }\n    return null;\n  };\n\n\n  const renderOGCards = () => {\n\n    const filteredOGs = ordinals\n      .filter((ordinal) => {\n        return (\n          ordinal?.origin?.data?.insc?.words &&\n          ordinal.origin.data.insc.words.length > 1 &&\n          ordinal.origin.data.insc.words[1] === \"og\"\n        );\n      })\n      .sort((a, b) => {\n        const numA = extractNumber(a?.data?.insc.text);\n        const numB = extractNumber(b?.data?.insc.text);\n        return (numA ?? 0) - (numB ?? 0);\n      });\n\n    return (\n      <>\n        <div className=\"text-center text-2xl mt-4 mb-4\">\n          <span className=\"underline hover:text-blue-500 rounded-xl\"><a href=\"https://www.hodlocker.com/zackwins/post/d2167c682c0ce72574fe2d21a81987571d42dc51b38c94c0cbe16ac40ad770c0\">.OG</a></span> is the first of its kind lock-to-mint numbered namespace.\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n          {filteredOGs.map((ordinal, index) => (\n            <OGCards key={index} ordinal={ordinal} address={ordAddress} transferOrdinal={transferOrdinal} />\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  const getRarityValue = (name: string) => {\n    const parts = name.split(\" \");\n    const hasPrefix = parts.length > 1 && parts[0] !== \"of\";\n    const hasSuffix = parts.includes(\"of\");\n\n    if (hasPrefix && hasSuffix) return 3; // Rare\n    if (hasPrefix || hasSuffix) return 2; // Uncommon\n    return 1; // Common\n  };\n\n  const renderOrdinalCards = () => {\n    const dataToShow = viewMode === 'collection' ? ordinals : orderBook;\n\n    const filteredOrdinals = ordinals.filter(\n      (ordinal) =>\n        ordinal?.data?.map?.subTypeData?.collectionId ===\n        \"b68a700c91c6ece44aa6c2148c84c25a9a22da739769110e1ba01dbb0ff2df4a_1\"\n    )\n      .map(ordinal => ({\n        ...ordinal,\n        rarityValue: getRarityValue(ordinal.data.insc.text)\n      }))\n      .sort((a, b) => b.rarityValue - a.rarityValue) // Sort by descending rarity value\n      .map((ordinal, index) => (\n        <OrdinalCard key={index} ordinal={ordinal} transferOrdinal={transferOrdinal} listOrdinal={listOrdinal} />\n      ));\n\n    return (\n      <>\n        <div className=\"text-center text-2xl mt-4 mb-4\">\n          <span className=\"underline hover:text-blue-500 rounded-xl\"><a href=\"https://taleofshua.com\">Tale of Shua Gear</a></span> is a lock-to-mint collection by Joshua Henslee.\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n          {filteredOrdinals}\n        </div>\n      </>\n    );\n  };\n\n  const transferOrdinal = async (address: string, origin: string, outpoint: string) => {\n    try {\n      const txid = await wallet.transferOrdinal({ address, origin, outpoint });\n      console.log(txid);\n      alert(`Transfer successful! Transaction ID: ${txid}`);\n    } catch (err: any) {\n      console.error(err);\n      alert(`Transfer failed: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <MetaTags>\n        <title>Babel</title>\n        <meta name=\"description\" content=\"The onchain library.\" />\n        <meta property=\"og:title\" content=\"Babel\" />\n      </MetaTags>\n      <div className=\"bg-gray m-4 p-4\">\n        {/* <img\n          src={pandaIcon}\n          alt=\"Panda Wallet Icon\"\n          className=\"mx-auto h-20 w-20\"\n        /> */}\n        {ordinals.length == 0 &&\n\n          <>\n            <div className=\"h-8\" />\n            <h1 className=\"text-2xl font-bold text-center text-black\">Connect your <span className=\"underline hover:text-blue-500\"><a href=\"https://github.com/Panda-Wallet/panda-wallet#getting-started-alpha\">Panda Wallet</a></span> to view inscriptions:</h1>\n            <div className=\"place-content-center flex\">\n              <PandaConnectButton\n                className=\"m-4 p-4 bg-blue-900 text-white rounded hover:bg-blue-600\"\n                onClick={handleConnect}\n              />\n            </div>\n            <h2 className=\"text-lg font-bold text-center italic text-black mt-2\">Refresh after logging in if nothing shows.</h2>\n            <h2 className=\"text-lg font-bold text-center italic text-black mt-2\">If nothing shows after that, open extension and refresh.</h2>\n\n            <div className=\"h-8\" />\n          </>\n\n        }\n\n        {/* {pubKey && (\n          <p className=\"mt-2 text-sm text-gray-700\">Public Key: {pubKey}</p>\n        )}\n        {addresses && (\n          <p className=\"mt-2 text-sm text-gray-700\">\n            Addresses: {JSON.stringify(addresses)}\n          </p>\n        )} */}\n        {wallet && ordinals.length > 0 && (\n          <div className=\"mt-12\">\n            <div className=\"parchment-container\">\n              <h4 className=\"text-4xl font-semibold text-black text-center title\">\n                Library of Babel\n              </h4>\n              <p className=\"text-sm font-semibold text-black text-center hover:text-blue-500 rounded-xl author\">\n                <a href=\"https://twitter.com/worldbuilder_us\">@worldbuilder.us</a>\n              </p>\n              {/* Rest of your content */}\n            </div>\n            <div className=\"h-20\" />\n            <h4 className=\"text-4xl font-semibold text-black text-center\">\n              Your Inscriptions\n            </h4>\n            <p className=\"text-md text-black text-center mt-4\">\n              Keep in mind the amounts may not be accurate! <span className=\"underline hover:text-blue-500\"><a href=\"https://github.com/Panda-Wallet/panda-wallet#getting-started-alpha\">Panda Wallet (v2.6.2)</a></span> shows latest 1000 inscriptions.\n            </p>\n            <div className=\"h-8\" />\n            <select value={selectedType} onChange={handleChange} className=\"mb-4 rounded-xl border-2 p-4 border-black\">\n              <option value=\"OGs\">.OGs</option>\n              <option value=\"Sonatas\">Sonatas</option>\n              <option value=\"LRC-20s\">LRC-20s</option>\n              <option value=\"Tale of Shua Gears\">Tale of Shua Gears</option>\n              <option value=\"Global Marketplace\">Global Marketplace</option>\n            </select>\n\n            {renderContent()}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/page/api/orderbook.js",[],[],"/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/MarketplaceCard.jsx",["137"],[],"import atkIcon from '../assets/atk.png';\nimport defIcon from '../assets/def.png';\nimport { Tooltip } from 'react-tooltip'\nimport { clothingItems, weaponItems, baseDefenseStats, baseAttackStats, weaponTypes, armorTypes, prefixes, suffixes } from './statsData';\n\n// Convert rarityData numbers to modifiers\nconst convertToModifier = (number) => number / 100;\n\nconst modifiers = {\n    prefixes: Object.fromEntries(\n        prefixes.map(([prefix, number]) => [prefix, 1 + convertToModifier(number)])\n    ),\n    suffixes: Object.fromEntries(\n        suffixes.map(([suffix, number]) => [suffix, 1 + convertToModifier(number)])\n    ),\n};\n\nconst calculateStats = (itemName) => {\n    // Split the item name\n    const parts = itemName?.split(\" \");\n    let prefix = \"\";\n    let suffix = \"\";\n    let baseItemName = \"\";\n\n    if (parts?.includes(\"of\")) {\n        // Find the index where 'of' is located\n        const ofIndex = parts.indexOf(\"of\");\n        prefix = parts.slice(0, ofIndex).join(\" \");\n        suffix = parts.slice(ofIndex).join(\" \");\n        baseItemName = parts[ofIndex - 1];\n    } else {\n        baseItemName = parts[parts.length - 1];\n        prefix = parts.slice(0, parts.length - 1).join(\" \");\n    }\n\n    let baseStatValue;\n    let statType;\n    let armorType = null;\n\n    if (weaponItems?.includes(baseItemName)) {\n        baseStatValue = baseAttackStats[baseItemName] || 0;\n        statType = 'attack';\n    } else if (clothingItems?.includes(baseItemName)) {\n        baseStatValue = baseDefenseStats[baseItemName] || 0;\n        statType = 'defense';\n        armorType = armorTypes[baseItemName];\n    } else {\n        return null;\n    }\n\n    // Apply modifiers\n    const prefixModifier = modifiers.prefixes[prefix] ? (modifiers.prefixes[prefix] - 1) * baseStatValue : 0;\n    const suffixModifier = modifiers.suffixes[suffix] ? (modifiers.suffixes[suffix] - 1) * baseStatValue : 0;\n\n    const totalStat = baseStatValue + prefixModifier + suffixModifier;\n\n    // Limiting to two decimal places\n    const finalStatValue = parseFloat(Math.ceil(totalStat));\n\n    // if (!isAttackStat && armorTypes[baseItemName]) {\n\n    // }\n\n    return { [statType]: finalStatValue, baseStatValue, prefixModifier, suffixModifier, armorType };\n};\n\n\nconst MarketplaceCard = ({ listing, purchaseOrdinal }) => {\n    //console.log(\"passed listing\", listing);\n\n    const getRarity = (name) => {\n        const parts = name.split(\" \");\n        const hasPrefix = parts.length > 1 && parts[0] !== \"of\";\n        const hasSuffix = parts.includes(\"of\");\n\n        if (hasPrefix && hasSuffix) return \"Rare\";\n        if (hasPrefix || hasSuffix) return \"Uncommon\";\n        return \"Common\";\n    };\n\n    const stats = calculateStats(listing?.origin?.data?.insc?.text);\n    const rarity = getRarity(listing?.origin?.data?.insc?.text);\n    const itemType = listing?.origin?.data?.insc?.text.split(\" \")[listing?.origin?.data?.insc?.text.split(\" \").length - 1];\n    const weaponType = weaponTypes[itemType];\n    const isAttackStat = stats && stats.attack !== undefined;\n\n    const rarityStyles = {\n        Common: \"border-black text-black shadow-common hover:bg-gray-300\",\n        Uncommon: \"border-blue-500 text-blue-500 shadow-uncommon hover:bg-blue-300\",\n        Rare: \"border-yellow-500 shadow-rare rainbow-text\",\n    };\n\n    const renderRarityBadge = (rarity) => {\n        switch (rarity) {\n            case \"Rare\":\n                return <span className=\"text-yellow-500 font-bold\">Rare</span>;\n            case \"Uncommon\":\n                return <span className=\"text-blue-500 font-bold\">Uncommon</span>;\n            case \"Common\":\n            default:\n                return <span className=\"text-black font-bold\">Common</span>;\n        }\n    };\n\n    const tooltipId = `tooltip-${listing.origin.num}`;\n\n    const handleBuyClick = () => {\n        // Assuming 'outpoint', 'marketplaceRate', and 'marketplaceAddress' are the needed parameters\n        // You might need to adjust these according to your application's logic\n        const outpoint = listing.outpoint;\n        const marketplaceRate = 0.025; // Example rate, adjust as needed\n        const marketplaceAddress = \"1NHeCkh457C114iNUXZnuMowHddq4GkoAg\"; // Replace with actual address\n\n        purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n    };\n\n    return (\n        <div className=\"border-0 border-black\">\n\n            <div className={`relative rounded-lg overflow-hidden m-4 p-4 h-5/6 bg-white border-4 ${rarityStyles[rarity]} `}>\n                <div className=\"px-6 py-4 mb-64\">\n                    <div className={`border-0 rounded-lg p-4 bg-white ${rarityStyles[rarity]} hover:bg-white hover:border-0`}>\n                        <div className=\"font-bold text-lg mb-2\">{listing?.origin?.data?.insc?.text}</div>\n                        <span className=\"text-sm\">{renderRarityBadge(rarity)}</span>\n                        {stats && (\n                            <div className=\"mt-4\">\n                                <div className=\"flex items-center\">\n                                    <img\n                                        src={isAttackStat ? atkIcon : defIcon}\n                                        alt={isAttackStat ? \"Attack Icon\" : \"Defense Icon\"}\n                                        className=\"h-4 w-4 mr-2\"\n                                    />\n                                    <p className={`${isAttackStat ? \"text-red-500\" : \"text-blue-500\"} text-sm font-bold`}>\n                                        <a\n                                            data-tooltip-id={tooltipId}\n                                            data-tooltip-content={`Base: ${stats.baseStatValue} + \n                  Modifiers: ${stats.prefixModifier.toFixed(1)} / ${stats.suffixModifier.toFixed(1)}`}\n                                            data-tooltip-place=\"bottom\"\n                                        >\n                                            {isAttackStat ? `Attack: ${stats.attack}` : `Defense: ${stats.defense}`}\n                                        </a>\n                                        <Tooltip id={tooltipId} />\n                                    </p>\n                                </div>\n                                {weaponType && (\n                                    <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                                        {weaponType}\n                                    </p>\n                                )}\n                                {stats.armorType && (\n                                    <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                                        {stats.armorType}\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                    <div className={`absolute bottom-0 left-0 right-0 border-0 border-black shadow-none text-sm rounded-xl p-4 m-4 bg-white hover:bg-white ${rarityStyles[rarity]} hover:border-0`}>\n                        <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/${listing.txid}`}>tx</a></div>\n                        <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${listing.height}`}>blk: {listing.height}</a></div>\n                        <div className=\"font-bold mb-2 underline\"><a href={`https://1satlistings.com/inscription/${listing.origin.num}`}>#{listing.origin.num}</a></div>\n                        <div className=\"text-center text-black\">\n                            <p className=\"m-2\">Owned by:</p>\n                            <p className=\"font-light text-xs m-2\">{listing?.owner}</p>\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div>\n                <button\n                    onClick={handleBuyClick}\n                    className=\"buy-btn border-0 text-md bg-blue-500 hover:bg-green-700 hover:text-white border-black rounded-xl p-4\">\n                    {(listing?.data?.list?.price / 100000000).toFixed(2)} BSV\n                </button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default MarketplaceCard;\n","/Users/shirishsarkar/Library/Mobile Documents/com~apple~CloudDocs/Documents/_CODE/library-of-babel/src/components/helpers.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151"],[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":6,"column":3,"nodeType":"156","messageId":"157","endLine":6,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":10,"column":7,"nodeType":"156","messageId":"157","endLine":10,"endColumn":19},{"ruleId":"154","severity":1,"message":"159","line":27,"column":10,"nodeType":"156","messageId":"157","endLine":27,"endColumn":16},{"ruleId":"154","severity":1,"message":"160","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":19},{"ruleId":"154","severity":1,"message":"161","line":64,"column":11,"nodeType":"156","messageId":"157","endLine":64,"endColumn":27},{"ruleId":"154","severity":1,"message":"162","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":17},{"ruleId":"152","replacedBy":"163"},{"ruleId":"154","severity":1,"message":"164","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":156,"column":21,"nodeType":"169","endLine":161,"endColumn":22},{"ruleId":"152","replacedBy":"163"},{"ruleId":"154","severity":1,"message":"162","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":462,"column":5,"nodeType":"172","messageId":"173","endLine":462,"endColumn":14},{"ruleId":"170","severity":1,"message":"174","line":463,"column":5,"nodeType":"172","messageId":"173","endLine":463,"endColumn":12},{"ruleId":"175","severity":1,"message":"176","line":34,"column":6,"nodeType":"177","endLine":34,"endColumn":8,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":55,"column":8,"nodeType":"177","endLine":55,"endColumn":10,"suggestions":"180"},{"ruleId":"154","severity":1,"message":"155","line":12,"column":3,"nodeType":"156","messageId":"157","endLine":12,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":16,"column":7,"nodeType":"156","messageId":"157","endLine":16,"endColumn":19},{"ruleId":"154","severity":1,"message":"159","line":33,"column":10,"nodeType":"156","messageId":"157","endLine":33,"endColumn":16},{"ruleId":"154","severity":1,"message":"160","line":34,"column":10,"nodeType":"156","messageId":"157","endLine":34,"endColumn":19},{"ruleId":"154","severity":1,"message":"181","line":37,"column":10,"nodeType":"156","messageId":"157","endLine":37,"endColumn":20},{"ruleId":"154","severity":1,"message":"182","line":38,"column":10,"nodeType":"156","messageId":"157","endLine":38,"endColumn":25},{"ruleId":"154","severity":1,"message":"183","line":42,"column":20,"nodeType":"156","messageId":"157","endLine":42,"endColumn":31},{"ruleId":"184","severity":1,"message":"185","line":133,"column":9,"nodeType":"186","messageId":"187","endLine":133,"endColumn":21},{"ruleId":"154","severity":1,"message":"188","line":258,"column":11,"nodeType":"156","messageId":"157","endLine":258,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":310,"column":26,"nodeType":"191","messageId":"173","endLine":310,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":134,"column":41,"nodeType":"169","endLine":139,"endColumn":42},{"ruleId":"192","severity":2,"message":"193","line":8,"column":35,"nodeType":"156","messageId":"194","endLine":8,"endColumn":38},{"ruleId":"192","severity":2,"message":"193","line":8,"column":70,"nodeType":"156","messageId":"194","endLine":8,"endColumn":73},{"ruleId":"192","severity":2,"message":"193","line":9,"column":51,"nodeType":"156","messageId":"194","endLine":9,"endColumn":54},{"ruleId":"192","severity":2,"message":"193","line":9,"column":89,"nodeType":"156","messageId":"194","endLine":9,"endColumn":92},{"ruleId":"192","severity":2,"message":"193","line":9,"column":133,"nodeType":"156","messageId":"194","endLine":9,"endColumn":136},{"ruleId":"192","severity":2,"message":"193","line":10,"column":48,"nodeType":"156","messageId":"194","endLine":10,"endColumn":51},{"ruleId":"192","severity":2,"message":"193","line":10,"column":83,"nodeType":"156","messageId":"194","endLine":10,"endColumn":86},{"ruleId":"192","severity":2,"message":"193","line":10,"column":127,"nodeType":"156","messageId":"194","endLine":10,"endColumn":130},{"ruleId":"192","severity":2,"message":"193","line":20,"column":26,"nodeType":"156","messageId":"194","endLine":20,"endColumn":29},{"ruleId":"192","severity":2,"message":"193","line":42,"column":18,"nodeType":"156","messageId":"194","endLine":42,"endColumn":21},{"ruleId":"192","severity":2,"message":"193","line":43,"column":20,"nodeType":"156","messageId":"194","endLine":43,"endColumn":23},{"ruleId":"192","severity":2,"message":"193","line":74,"column":19,"nodeType":"156","messageId":"194","endLine":74,"endColumn":22},{"ruleId":"192","severity":2,"message":"195","line":77,"column":28,"nodeType":"156","messageId":"194","endLine":77,"endColumn":52},{"ruleId":"192","severity":2,"message":"193","line":82,"column":16,"nodeType":"156","messageId":"194","endLine":82,"endColumn":19},"no-new-object",["196"],"@typescript-eslint/no-unused-vars","'SignedMessage' is defined but never used.","Identifier","unusedVar","'initProvider' is assigned a value but never used.","'pubKey' is assigned a value but never used.","'addresses' is assigned a value but never used.","'filteredOrdinals' is assigned a value but never used.","'pandaIcon' is defined but never used.",["196"],"'Analytics' is defined but never used.","no-unused-vars","'rarityData' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'Scalers'.","ObjectExpression","unexpected","Duplicate key 'Fists'.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'amount', 'setHodlSum', and 'valid'. Either include them or remove the dependency array. If 'setHodlSum' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["197"],"React Hook useEffect has a missing dependency: 'verifyRecord'. Either include it or remove the dependency array.",["198"],"'bsvAddress' is assigned a value but never used.","'identityAddress' is assigned a value but never used.","'setViewMode' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'dataToShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-undef","'bsv' is not defined.","undef","'getAddressFromPrivateKey' is not defined.","no-object-constructor",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [amount, setHodlSum, valid]",{"range":"203","text":"204"},"Update the dependencies array to be: [verifyRecord]",{"range":"205","text":"206"},[878,880],"[amount, setHodlSum, valid]",[2292,2294],"[verifyRecord]"]