[{"/Users/shirishsarkar/library-of-babel/src/index.tsx":"1","/Users/shirishsarkar/library-of-babel/src/reportWebVitals.ts":"2","/Users/shirishsarkar/library-of-babel/src/App.tsx":"3","/Users/shirishsarkar/library-of-babel/src/page/HomePage.tsx":"4","/Users/shirishsarkar/library-of-babel/src/page/api/hodlbook.js":"5","/Users/shirishsarkar/library-of-babel/src/components/PriceHistoryChart.js":"6","/Users/shirishsarkar/library-of-babel/src/page/api/frogbook.js":"7","/Users/shirishsarkar/library-of-babel/src/page/api/gayfrogbook.js":"8","/Users/shirishsarkar/library-of-babel/src/page/api/ogbook.js":"9","/Users/shirishsarkar/library-of-babel/src/page/api/orderbook.js":"10","/Users/shirishsarkar/library-of-babel/src/components/HODLMarketplaceCard.tsx":"11","/Users/shirishsarkar/library-of-babel/src/components/LRCCard.tsx":"12","/Users/shirishsarkar/library-of-babel/src/components/PandaConnectButton.tsx":"13","/Users/shirishsarkar/library-of-babel/src/components/FrogMarketplaceCard.tsx":"14","/Users/shirishsarkar/library-of-babel/src/components/GayFrogMarketplaceCard.tsx":"15","/Users/shirishsarkar/library-of-babel/src/components/SonataCard.jsx":"16","/Users/shirishsarkar/library-of-babel/src/components/OrdinalCard.jsx":"17","/Users/shirishsarkar/library-of-babel/src/components/OGCards.jsx":"18","/Users/shirishsarkar/library-of-babel/src/components/MarketplaceCard.jsx":"19","/Users/shirishsarkar/library-of-babel/src/components/OGMarketplaceCard.jsx":"20","/Users/shirishsarkar/library-of-babel/src/components/statsData.js":"21","/Users/shirishsarkar/library-of-babel/src/page/api/bsvmap.js":"22","/Users/shirishsarkar/library-of-babel/src/components/BSVMapMarketplaceCard.tsx":"23","/Users/shirishsarkar/library-of-babel/src/page/api/requestQueueService.ts":"24"},{"size":651,"mtime":1710037608025,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1710037608026,"results":"27","hashOfConfig":"26"},{"size":171,"mtime":1710037608009,"results":"28","hashOfConfig":"26"},{"size":24214,"mtime":1710040694001,"results":"29","hashOfConfig":"26"},{"size":1221,"mtime":1710037608025,"results":"30","hashOfConfig":"26"},{"size":3397,"mtime":1710037608024,"results":"31","hashOfConfig":"26"},{"size":691,"mtime":1710037608025,"results":"32","hashOfConfig":"26"},{"size":622,"mtime":1710037608025,"results":"33","hashOfConfig":"26"},{"size":1150,"mtime":1710037608026,"results":"34","hashOfConfig":"26"},{"size":590,"mtime":1710037608026,"results":"35","hashOfConfig":"26"},{"size":5414,"mtime":1710037608024,"results":"36","hashOfConfig":"26"},{"size":2538,"mtime":1710037608024,"results":"37","hashOfConfig":"26"},{"size":646,"mtime":1710041042271,"results":"38","hashOfConfig":"26"},{"size":2687,"mtime":1710037608024,"results":"39","hashOfConfig":"26"},{"size":3237,"mtime":1710037608024,"results":"40","hashOfConfig":"26"},{"size":2407,"mtime":1710037608024,"results":"41","hashOfConfig":"26"},{"size":7989,"mtime":1710037608024,"results":"42","hashOfConfig":"26"},{"size":3224,"mtime":1710037608024,"results":"43","hashOfConfig":"26"},{"size":8687,"mtime":1710037608024,"results":"44","hashOfConfig":"26"},{"size":4872,"mtime":1710037608024,"results":"45","hashOfConfig":"26"},{"size":13856,"mtime":1710037608025,"results":"46","hashOfConfig":"26"},{"size":678,"mtime":1710039933929,"results":"47","hashOfConfig":"26"},{"size":4410,"mtime":1710041000573,"results":"48","hashOfConfig":"26"},{"size":700,"mtime":1710040192279,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jmqfno",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shirishsarkar/library-of-babel/src/index.tsx",[],[],"/Users/shirishsarkar/library-of-babel/src/reportWebVitals.ts",[],[],"/Users/shirishsarkar/library-of-babel/src/App.tsx",["132"],[],"import \"./App.css\";\nimport { Analytics } from '@vercel/analytics/react';\nimport { HomePage } from \"./page/HomePage\";\n\nexport const App = () => {\n  return <HomePage />;\n};\n","/Users/shirishsarkar/library-of-babel/src/page/HomePage.tsx",["133","134","135","136","137","138","139","140","141","142"],[],"/Users/shirishsarkar/library-of-babel/src/page/api/hodlbook.js",[],[],"/Users/shirishsarkar/library-of-babel/src/components/PriceHistoryChart.js",["143","144","145","146","147","148"],[],"import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\n\nconst PriceHistoryChart = ({ data }) => {\n    const [exchangeRate, setExchangeRate] = useState(0);\n\n    useEffect(() => {\n        async function getExchangeRate() {\n            const url = 'https://api.whatsonchain.com/v1/bsv/main/exchangerate';\n            try {\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok ' + response.statusText);\n                }\n                const data = await response.json();\n                setExchangeRate(parseFloat(data.rate));\n                console.log(\"Exchange rate fetched: \", exchangeRate);\n            } catch (error) {\n                console.error(\"Fetching exchange rate failed: \", error);\n            }\n        }\n\n        getExchangeRate();\n    }, []); // Fetch exchange rate when the component mounts\n\n    // Extract values for height, price, and amount from each listing\n    const heights = data.map((item) => item.height);\n    const prices = data.map((item) => item.data.list.price);\n\n    // Sort heights in ascending order\n    const sortedHeights = [...heights].sort((a, b) => a - b);\n\n    // Filter out null values (missing data points) from the data\n    const filteredData = data.filter((item) => item.origin && item.origin.data && item.origin.data.insc);\n\n    const amounts = filteredData.map((item) => {\n        return parseFloat(item.origin.data.insc.json.amt);\n    });\n\n    // Calculate the price/amount ratio in USD\n    const priceAmountRatioUSD = amounts.map((amt, index) => (amt / prices[index]) * exchangeRate);\n    //console.log(\"Prices: \", prices);\n    const marketcap = (prices[0] * 21000) / 100000000 * exchangeRate;\n\n    const chartData = {\n        labels: sortedHeights.map(String), // Use sorted heights for the X-axis (category)\n        datasets: [\n            {\n                label: 'Price per Token',\n                data: priceAmountRatioUSD, // Y-axis data (amount/price in USD)\n                fill: false,\n                backgroundColor: 'white',\n                borderColor: 'green',\n                pointRadius: 2, // Set point radius\n            },\n        ],\n    };\n\n    const options = {\n        scales: {\n            x: {\n                type: 'category', // Specify x-axis as \"category\"\n                position: 'bottom',\n                reverse: false, // Keep the x-axis in ascending order\n                title: {\n                    display: true,\n                    text: 'Block Height',\n                },\n            },\n            y: {\n                beginAtZero: false, // Start the y-axis at zero\n                title: {\n                    display: true,\n                    text: 'Price per token (USD)',\n                },\n                ticks: {\n                    callback: (value) => `$${value.toFixed(4)}`, // Add '$' symbol and format to 2 decimal places\n                },\n            },\n        },\n    };\n\n    return (\n        <div>\n            {/* <h1 className=\"text-2xl font-bold m-4 text-center\">Marketcap: ${marketcap.toFixed(0)}</h1> */}\n            {/* <h2 className=\"font-bold\">Listing Price History (USD) - WIP</h2> */}\n            {/* <Line data={chartData} options={options} /> */}\n        </div>\n    );\n};\n\nexport default PriceHistoryChart;\n","/Users/shirishsarkar/library-of-babel/src/page/api/frogbook.js",[],[],"/Users/shirishsarkar/library-of-babel/src/page/api/gayfrogbook.js",[],[],"/Users/shirishsarkar/library-of-babel/src/page/api/ogbook.js",[],[],"/Users/shirishsarkar/library-of-babel/src/page/api/orderbook.js",[],[],"/Users/shirishsarkar/library-of-babel/src/components/HODLMarketplaceCard.tsx",["149","150","151"],[],"import React, { useEffect, useState } from 'react';\nimport { Buffer } from \"buffer\";\n\ntype BSVOrder = string;\n\nexport const bsOrderToTxFormat = (bsvOrder: BSVOrder): string => {\n    const txidHex = bsvOrder.substring(0, 64);\n    const outputIndexHex = bsvOrder.substring(65);\n\n    const txidBytes = Buffer.from(txidHex, 'hex').reverse();\n\n    const outputIndex = Buffer.alloc(4);\n    outputIndex.writeUInt32LE(parseInt(outputIndexHex, 16));\n\n    const txFormatBuffer = Buffer.concat([txidBytes, outputIndex]);\n\n    return txFormatBuffer.toString('hex');\n};\n\ninterface HODLMarketplaceCardProps {\n    listing: any;\n    locations: string[];\n    purchaseOrdinal: (outpoint: string, rate: number, address: string) => void;\n    exchangeRate: number;\n}\n\nconst HODLMarketplaceCard: React.FC<HODLMarketplaceCardProps> = ({ listing, locations, purchaseOrdinal, exchangeRate }) => {\n    const [validListings, setValidListings] = React.useState<any[]>([]);\n    const [isHovered, setIsHovered] = React.useState<boolean>(false);\n\n    //console.log(\"listing: \", validListings);\n    let lrcName: string;\n    let verificationMessage: string | null = null;\n    let verificationStyle: React.CSSProperties = {};\n    let valid: boolean = false;\n\n\n    const inscData = listing?.origin?.data?.insc?.json;\n    const MARKET_FEE_RATE = 0.015;\n    let amount = parseFloat(inscData?.amt);\n    if (listing?.data?.insc?.json?.amt) {\n        amount = parseFloat(listing?.data?.insc?.json?.amt);\n    }\n    let op = inscData?.op;\n    let price: any = ((listing?.data?.list?.price / 100000000) + (listing?.data?.list?.price / 100000000 * MARKET_FEE_RATE)).toFixed(4);\n    let pricePerToken: any = (price / amount).toFixed(4);\n    let USDpricePerToken = (pricePerToken * exchangeRate).toFixed(2);\n    let USDPrice = (price * exchangeRate).toFixed(2);\n\n    if (listing) {\n        lrcName = 'hodl';\n\n        const txFormat = bsOrderToTxFormat(listing.outpoint);\n\n        if (locations.includes(txFormat)) {\n            verificationMessage = 'Valid mint √';\n            verificationStyle = { color: 'green' };\n            validListings.push(listing);\n            valid = true;\n        } else if (listing.height === null) {\n            verificationMessage = 'Pending miner confirmation';\n            verificationStyle = { color: 'red' };\n            valid = false;\n        }\n        else {\n            verificationMessage = 'Invalid mint (or sold)!';\n            verificationStyle = { color: 'red' };\n            valid = false;\n        }\n    } else {\n        lrcName = 'unknown LRC-20';\n    }\n\n    if (isNaN(amount) || !op) {\n        const originData = listing?.origin?.data;\n        amount = parseFloat(originData?.insc?.json?.amt);\n        op = originData?.insc?.json?.op;\n    }\n\n    const handleBuyClick = () => {\n        const outpoint = listing.outpoint;\n        const marketplaceRate = MARKET_FEE_RATE;\n        const marketplaceAddress = \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\";\n\n        purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n    };\n\n    return valid ? (\n        <div>\n            <div\n                className={`rounded-lg overflow-hidden m-2 p-4 bg-white border-2 border-black shadow-xl hover:border-green-500 transition ease-in-out duration-300`}\n                onMouseEnter={() => setIsHovered(true)}\n                onMouseLeave={() => setIsHovered(false)}\n            >\n                <div className=\"px-6 py-4\">\n                    <div className=\"text-2xl mb-2 flex-grow tracking-wider\"><span className=\"font-bold\">{amount}</span> {lrcName}</div>\n                    {verificationMessage && <div style={verificationStyle}>{verificationMessage}</div>}\n                    {/* <div className=\"font-bold text-lg mb-2\">Amount: {amount}</div> */}\n                    <div className=\"font-light text-md mb-2 mt-2\">{pricePerToken}/hodl</div>\n                    <div className=\"font-light text-md\">(${USDpricePerToken}/hodl)</div>\n                    <div className=\"border-0 border-black text-md rounded-xl p-4 \">\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/tx/${listing.txid}`}>{op} tx</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/block-height/${listing.height}`}>blk: {listing.height}</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://1satordinals.com/inscription/${listing.origin.num}`}>#{listing.origin.num}</a></div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div className=\"text-sm p-2 relative place-content-center\">\n                    Owned by: <span className=\"font-light flex place-content-center\">\n                        {listing?.owner ? `${listing.owner.slice(0, 4)}...${listing.owner.slice(-4)}` : 'N/A'}\n                    </span>\n                </div>\n                <button\n                    onClick={handleBuyClick}\n                    className={`buy-btn text-black border-0 text-md bg-blue-400 hover:bg-green-500 hover:text-white border-black rounded-xl p-4 transition ease-in-out duration-300 ${isHovered ? 'bg-green-500 text-white' : ''}`}>\n                    {price} BSV (${USDPrice})\n                </button>\n            </div>\n        </div>\n    ) : null;\n};\n\nexport default HODLMarketplaceCard;","/Users/shirishsarkar/library-of-babel/src/components/LRCCard.tsx",[],[],"/Users/shirishsarkar/library-of-babel/src/components/PandaConnectButton.tsx",["152"],[],"/Users/shirishsarkar/library-of-babel/src/components/FrogMarketplaceCard.tsx",["153","154","155","156"],[],"import React from 'react';\n\ninterface FrogMarketplaceCardProps {\n    listing: any;\n    purchaseOrdinal: (outpoint: string, rate: number, address: string) => void;\n    exchangeRate: number;\n}\n\nconst FrogMarketplaceCard: React.FC<FrogMarketplaceCardProps> = ({ listing, purchaseOrdinal, exchangeRate }) => {\n    //console.log(\"listing: \", listing);\n    const [isHovered, setIsHovered] = React.useState<boolean>(false);\n    const MARKET_FEE_RATE = 0.015;\n    //let amount = parseFloat(inscData?.amt);\n    let price: any = ((listing?.data?.list?.price / 100000000) + (listing?.data?.list?.price / 100000000 * MARKET_FEE_RATE)).toFixed(4);\n    //let pricePerToken: any = (price / amount).toFixed(4);\n    let USDpricePerToken = (price * exchangeRate).toFixed(2);\n    let USDPrice = (price * exchangeRate).toFixed(2);\n\n\n    const {\n        // data: {\n        //     list: { price },\n        // },\n        origin: {\n            data: {\n                insc: { file },\n                map: { name, subTypeData },\n            },\n            outpoint,\n        },\n        owner,\n    } = listing;\n\n    const imageURL = `https://ordinals.gorillapool.io/content/${outpoint}`;\n    const frogNumber = subTypeData.mintNumber;\n\n    const handleBuyClick = () => {\n        const outpoint = listing.outpoint;\n        const marketplaceRate = MARKET_FEE_RATE;\n        const marketplaceAddress = \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\";\n\n        purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n    };\n\n    return (\n        <div\n            className=\"ordinal-card\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n            <img\n                src={imageURL}\n                alt={`Frog #${frogNumber}`}\n                className=\"rounded-lg border-spacing-3 border-2 drop-shadow-xl border-black hover:border-green-500 transition ease-in-out duration-300\"\n            />\n            <div className=\"ordinal-details\">\n                <h3 className=\"p-2 text-2xl\">Frog #{frogNumber}</h3>\n\n                Owned by: <span className=\"font-light flex place-content-center\">\n                    {listing?.owner ? `${listing.owner.slice(0, 4)}...${listing.owner.slice(-4)}` : 'N/A'}\n                </span>\n            </div>\n            <button\n                onClick={handleBuyClick}\n                className={`buy-btn text-black border-0 text-md bg-blue-400 hover:bg-green-500 hover:text-white border-black rounded-xl p-4 transition ease-in-out duration-300 ${isHovered ? 'bg-green-500 text-white' : ''}`}>\n                {price} BSV (${USDPrice})\n            </button>\n        </div>\n    );\n};\n\nexport default FrogMarketplaceCard;\n","/Users/shirishsarkar/library-of-babel/src/components/GayFrogMarketplaceCard.tsx",["157","158","159","160","161","162"],[],"import React from 'react';\n\ninterface GayFrogMarketplaceCardProps {\n    listing: any;\n    purchaseOrdinal: (outpoint: string, rate: number, address: string) => void;\n    exchangeRate: number;\n}\n\nconst GayFrogMarketplaceCard: React.FC<GayFrogMarketplaceCardProps> = ({ listing, purchaseOrdinal, exchangeRate }) => {\n    const [isHovered, setIsHovered] = React.useState<boolean>(false);\n    const MARKET_FEE_RATE = 0.015;\n    let price: any = ((listing?.data?.list?.price / 100000000) + (listing?.data?.list?.price / 100000000 * MARKET_FEE_RATE)).toFixed(4);\n    let USDpricePerToken = (price * exchangeRate).toFixed(2);\n    let USDPrice = (price * exchangeRate).toFixed(2);\n\n    const {\n        origin: {\n            data: {\n                insc: { file },\n                map: { name, gayness, subTypeData },\n            },\n            outpoint,\n        },\n        owner,\n    } = listing;\n\n    const imageURL = `https://ordinals.gorillapool.io/content/${outpoint}`;\n    const frogNumber = listing.origin.data.map.name;\n    const frogName = listing.origin.data.map.gayness;\n    const firstLetter = frogName.charAt(0).toUpperCase();\n    const restOfWord = frogName.slice(1);\n    const formattedFrogName = firstLetter + restOfWord;\n\n    // Function to get color class based on frogName\n    const colorMapping: { [key: string]: string } = {\n        'Happy': 'text-green-500', // Common\n        'Flaming': 'text-blue-500', // More rare\n        'Saved': 'text-yellow-500' // Rarest\n    };\n\n    const getColorClassForFrogName = (formattedFrogName: string) => {\n        return colorMapping[formattedFrogName] || 'text-black'; // Default color if not matched\n    };\n\n    const handleBuyClick = () => {\n        const outpoint = listing.outpoint;\n        const marketplaceRate = MARKET_FEE_RATE;\n        const marketplaceAddress = \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\";\n\n        purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n    };\n\n    return (\n        <div\n            className=\"ordinal-card\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n            <img\n                src={imageURL}\n                alt={`Gay Frog #${frogNumber}`}\n                className=\"rounded-lg border-spacing-3 border-2 drop-shadow-xl border-black hover:border-green-500 transition ease-in-out duration-300`\"\n            />\n            <div className=\"ordinal-details\">\n                <h3 className={`p-2 text-2xl ${getColorClassForFrogName(formattedFrogName)}`}>{formattedFrogName} <span className=\"\">Frog</span></h3>\n                Owned by: <span className=\"font-light flex place-content-center\">\n                    {listing?.owner ? `${listing.owner.slice(0, 4)}...${listing.owner.slice(-4)}` : 'N/A'}\n                </span>\n            </div>\n            <button\n                onClick={handleBuyClick}\n                className={`buy-btn text-black border-0 text-md bg-blue-400 hover:bg-green-500 hover:text-white border-black rounded-xl p-4 transition ease-in-out duration-300 ${isHovered ? 'bg-green-500 text-white' : ''}`}\n            >\n                {price} BSV (${USDPrice})\n            </button>\n        </div>\n    );\n};\n\nexport default GayFrogMarketplaceCard;\n","/Users/shirishsarkar/library-of-babel/src/components/SonataCard.jsx",[],[],"/Users/shirishsarkar/library-of-babel/src/components/OrdinalCard.jsx",["163","164"],[],"import rarityData from \"../rarity.json\";\nimport atkIcon from '../assets/atk.png';\nimport defIcon from '../assets/def.png';\nimport { Tooltip } from 'react-tooltip'\nimport { clothingItems, weaponItems, baseDefenseStats, baseAttackStats, weaponTypes, armorTypes, prefixes, suffixes } from './statsData';\n\n// Convert rarityData numbers to modifiers\nconst convertToModifier = (number) => number / 100;\n\nconst modifiers = {\n  prefixes: Object.fromEntries(\n    prefixes.map(([prefix, number]) => [prefix, 1 + convertToModifier(number)])\n  ),\n  suffixes: Object.fromEntries(\n    suffixes.map(([suffix, number]) => [suffix, 1 + convertToModifier(number)])\n  ),\n};\n\nconst calculateStats = (itemName) => {\n  // Split the item name\n  const parts = itemName?.split(\" \");\n  let prefix = \"\";\n  let suffix = \"\";\n  let baseItemName = \"\";\n\n  if (parts?.includes(\"of\")) {\n    // Find the index where 'of' is located\n    const ofIndex = parts.indexOf(\"of\");\n    prefix = parts.slice(0, ofIndex).join(\" \");\n    suffix = parts.slice(ofIndex).join(\" \");\n    baseItemName = parts[ofIndex - 1];\n  } else {\n    baseItemName = parts[parts.length - 1];\n    prefix = parts.slice(0, parts.length - 1).join(\" \");\n  }\n\n  let baseStatValue;\n  let statType;\n  let armorType = null;\n\n  if (weaponItems?.includes(baseItemName)) {\n    baseStatValue = baseAttackStats[baseItemName] || 0;\n    statType = 'attack';\n  } else if (clothingItems?.includes(baseItemName)) {\n    baseStatValue = baseDefenseStats[baseItemName] || 0;\n    statType = 'defense';\n    armorType = armorTypes[baseItemName];\n  } else {\n    return null;\n  }\n\n  // Apply modifiers\n  const prefixModifier = modifiers.prefixes[prefix] ? (modifiers.prefixes[prefix] - 1) * baseStatValue : 0;\n  const suffixModifier = modifiers.suffixes[suffix] ? (modifiers.suffixes[suffix] - 1) * baseStatValue : 0;\n\n  const totalStat = baseStatValue + prefixModifier + suffixModifier;\n\n  // Limiting to two decimal places\n  const finalStatValue = parseFloat(Math.ceil(totalStat));\n\n  // if (!isAttackStat && armorTypes[baseItemName]) {\n\n  // }\n\n  return { [statType]: finalStatValue, baseStatValue, prefixModifier, suffixModifier, armorType };\n};\n\nconst OrdinalCard = ({ ordinal, transferOrdinal, listOrdinal }) => {\n  //console.log(\"passed ordinal\", ordinal);\n  const getRarity = (name) => {\n    const parts = name.split(\" \");\n    const hasPrefix = parts.length > 1 && parts[0] !== \"of\";\n    const hasSuffix = parts.includes(\"of\");\n\n    if (hasPrefix && hasSuffix) return \"Rare\";\n    if (hasPrefix || hasSuffix) return \"Uncommon\";\n    return \"Common\";\n  };\n\n  const stats = calculateStats(ordinal.data.insc.text);\n  const rarity = getRarity(ordinal.data.insc.text);\n  const itemType = ordinal?.data?.insc?.text?.split(\" \")[ordinal?.data?.insc?.text?.split(\" \").length - 1];\n  const weaponType = weaponTypes[itemType];\n  const isAttackStat = stats && stats.attack !== undefined;\n\n  const rarityStyles = {\n    Common: \"border-black text-black shadow-common hover:bg-gray-300\",\n    Uncommon: \"border-blue-500 text-blue-500 shadow-uncommon hover:bg-blue-300\",\n    Rare: \"border-yellow-500 shadow-rare rainbow-text\",\n  };\n\n  const renderRarityBadge = (rarity) => {\n    switch (rarity) {\n      case \"Rare\":\n        return <span className=\"text-yellow-500 font-bold\">Rare</span>;\n      case \"Uncommon\":\n        return <span className=\"text-blue-500 font-bold\">Uncommon</span>;\n      case \"Common\":\n      default:\n        return <span className=\"text-black font-bold\">Common</span>;\n    }\n  };\n\n  const tooltipId = `tooltip-${ordinal.origin.num}`;\n\n  const handleTransfer = () => {\n    // Prompt for the receiver's address\n    const receiverAddress = prompt(\"Enter the receiver's address:\");\n    if (!receiverAddress) return;\n\n    // Extract origin and outpoint from the ordinal\n    const { origin, outpoint } = ordinal;\n\n    // Call transferOrdinal function passed as a prop\n    transferOrdinal(receiverAddress, origin, outpoint);\n  };\n\n  const handleListOnMarketplace = () => {\n    alert(\"Coming soon!\");\n    // const payoutAddress = prompt(\"Enter your payout address:\");\n    // const satoshisPayout = parseInt(prompt(\"Enter the payout amount in satoshis:\"));\n    // if (!payoutAddress || isNaN(satoshisPayout)) return;\n\n    // const txid = ordinal.txid;\n    // const idx = ordinal.idx;\n    // const payPkWIF = \"YourPayPkWIF\"; // Replace with actual private key\n    // const ordPkWIF = \"YourOrdPkWIF\"; // Replace with actual private key\n\n    // listOrdinal(txid, idx, payPkWIF, ordPkWIF, payoutAddress, satoshisPayout)\n    //   .then((response) => {\n    //     console.log(\"Listing successful\", response);\n    //     // Handle successful listing\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"Listing failed\", error);\n    //     // Handle listing failure\n    //   });\n  };\n\n  return (\n    <div className=\"border-0 border-black\">\n      <div className={`relative rounded-lg overflow-hidden m-4 p-4 h-5/6 bg-white border-2 ${rarityStyles[rarity]} `}>\n        <div className=\"px-6 py-4 mb-48\">\n          <div className={`border-0 rounded-lg p-4 bg-white ${rarityStyles[rarity]} hover:bg-white hover:border-0`}>\n            <div className=\"font-bold text-lg mb-2 tracking-wider\">{ordinal.data.insc.text}</div>\n            <span className=\"text-sm\">{renderRarityBadge(rarity)}</span>\n            {stats && (\n              <div className=\"mt-4\">\n                <div className=\"flex items-center\">\n                  <img\n                    src={isAttackStat ? atkIcon : defIcon}\n                    alt={isAttackStat ? \"Attack Icon\" : \"Defense Icon\"}\n                    className=\"h-4 w-4 mr-2\"\n                  />\n                  <p className={`${isAttackStat ? \"text-red-500\" : \"text-blue-500\"} text-sm font-bold`}>\n                    <a\n                      data-tooltip-id={tooltipId}\n                      data-tooltip-content={`Base: ${stats.baseStatValue} + \n                  Modifiers: ${stats.prefixModifier.toFixed(1)} / ${stats.suffixModifier.toFixed(1)}`}\n                      data-tooltip-place=\"bottom\"\n                    >\n                      {isAttackStat ? `Attack: ${stats.attack}` : `Defense: ${stats.defense}`}\n                    </a>\n                    <Tooltip id={tooltipId} />\n                  </p>\n                </div>\n                {weaponType && (\n                  <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                    {weaponType}\n                  </p>\n                )}\n                {stats.armorType && (\n                  <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                    {stats.armorType}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n          <div className={`absolute bottom-0 left-0 right-0 border-0 border-black shadow-none text-sm rounded-xl p-4 m-4 bg-white hover:bg-white ${rarityStyles[rarity]} hover:border-0`}>\n            <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/${ordinal.txid}`}>tx</a></div>\n            <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n            <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n\n          </div>\n        </div>\n\n      </div>\n      <div className=\"text-center m-4\">\n        <button\n          onClick={handleTransfer}\n          className=\"transfer-btn text-black border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-2 place-content-center\">\n          Transfer\n        </button>\n        <button\n          onClick={handleListOnMarketplace}\n          className=\"list-btn px-6 text-black border-0 text-md bg-red-500 hover:bg-black hover:text-white border-black rounded-xl p-2 place-content-center\">\n          List\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default OrdinalCard;\n","/Users/shirishsarkar/library-of-babel/src/components/OGCards.jsx",["165"],[],"import { useState, useEffect } from 'react';\n\nconst OGCards = ({ ordinal, address, transferOrdinal }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n    const lockQueryUrl = 'https://ordinals.gorillapool.io/api/locks/txid/';\n\n    useEffect(() => {\n        verifyRecord();\n    }, []);\n\n    const isDigit = (item) => {\n        const selectedIndex = item.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    // Refactored checkLock function for streamlining the verification process\n    const checkLock = async (txid) => {\n        const url = lockQueryUrl + txid;\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            return data.some(item => item.satoshis >= 1000000 && item.data && item.data.lock && item.data.lock.until >= 1050000);\n        } catch (error) {\n            console.error('Error fetching lock data:', error);\n            return false;\n        }\n    };\n\n    const verifyRecord = async () => {\n        if (!isDigit(ordinal)) {\n            setVerificationStatus(\"Not A Number (✗)\");\n            return;\n        }\n\n        const hasLock = await checkLock(ordinal.txid);\n        setVerificationStatus(hasLock ? \"Verified (✓)\" : \"Not Verified (✗)\");\n    };\n\n    const handleTransfer = () => {\n        const receiverAddress = prompt(\"Enter the receiver's address:\");\n        if (!receiverAddress) return;\n        transferOrdinal(receiverAddress, ordinal.origin, ordinal.outpoint);\n    };\n\n    return (\n        <div className={`rounded-lg overflow-hidden m-4 p-4 bg-white border-2 border-black shadow-xl`}>\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-2xl mb-2 tracking-widest\">{ordinal?.data?.insc?.text}</div>\n                <div\n                    className=\"m-4\"\n                    style={{ color: verificationStatus.includes(\"✓\") ? 'green' : 'red' }}>\n                    {verificationStatus}\n                </div>\n                <div className=\"text-center mt-4\">\n                    <button\n                        onClick={handleTransfer}\n                        className=\"transfer-btn border-0 text-md bg-blue-500 hover:bg-black hover:text-white border-black rounded-xl p-4 place-content-center\">\n                        Transfer\n                    </button>\n                </div>\n                <div className=\"border-0 border-black text-md rounded-xl p-4 bg-white mt-4\">\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/tx/${ordinal.txid}`}>tx</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://whatsonchain.com/block-height/${ordinal.height}`}>blk: {ordinal.height}</a></div>\n                    <div className=\"font-bold mb-2 underline\"><a href={`https://1satordinals.com/inscription/${ordinal.origin.num}`}>#{ordinal.origin.num}</a></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OGCards;\n","/Users/shirishsarkar/library-of-babel/src/components/MarketplaceCard.jsx",["166","167"],[],"import React, { useState } from 'react';\nimport atkIcon from '../assets/atk.png';\nimport defIcon from '../assets/def.png';\nimport { Tooltip } from 'react-tooltip'\nimport { clothingItems, weaponItems, baseDefenseStats, baseAttackStats, weaponTypes, armorTypes, prefixes, suffixes } from './statsData';\n\n// Convert rarityData numbers to modifiers\nconst convertToModifier = (number) => number / 100;\n\nconst modifiers = {\n    prefixes: Object.fromEntries(\n        prefixes.map(([prefix, number]) => [prefix, 1 + convertToModifier(number)])\n    ),\n    suffixes: Object.fromEntries(\n        suffixes.map(([suffix, number]) => [suffix, 1 + convertToModifier(number)])\n    ),\n};\n\nconst calculateStats = (itemName) => {\n    // Split the item name\n    const parts = itemName?.split(\" \");\n    let prefix = \"\";\n    let suffix = \"\";\n    let baseItemName = \"\";\n\n    if (parts?.includes(\"of\")) {\n        // Find the index where 'of' is located\n        const ofIndex = parts.indexOf(\"of\");\n        prefix = parts.slice(0, ofIndex).join(\" \");\n        suffix = parts.slice(ofIndex).join(\" \");\n        baseItemName = parts[ofIndex - 1];\n    } else {\n        baseItemName = parts[parts.length - 1];\n        prefix = parts.slice(0, parts.length - 1).join(\" \");\n    }\n\n    let baseStatValue;\n    let statType;\n    let armorType = null;\n\n    if (weaponItems?.includes(baseItemName)) {\n        baseStatValue = baseAttackStats[baseItemName] || 0;\n        statType = 'attack';\n    } else if (clothingItems?.includes(baseItemName)) {\n        baseStatValue = baseDefenseStats[baseItemName] || 0;\n        statType = 'defense';\n        armorType = armorTypes[baseItemName];\n    } else {\n        return null;\n    }\n\n    // Apply modifiers\n    const prefixModifier = modifiers.prefixes[prefix] ? (modifiers.prefixes[prefix] - 1) * baseStatValue : 0;\n    const suffixModifier = modifiers.suffixes[suffix] ? (modifiers.suffixes[suffix] - 1) * baseStatValue : 0;\n\n    const totalStat = baseStatValue + prefixModifier + suffixModifier;\n\n    // Limiting to two decimal places\n    const finalStatValue = parseFloat(Math.ceil(totalStat));\n\n    // if (!isAttackStat && armorTypes[baseItemName]) {\n\n    // }\n\n    return { [statType]: finalStatValue, baseStatValue, prefixModifier, suffixModifier, armorType };\n};\n\n\nconst MarketplaceCard = ({ listing, purchaseOrdinal, exchangeRate }) => {\n    //console.log(\"passed listing\", listing);\n    const [isHovered, setIsHovered] = React.useState(false);\n\n    const MARKET_FEE_RATE = 0.015;\n    let price = ((listing?.data?.list?.price / 100000000) + (listing?.data?.list?.price / 100000000 * MARKET_FEE_RATE)).toFixed(4);\n    let USDprice = (price * exchangeRate).toFixed(2);\n\n    const getRarity = (name) => {\n        const parts = name.split(\" \");\n        const hasPrefix = parts.length > 1 && parts[0] !== \"of\";\n        const hasSuffix = parts.includes(\"of\");\n\n        if (hasPrefix && hasSuffix) return \"Rare\";\n        if (hasPrefix || hasSuffix) return \"Uncommon\";\n        return \"Common\";\n    };\n\n    const stats = calculateStats(listing?.origin?.data?.insc?.text);\n    const rarity = getRarity(listing?.origin?.data?.insc?.text);\n    const itemType = listing?.origin?.data?.insc?.text.split(\" \")[listing?.origin?.data?.insc?.text.split(\" \").length - 1];\n    const weaponType = weaponTypes[itemType];\n    const isAttackStat = stats && stats.attack !== undefined;\n\n    const rarityStyles = {\n        Common: \"border-black text-black shadow-common hover:bg-gray-300\",\n        Uncommon: \"border-blue-500 text-blue-500 shadow-uncommon hover:bg-blue-300\",\n        Rare: \"border-yellow-500 shadow-rare rainbow-text\",\n    };\n\n    const renderRarityBadge = (rarity) => {\n        switch (rarity) {\n            case \"Rare\":\n                return <span className=\"text-yellow-500 font-bold\">Rare</span>;\n            case \"Uncommon\":\n                return <span className=\"text-blue-500 font-bold\">Uncommon</span>;\n            case \"Common\":\n            default:\n                return <span className=\"text-black font-bold\">Common</span>;\n        }\n    };\n\n    const tooltipId = `tooltip-${listing.origin.num}`;\n\n    const handleBuyClick = () => {\n        const outpoint = listing.outpoint;\n        const marketplaceRate = MARKET_FEE_RATE;\n        const marketplaceAddress = \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\";\n\n        purchaseOrdinal(outpoint, marketplaceRate, marketplaceAddress);\n    };\n\n    return (\n        <div\n            className=\"border-0 border-black\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n\n            <div className={`relative rounded-lg overflow-hidden m-4 p-4 h-5/6 bg-white border-2 ${rarityStyles[rarity]}`}>\n                <div className=\"px-6 py-4 mb-64\">\n                    <div className={`border-0 rounded-lg p-4 bg-white ${rarityStyles[rarity]} hover:bg-white hover:border-0`}>\n                        <div className=\"font-bold text-lg mb-2 tracking-wider\">{listing?.origin?.data?.insc?.text}</div>\n                        <span className=\"text-sm\">{renderRarityBadge(rarity)}</span>\n                        {stats && (\n                            <div className=\"mt-4\">\n                                <div className=\"flex items-center\">\n                                    <img\n                                        src={isAttackStat ? atkIcon : defIcon}\n                                        alt={isAttackStat ? \"Attack Icon\" : \"Defense Icon\"}\n                                        className=\"h-4 w-4 mr-2\"\n                                    />\n                                    <p className={`${isAttackStat ? \"text-red-500\" : \"text-blue-500\"} text-sm font-bold`}>\n                                        <a\n                                            data-tooltip-id={tooltipId}\n                                            data-tooltip-content={`Base: ${stats.baseStatValue} + \n                  Modifiers: ${stats.prefixModifier.toFixed(1)} / ${stats.suffixModifier.toFixed(1)}`}\n                                            data-tooltip-place=\"bottom\"\n                                        >\n                                            {isAttackStat ? `Attack: ${stats.attack}` : `Defense: ${stats.defense}`}\n                                        </a>\n                                        <Tooltip id={tooltipId} />\n                                    </p>\n                                </div>\n                                {weaponType && (\n                                    <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                                        {weaponType}\n                                    </p>\n                                )}\n                                {stats.armorType && (\n                                    <p className=\"text-sm italic text-black mt-2 text-left font-bold\">\n                                        {stats.armorType}\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                    <div className={`absolute bottom-0 left-0 right-0 border-0 border-black shadow-none text-sm rounded-xl p-4 m-4 bg-white hover:bg-white ${rarityStyles[rarity]} hover:border-0`}>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/${listing.txid}`}>tx</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/block-height/${listing.height}`}>blk: {listing.height}</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://1satlistings.com/inscription/${listing.origin.num}`}>#{listing.origin.num}</a></div>\n                        <div className=\"text-center text-black\">\n                            Owned by: <span className=\"font-light flex place-content-center\">\n                                {listing?.owner ? `${listing.owner.slice(0, 4)}...${listing.owner.slice(-4)}` : 'N/A'}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div>\n                <button\n                    onClick={handleBuyClick}\n                    className={`buy-btn text-black border-0 text-md bg-blue-400 hover:bg-green-500 hover:text-white border-black rounded-xl p-4 transition ease-in-out duration-300 ${isHovered ? 'bg-green-500 text-white' : ''}`}>\n                    {price} BSV (${USDprice})\n                </button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default MarketplaceCard;\n","/Users/shirishsarkar/library-of-babel/src/components/OGMarketplaceCard.jsx",["168"],[],"import React, { useState, useEffect } from 'react';\n\nconst OGMarketplaceCard = ({ listing, purchaseOrdinal, exchangeRate }) => {\n    const [verificationStatus, setVerificationStatus] = useState('Pending');\n    const [isHovered, setIsHovered] = React.useState(false);\n    const [verificationStyle, setVerificationStyle] = useState({});\n    const lockQueryUrl = 'https://ordinals.gorillapool.io/api/locks/txid/';\n\n    const MARKET_FEE_RATE = 0.015;\n    let price = ((listing.data.list.price / 100000000) + (listing.data.list.price / 100000000 * MARKET_FEE_RATE)).toFixed(4);\n    let USDprice = (price * exchangeRate).toFixed(2);\n\n    useEffect(() => {\n        verifyRecord();\n    }, [listing]);\n\n    if (!listing || listing.length === 0) {\n        return <div>No listing available</div>;\n    }\n\n    const isDigit = (item) => {\n        const selectedIndex = item.origin?.data?.insc?.words[0] === 'og' ? 1 : 0;\n        const parsed = parseInt(item.origin?.data?.insc?.words[selectedIndex], 10);\n        return !isNaN(parsed);\n    };\n\n    const handleBuyClick = () => {\n        const outpoint = listing.outpoint;\n        purchaseOrdinal(outpoint, MARKET_FEE_RATE, \"1PSmNxwoBVcsAB3bRRccDqbFkjtBemS5qh\");\n    };\n\n    // Refactored checkLock function\n    const checkLock = async (txid) => {\n        const url = lockQueryUrl + txid;\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            if (!data || data.length === 0) {\n                return false;\n            }\n            for (const item of data) {\n                if (item.data && item.data.lock && item.satoshis >= 1000000 && item.data.lock.until >= 1050000) {\n                    return true; // Valid lock found\n                }\n            }\n            return false; // No valid lock found\n        } catch (error) {\n            console.error('Error fetching lock data:', error);\n            return false;\n        }\n    };\n\n    const verifyRecord = async () => {\n        if (!isDigit(listing)) {\n            setVerificationStatus(\"Not A Number (✗)\");\n            return;\n        }\n\n        try {\n            // Assuming the first check is to ensure the '.og' is the first of its kind\n            const hasLock = await checkLock(listing.origin.outpoint);\n            if (hasLock) {\n                setVerificationStatus(\"Verified (✓)\");\n                setVerificationStyle({ color: 'green' });\n            } else {\n                setVerificationStatus(\"Not Verified or Lock Invalid (✗)\");\n                setVerificationStyle({ color: 'red' });\n            }\n        } catch (error) {\n            console.error('Error verifying record:', error);\n            setVerificationStatus(\"Verification Error\");\n            setVerificationStyle({ color: 'red' });\n        }\n    };\n\n    return (\n        <div\n            className=\"marketplace-container\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n            <div className=\"listing-card rounded-lg overflow-hidden m-2 p-4 bg-white border-2 border-black shadow-xl hover:border-green-500 transition ease-in-out duration-300\">\n                <div className=\"px-6 py-4\">\n                    <div className=\"font-bold text-2xl mb-2 tracking-widest\">{listing.origin.data.insc.text}</div>\n                    <div style={verificationStyle}>{verificationStatus}</div>\n                    <div className=\"border-0 border-black text-md rounded-xl p-2\">\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/tx/${listing.txid}`}>tx</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://whatsonchain.com/block-height/${listing.height}`}>blk: {listing.height}</a></div>\n                        <div className=\"font-bold mb-2 underline hover:text-blue-500\"><a href={`https://1satordinals.com/inscription/${listing.origin.num}`}>#{listing.origin.num}</a></div>\n                        Owned by: <span className=\"font-light flex place-content-center\">\n                            {listing?.owner ? `${listing.owner.slice(0, 4)}...${listing.owner.slice(-4)}` : 'N/A'}\n                        </span>\n                    </div>\n                </div>\n\n                <button\n                    onClick={handleBuyClick}\n                    className={`buy-btn text-black border-0 text-md bg-blue-400 hover:bg-green-500 hover:text-white border-black rounded-xl p-4 transition ease-in-out duration-300 ${isHovered ? 'bg-green-500 text-white' : ''}`}>\n                    {price} BSV (${USDprice})\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default OGMarketplaceCard;\n","/Users/shirishsarkar/library-of-babel/src/components/statsData.js",["169","170"],[],"//Categorize items\nexport const clothingItems = [\n    \"Trousers\",\n    \"Bronze Boots\",\n    \"Amulet\",\n    \"Ninja Mask\",\n    \"Dark Knight Greaves\",\n    \"Hood\",\n    \"Dragoon Boots\",\n    \"Dragoon Helmet\",\n    \"Steel Shield\",\n    \"Kevlar\",\n    \"Leather Gloves\",\n    \"Bronze Gloves\",\n    \"Bandana\",\n    \"Bronze Shield\",\n    \"Wizard Hat\",\n    \"Mythril Helmet\",\n    \"Mask\",\n    \"Tunic\",\n    \"Ring\",\n    \"Leather Armor\",\n    \"Gloves\",\n    \"Boots\",\n    \"Greaves\",\n    \"Leather Boots\",\n    \"Sorceress Circlet\",\n    \"Shield\",\n    \"Headband\",\n    \"Leggings\",\n    \"Skullcap\",\n    \"Silk Leggings\",\n    \"Shoes\",\n    \"Mythril Shield\",\n    \"Wristbands\",\n    \"Leather Shield\",\n    \"Steel Gloves\",\n    \"Feather Cap\",\n    \"Gauntlets\",\n    \"Mythril Armor\",\n    \"Mythril Gloves\",\n    \"Cap\",\n    \"Bracers\",\n    \"Dragoon Gauntlets\",\n    \"Sorceress Slippers\",\n    \"Tiara\",\n    \"Wizard Slippers\",\n    \"Feather Boots\",\n    \"Circlet\",\n    \"Leather Helmet\",\n    \"Mythril Boots\",\n    \"Scales\",\n    \"Dark Knight Gauntlets\",\n    \"Tuxedo\",\n    \"Parrying Shield\",\n    \"Heels\",\n    \"Helmet\",\n    \"Assassin Garb\",\n    \"Dark Knight Helmet\",\n    \"Buckler\",\n    \"Slippers\",\n    \"Horned Helment\",\n    \"Necklace\",\n    \"Wooden Shield\",\n    \"Husk\",\n    \"Charm\",\n    \"Full Plate Armor\",\n    \"Longboots\",\n    \"Mail\",\n    \"Earrings\",\n    \"Top Hat\",\n    \"Dragoon Shield\",\n    \"Vest\",\n    \"Cloak\",\n    \"Sash\",\n    \"Belt\",\n    \"Dress Shoes\",\n    \"Dragoon Armor\",\n    \"Sorceress Robe\",\n    \"Gi\",\n    \"Steel Boots\",\n    \"Silk Robe\",\n    \"Cotton Robe\",\n    \"Robe\",\n    \"Chain Mail\",\n    \"Dark Knight Shield\",\n    \"Wizard Robe\",\n    \"Dark Knight Armor\",\n    \"Bronze Helmet\",\n    \"Gown\",\n    \"Sage Robe\",\n    \"Suit\",\n    \"Bronze Armor\",\n    \"Steel Helmet\",\n    \"Armor\",\n    \"Garb\",\n    \"Ninja Garb\",\n  ];\n  \n export const weaponItems = [\n    \"Water Scroll\",\n    \"Fire Scroll\",\n    \"Thunder Tome\",\n    \"Wind Tome\",\n    \"Dark Scroll\",\n    \"Earth Scroll\",\n    \"Light Wand\",\n    \"Thunder Wand\",\n    \"Ice Wand\",\n    \"Light Scroll\",\n    \"Dark Tome\",\n    \"Fire Staff\",\n    \"Light Staff\",\n    \"Wind Staff\",\n    \"Wind Wand\",\n    \"Dark Staff\",\n    \"Water Tome\",\n    \"Earth Tome\",\n    \"Earth Wand\",\n    \"Ice Staff\",\n    \"Thunder Staff\",\n    \"Earth Staff\",\n    \"Light Tome\",\n    \"Fire Tome\",\n    \"Ice Tome\",\n    \"Wind Scroll\",\n    \"Ice Scroll\",\n    \"Club\",\n    \"Fire Wand\",\n    \"Scroll\",\n    \"Longsword\",\n    \"Tome\",\n    \"Water Wand\",\n    \"Sickle\",\n    \"Thunder Scroll\",\n    \"Sniperbow\",\n    \"Demonica\",\n    \"Kunai\",\n    \"Grenade Launcher\",\n    \"Katana\",\n    \"Lance\",\n    \"Wand\",\n    \"Spear\",\n    \"Knife\",\n    \"Lightsaber\",\n    \"Catclaws\",\n    \"Greatsword\",\n    \"Assault Rifle\",\n    \"Rapier\",\n    \"Sabre\",\n    \"Knuckles\",\n    \"Derringer\",\n    \"Bow\",\n    \"Estoc\",\n    \"Falchion\",\n    \"Naginata\",\n    \"Axe\",\n    \"Scalers\",\n    \"Revolving Pistol\",\n    \"Sniper Rifle\",\n    \"Fists\",\n    \"Dark Wand\",\n    \"Claws\",\n    \"Shortsword\",\n    \"Claymore\",\n    \"Dagger\",\n    \"Needle\",\n    \"Tomahawk\",\n    \"Whip\",\n    \"Gatling Gun\",\n    \"Shotgun\",\n    \"Machete\",\n    \"Scythe\",\n    \"Mace\",\n    \"Blade\",\n    \"Hatchet\",\n    \"Longbow\",\n    \"Hammer\",\n    \"Scimitar\",\n    \"Parrying Dagger\",\n    \"Crossbow\",\n    \"Blunderbuss\",\n    \"Water Staff\",\n    \"Staff\",\n  ];\n  \n export const baseDefenseStats = {\n    \"Trousers\": 2,\n    \"Bronze Boots\": 3,\n    \"Amulet\": 1,\n    \"Ninja Mask\": 2,\n    \"Dark Knight Greaves\": 5,\n    \"Hood\": 1,\n    \"Dragoon Boots\": 4,\n    \"Dragoon Helmet\": 4,\n    \"Steel Shield\": 6,\n    \"Kevlar\": 7,\n    \"Leather Gloves\": 2,\n    \"Bronze Gloves\": 3,\n    \"Bandana\": 1,\n    \"Bronze Shield\": 5,\n    \"Wizard Hat\": 1,\n    \"Mythril Helmet\": 5,\n    \"Mask\": 2,\n    \"Tunic\": 2,\n    \"Ring\": 1,\n    \"Leather Armor\": 4,\n    \"Gloves\": 2,\n    \"Boots\": 3,\n    \"Greaves\": 4,\n    \"Leather Boots\": 3,\n    \"Sorceress Circlet\": 2,\n    \"Shield\": 5,\n    \"Headband\": 1,\n    \"Leggings\": 2,\n    \"Skullcap\": 2,\n    \"Silk Leggings\": 2,\n    \"Shoes\": 1,\n    \"Mythril Shield\": 6,\n    \"Wristbands\": 1,\n    \"Leather Shield\": 4,\n    \"Steel Gloves\": 4,\n    \"Feather Cap\": 1,\n    \"Gauntlets\": 4,\n    \"Mythril Armor\": 7,\n    \"Mythril Gloves\": 5,\n    \"Cap\": 1,\n    \"Bracers\": 3,\n    \"Dragoon Gauntlets\": 5,\n    \"Sorceress Slippers\": 2,\n    \"Tiara\": 1,\n    \"Wizard Slippers\": 2,\n    \"Feather Boots\": 2,\n    \"Circlet\": 1,\n    \"Leather Helmet\": 3,\n    \"Mythril Boots\": 5,\n    \"Scales\": 3,\n    \"Dark Knight Gauntlets\": 5,\n    \"Tuxedo\": 1,\n    \"Parrying Shield\": 6,\n    \"Heels\": 1,\n    \"Helmet\": 4,\n    \"Assassin Garb\": 3,\n    \"Dark Knight Helmet\": 5,\n    \"Buckler\": 3,\n    \"Slippers\": 1,\n    \"Horned Helment\": 4,\n    \"Necklace\": 1,\n    \"Wooden Shield\": 3,\n    \"Husk\": 2,\n    \"Charm\": 1,\n    \"Full Plate Armor\": 8,\n    \"Longboots\": 3,\n    \"Mail\": 5,\n    \"Earrings\": 1,\n    \"Top Hat\": 1,\n    \"Dragoon Shield\": 6,\n    \"Vest\": 2,\n    \"Cloak\": 2,\n    \"Sash\": 1,\n    \"Belt\": 1,\n    \"Dress Shoes\": 1,\n    \"Dragoon Armor\": 7,\n    \"Sorceress Robe\": 2,\n    \"Gi\": 2,\n    \"Steel Boots\": 4,\n    \"Silk Robe\": 2,\n    \"Cotton Robe\": 2,\n    \"Robe\": 2,\n    \"Chain Mail\": 6,\n    \"Dark Knight Shield\": 6,\n    \"Wizard Robe\": 2,\n    \"Dark Knight Armor\": 7,\n    \"Bronze Helmet\": 4,\n    \"Gown\": 1,\n    \"Sage Robe\": 2,\n    \"Suit\": 1,\n    \"Bronze Armor\": 5,\n    \"Steel Helmet\": 5,\n    \"Armor\": 6,\n    \"Garb\": 2,\n    \"Ninja Garb\": 3,\n  };\n  \n export const baseAttackStats = {\n    // Magical Weapons\n    \"Water Scroll\": 8,\n    \"Fire Scroll\": 10,\n    \"Thunder Tome\": 12,\n    \"Wind Tome\": 9,\n    \"Dark Scroll\": 11,\n    \"Earth Scroll\": 7,\n    \"Light Wand\": 6,\n    \"Thunder Wand\": 10,\n    \"Ice Wand\": 8,\n    \"Light Scroll\": 5,\n    \"Dark Tome\": 11,\n    \"Fire Staff\": 10,\n    \"Light Staff\": 6,\n    \"Wind Staff\": 9,\n    \"Wind Wand\": 9,\n    \"Dark Staff\": 12,\n    \"Water Tome\": 8,\n    \"Earth Tome\": 7,\n    \"Earth Wand\": 7,\n    \"Ice Staff\": 8,\n    \"Thunder Staff\": 11,\n    \"Earth Staff\": 7,\n    \"Light Tome\": 6,\n    \"Fire Tome\": 10,\n    \"Ice Tome\": 8,\n    \"Wind Scroll\": 9,\n    \"Ice Scroll\": 8,\n  \n    // Melee Weapons\n    \"Club\": 15,\n    \"Fire Wand\": 6,\n    \"Scroll\": 4,\n    \"Longsword\": 18,\n    \"Tome\": 5,\n    \"Water Wand\": 6,\n    \"Sickle\": 16,\n    \"Thunder Scroll\": 10,\n    \"Sniperbow\": 20,\n    \"Demonica\": 22,\n    \"Kunai\": 7,\n    \"Grenade Launcher\": 25,\n    \"Katana\": 19,\n    \"Lance\": 17,\n    \"Wand\": 5,\n    \"Spear\": 16,\n    \"Knife\": 10,\n    \"Lightsaber\": 23,\n    \"Catclaws\": 13,\n    \"Greatsword\": 21,\n    \"Assault Rifle\": 24,\n    \"Rapier\": 14,\n    \"Sabre\": 15,\n    \"Knuckles\": 13,\n    \"Derringer\": 9,\n    \"Bow\": 14,\n    \"Estoc\": 17,\n    \"Falchion\": 16,\n    \"Naginata\": 18,\n    \"Axe\": 17,\n    \"Scalers\": 12,\n    \"Revolving Pistol\": 11,\n    \"Sniper Rifle\": 20,\n    \"Fists\": 8,\n    \"Dark Wand\": 7,\n    \"Claws\": 12,\n    \"Shortsword\": 14,\n    \"Claymore\": 19,\n    \"Dagger\": 11,\n    \"Needle\": 7,\n    \"Tomahawk\": 12,\n    \"Whip\": 10,\n    \"Gatling Gun\": 26,\n    \"Shotgun\": 22,\n    \"Machete\": 15,\n    \"Scythe\": 18,\n    \"Mace\": 17,\n    \"Blade\": 14,\n    \"Hatchet\": 15,\n    \"Longbow\": 14,\n    \"Hammer\": 18,\n    \"Scimitar\": 16,\n    \"Parrying Dagger\": 10,\n    \"Crossbow\": 15,\n    \"Blunderbuss\": 21,\n    \"Water Staff\": 6,\n    \"Staff\": 5,\n  };\n  \n  export const weaponTypes = {\n    // Scrolls, Tomes, and Wands (Magical Weapons)\n    \"Water Scroll\": \"Water Magic\",\n    \"Fire Scroll\": \"Fire Magic\",\n    \"Thunder Tome\": \"Thunder Magic\",\n    \"Wind Tome\": \"Wind Magic\",\n    \"Dark Scroll\": \"Dark Magic\",\n    \"Earth Scroll\": \"Earth Magic\",\n    \"Light Wand\": \"Light Magic\",\n    \"Thunder Wand\": \"Thunder Magic\",\n    \"Ice Wand\": \"Ice Magic\",\n    \"Light Scroll\": \"Light Magic\",\n    \"Dark Tome\": \"Dark Magic\",\n    \"Fire Staff\": \"Fire Magic\",\n    \"Light Staff\": \"Light Magic\",\n    \"Wind Staff\": \"Wind Magic\",\n    \"Wind Wand\": \"Wind Magic\",\n    \"Dark Staff\": \"Dark Magic\",\n    \"Water Tome\": \"Water Magic\",\n    \"Earth Tome\": \"Earth Magic\",\n    \"Earth Wand\": \"Earth Magic\",\n    \"Ice Staff\": \"Ice Magic\",\n    \"Thunder Staff\": \"Thunder Magic\",\n    \"Earth Staff\": \"Earth Magic\",\n    \"Light Tome\": \"Light Magic\",\n    \"Fire Tome\": \"Fire Magic\",\n    \"Ice Tome\": \"Ice Magic\",\n    \"Wind Scroll\": \"Wind Magic\",\n    \"Ice Scroll\": \"Ice Magic\",\n    \"Fire Wand\": \"Fire Magic\",\n    \"Water Wand\": \"Water Magic\",\n  \n    // Melee and Physical Weapons\n    \"Club\": \"Blunt\",\n    \"Longsword\": \"Slash\",\n    \"Sickle\": \"Slash\",\n    \"Katana\": \"Slash\",\n    \"Lance\": \"Pierce\",\n    \"Wand\": \"Magic Conduit\",\n    \"Spear\": \"Pierce\",\n    \"Knife\": \"Stab\",\n    \"Lightsaber\": \"Energy Slash\",\n    \"Catclaws\": \"Slash\",\n    \"Greatsword\": \"Heavy Slash\",\n    \"Rapier\": \"Finesse Pierce\",\n    \"Sabre\": \"Slash\",\n    \"Knuckles\": \"Blunt\",\n    \"Derringer\": \"Small Firearm\",\n    \"Bow\": \"Ranged\",\n    \"Estoc\": \"Pierce\",\n    \"Falchion\": \"Slash\",\n    \"Naginata\": \"Slash and Pierce\",\n    \"Axe\": \"Chop\",\n    \"Scalers\": \"Climbing Tool\",\n    \"Revolving Pistol\": \"Firearm\",\n    \"Sniper Rifle\": \"Precision Ranged\",\n    \"Fists\": \"Blunt\",\n    \"Dark Wand\": \"Dark Magic\",\n    \"Claws\": \"Slash\",\n    \"Shortsword\": \"Slash\",\n    \"Claymore\": \"Heavy Slash\",\n    \"Dagger\": \"Stab\",\n    \"Needle\": \"Precision Stab\",\n    \"Tomahawk\": \"Chop\",\n    \"Whip\": \"Lash\",\n    \"Gatling Gun\": \"Rapid Firearm\",\n    \"Shotgun\": \"Spread Firearm\",\n    \"Machete\": \"Chop\",\n    \"Scythe\": \"Sweep Slash\",\n    \"Mace\": \"Blunt\",\n    \"Blade\": \"Slash\",\n    \"Hatchet\": \"Chop\",\n    \"Longbow\": \"Ranged\",\n    \"Hammer\": \"Blunt\",\n    \"Scimitar\": \"Curve Slash\",\n    \"Parrying Dagger\": \"Defensive Stab\",\n    \"Crossbow\": \"Ranged\",\n    \"Blunderbuss\": \"Spread Firearm\",\n    \"Water Staff\": \"Water Magic\",\n    \"Staff\": \"Magic Conduit\",\n    \"Kunai\": \"Throwing Weapon\",\n    \"Sniperbow\": \"Precision Ranged\",\n  \n    // Generic or Unclassified\n    \"Scroll\": \"Magic Scroll\",\n    \"Tome\": \"Magic Tome\",\n    \"Demonica\": \"Dark Magic\",\n    \"Scalers\": \"Utility\",\n    \"Fists\": \"Blunt\",\n    \"Assault Rifle\": \"Rapid Firearm\",\n  };\n  \n  export const armorTypes = {\n    \"Trousers\": \"Legs\",\n    \"Bronze Boots\": \"Feet\",\n    \"Amulet\": \"Accessory\",\n    \"Ninja Mask\": \"Head\",\n    \"Dark Knight Greaves\": \"Legs\",\n    \"Hood\": \"Head\",\n    \"Dragoon Boots\": \"Feet\",\n    \"Dragoon Helmet\": \"Head\",\n    \"Steel Shield\": \"Shield\",\n    \"Kevlar\": \"Body\",\n    \"Leather Gloves\": \"Hands\",\n    \"Bronze Gloves\": \"Hands\",\n    \"Bandana\": \"Head\",\n    \"Bronze Shield\": \"Shield\",\n    \"Wizard Hat\": \"Head\",\n    \"Mythril Helmet\": \"Head\",\n    \"Mask\": \"Head\",\n    \"Tunic\": \"Body\",\n    \"Ring\": \"Accessory\",\n    \"Leather Armor\": \"Body\",\n    \"Gloves\": \"Hands\",\n    \"Boots\": \"Feet\",\n    \"Greaves\": \"Legs\",\n    \"Leather Boots\": \"Feet\",\n    \"Sorceress Circlet\": \"Head\",\n    \"Shield\": \"Shield\",\n    \"Headband\": \"Head\",\n    \"Leggings\": \"Legs\",\n    \"Skullcap\": \"Head\",\n    \"Silk Leggings\": \"Legs\",\n    \"Shoes\": \"Feet\",\n    \"Mythril Shield\": \"Shield\",\n    \"Wristbands\": \"Hands\",\n    \"Leather Shield\": \"Shield\",\n    \"Steel Gloves\": \"Hands\",\n    \"Feather Cap\": \"Head\",\n    \"Gauntlets\": \"Hands\",\n    \"Mythril Armor\": \"Body\",\n    \"Mythril Gloves\": \"Hands\",\n    \"Cap\": \"Head\",\n    \"Bracers\": \"Arms\",\n    \"Dragoon Gauntlets\": \"Hands\",\n    \"Sorceress Slippers\": \"Feet\",\n    \"Tiara\": \"Head\",\n    \"Wizard Slippers\": \"Feet\",\n    \"Feather Boots\": \"Feet\",\n    \"Circlet\": \"Head\",\n    \"Leather Helmet\": \"Head\",\n    \"Mythril Boots\": \"Feet\",\n    \"Scales\": \"Body\",\n    \"Dark Knight Gauntlets\": \"Hands\",\n    \"Tuxedo\": \"Body\",\n    \"Parrying Shield\": \"Shield\",\n    \"Heels\": \"Feet\",\n    \"Helmet\": \"Head\",\n    \"Assassin Garb\": \"Body\",\n    \"Dark Knight Helmet\": \"Head\",\n    \"Buckler\": \"Shield\",\n    \"Slippers\": \"Feet\",\n    \"Horned Helment\": \"Head\",\n    \"Necklace\": \"Accessory\",\n    \"Wooden Shield\": \"Shield\",\n    \"Husk\": \"Body\",\n    \"Charm\": \"Accessory\",\n    \"Full Plate Armor\": \"Body\",\n    \"Longboots\": \"Feet\",\n    \"Mail\": \"Body\",\n    \"Earrings\": \"Accessory\",\n    \"Top Hat\": \"Head\",\n    \"Dragoon Shield\": \"Shield\",\n    \"Vest\": \"Body\",\n    \"Cloak\": \"Body\",\n    \"Sash\": \"Accessory\",\n    \"Belt\": \"Accessory\",\n    \"Dress Shoes\": \"Feet\",\n    \"Dragoon Armor\": \"Body\",\n    \"Sorceress Robe\": \"Body\",\n    \"Gi\": \"Body\",\n    \"Steel Boots\": \"Feet\",\n    \"Silk Robe\": \"Body\",\n    \"Cotton Robe\": \"Body\",\n    \"Robe\": \"Body\",\n    \"Chain Mail\": \"Body\",\n    \"Dark Knight Shield\": \"Shield\",\n    \"Wizard Robe\": \"Body\",\n    \"Dark Knight Armor\": \"Body\",\n    \"Bronze Helmet\": \"Head\",\n    \"Gown\": \"Body\",\n    \"Sage Robe\": \"Body\",\n    \"Suit\": \"Body\",\n    \"Bronze Armor\": \"Body\",\n    \"Steel Helmet\": \"Head\",\n    \"Armor\": \"Body\",\n    \"Garb\": \"Body\",\n    \"Ninja Garb\": \"Body\"\n  };\n  \n  \n  export const prefixes = [\n    [\"Gold\", 215],\n    [\"Adamantium\", 243],\n    [\"Black\", 195],\n    [\"Wailing\", 196],\n    [\"Sun\", 217],\n    [\"Holy\", 225],\n    [\"Everbearing\", 219],\n    [\"Bone\", 207],\n    [\"Silver\", 201],\n    [\"Divine\", 223],\n    [\"Demon\", 191],\n    [\"Zephyr\", 205],\n    [\"Fabled\", 212],\n    [\"Angelic\", 210],\n    [\"Crescent Moon\", 189],\n    [\"Profane\", 194],\n    [\"Arcane\", 217],\n    [\"Drake\", 236],\n    [\"Spectral\", 190],\n    [\"Shadow\", 222],\n    [\"Unyielding\", 208],\n    [\"Bright\", 203],\n    [\"Elven\", 226],\n    [\"Undead\", 225],\n    [\"Moon\", 212],\n    [\"Cursed\", 211],\n    [\"Faithful\", 194],\n    [\"Star\", 195],\n  ];\n  \n  export const suffixes = [\n    [\"of Spirit\", 152],\n    [\"of Dexterity\", 152],\n    [\"of Salvation\", 139],\n    [\"of Illumination\", 139],\n    [\"of Strength\", 137],\n    [\"of Tears\", 153],\n    [\"of Ruin\", 143],\n    [\"of Terror\", 132],\n    [\"of Agility\", 157],\n    [\"of Protection\", 156],\n    [\"of Intellect\", 145],\n    [\"of Vigor\", 131],\n    [\"of the Duck\", 121],\n    [\"of Spite\", 140],\n    [\"of Luck\", 128],\n    [\"of Nightmares\", 147],\n    [\"of Vigilance\", 133],\n    [\"of Rapture\", 147],\n    [\"of Fortune\", 134],\n    [\"of the Night\", 151],\n    [\"of the Kraken\", 160],\n    [\"of Destruction\", 130],\n    [\"of Despair\", 130],\n    [\"of the Panda\", 138],\n    [\"of Sorrow\", 153],\n    [\"of Soul\", 124],\n    [\"of the Frog\", 126],\n    [\"of the Ape\", 143],\n    [\"of Dreams\", 133],\n    [\"of Mercy\", 160],\n    [\"of Peace\", 141],\n    [\"of Vitality\", 152],\n    [\"of Tolerance\", 130],\n    [\"of Virtue\", 140],\n    [\"of Sin\", 148],\n    [\"of Titans\", 149],\n    [\"of the Fox\", 152],\n    [\"of the Peacock\", 139],\n    [\"of the Stag\", 126],\n    [\"of Fate\", 120],\n  ];","/Users/shirishsarkar/library-of-babel/src/page/api/bsvmap.js",[],[],"/Users/shirishsarkar/library-of-babel/src/components/BSVMapMarketplaceCard.tsx",[],[],"/Users/shirishsarkar/library-of-babel/src/page/api/requestQueueService.ts",[],[],{"ruleId":"171","severity":1,"message":"172","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":19},{"ruleId":"171","severity":1,"message":"175","line":24,"column":3,"nodeType":"173","messageId":"174","endLine":24,"endColumn":16},{"ruleId":"171","severity":1,"message":"176","line":28,"column":7,"nodeType":"173","messageId":"174","endLine":28,"endColumn":19},{"ruleId":"171","severity":1,"message":"177","line":45,"column":10,"nodeType":"173","messageId":"174","endLine":45,"endColumn":16},{"ruleId":"171","severity":1,"message":"178","line":50,"column":10,"nodeType":"173","messageId":"174","endLine":50,"endColumn":25},{"ruleId":"171","severity":1,"message":"179","line":59,"column":20,"nodeType":"173","messageId":"174","endLine":59,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":221,"column":6,"nodeType":"182","endLine":221,"endColumn":8,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":240,"column":6,"nodeType":"182","endLine":240,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":302,"column":9,"nodeType":"188","messageId":"189","endLine":302,"endColumn":21},{"ruleId":"171","severity":1,"message":"190","line":587,"column":11,"nodeType":"173","messageId":"174","endLine":587,"endColumn":21},{"ruleId":"191","severity":1,"message":"192","line":663,"column":13,"nodeType":"193","endLine":670,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"196","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":25,"column":8,"nodeType":"182","endLine":25,"endColumn":10,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":44,"column":11,"nodeType":"173","messageId":"174","endLine":44,"endColumn":20},{"ruleId":"194","severity":1,"message":"199","line":46,"column":11,"nodeType":"173","messageId":"174","endLine":46,"endColumn":20},{"ruleId":"194","severity":1,"message":"200","line":60,"column":11,"nodeType":"173","messageId":"174","endLine":60,"endColumn":18},{"ruleId":"171","severity":1,"message":"201","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"202","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"203","line":28,"column":27,"nodeType":"173","messageId":"174","endLine":28,"endColumn":43},{"ruleId":"171","severity":1,"message":"204","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":17},{"ruleId":"171","severity":1,"message":"205","line":16,"column":9,"nodeType":"173","messageId":"174","endLine":16,"endColumn":25},{"ruleId":"171","severity":1,"message":"206","line":26,"column":25,"nodeType":"173","messageId":"174","endLine":26,"endColumn":29},{"ruleId":"171","severity":1,"message":"207","line":27,"column":24,"nodeType":"173","messageId":"174","endLine":27,"endColumn":28},{"ruleId":"171","severity":1,"message":"208","line":31,"column":9,"nodeType":"173","messageId":"174","endLine":31,"endColumn":14},{"ruleId":"171","severity":1,"message":"205","line":13,"column":9,"nodeType":"173","messageId":"174","endLine":13,"endColumn":25},{"ruleId":"171","severity":1,"message":"206","line":19,"column":25,"nodeType":"173","messageId":"174","endLine":19,"endColumn":29},{"ruleId":"171","severity":1,"message":"207","line":20,"column":24,"nodeType":"173","messageId":"174","endLine":20,"endColumn":28},{"ruleId":"171","severity":1,"message":"209","line":20,"column":30,"nodeType":"173","messageId":"174","endLine":20,"endColumn":37},{"ruleId":"171","severity":1,"message":"210","line":20,"column":39,"nodeType":"173","messageId":"174","endLine":20,"endColumn":50},{"ruleId":"171","severity":1,"message":"208","line":24,"column":9,"nodeType":"173","messageId":"174","endLine":24,"endColumn":14},{"ruleId":"194","severity":1,"message":"211","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":156,"column":21,"nodeType":"193","endLine":161,"endColumn":22},{"ruleId":"180","severity":1,"message":"212","line":9,"column":8,"nodeType":"182","endLine":9,"endColumn":10,"suggestions":"213"},{"ruleId":"194","severity":1,"message":"202","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":142,"column":41,"nodeType":"193","endLine":147,"endColumn":42},{"ruleId":"180","severity":1,"message":"212","line":15,"column":8,"nodeType":"182","endLine":15,"endColumn":17,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":462,"column":5,"nodeType":"217","messageId":"218","endLine":462,"endColumn":14},{"ruleId":"215","severity":1,"message":"219","line":463,"column":5,"nodeType":"217","messageId":"218","endLine":463,"endColumn":12},"@typescript-eslint/no-unused-vars","'Analytics' is defined but never used.","Identifier","unusedVar","'SignedMessage' is defined but never used.","'initProvider' is assigned a value but never used.","'pubKey' is assigned a value but never used.","'identityAddress' is assigned a value but never used.","'setViewMode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'exchangeRate'. Either include it or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has a missing dependency: 'currentBlockHeight'. Either include it or remove the dependency array.",["221"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'dataToShow' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Line' is defined but never used.","'Chart' is defined but never used.",["222"],"'marketcap' is assigned a value but never used.","'chartData' is assigned a value but never used.","'options' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'setValidListings' is assigned a value but never used.","'pandaIcon' is defined but never used.","'USDpricePerToken' is assigned a value but never used.","'file' is assigned a value but never used.","'name' is assigned a value but never used.","'owner' is assigned a value but never used.","'gayness' is assigned a value but never used.","'subTypeData' is assigned a value but never used.","'rarityData' is defined but never used.","React Hook useEffect has a missing dependency: 'verifyRecord'. Either include it or remove the dependency array.",["223"],["224"],"no-dupe-keys","Duplicate key 'Scalers'.","ObjectExpression","unexpected","Duplicate key 'Fists'.",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"225","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [exchangeRate]",{"range":"234","text":"235"},"Update the dependencies array to be: [currentBlockHeight]",{"range":"236","text":"237"},{"range":"238","text":"235"},"Update the dependencies array to be: [verifyRecord]",{"range":"239","text":"240"},"Update the dependencies array to be: [listing, verifyRecord]",{"range":"241","text":"242"},[6868,6870],"[exchangeRate]",[7534,7536],"[currentBlockHeight]",[928,930],[314,316],"[verifyRecord]",[681,690],"[listing, verifyRecord]"]